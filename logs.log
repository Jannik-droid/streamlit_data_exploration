2023-06-17 12:35:52,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 12:35:52,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 12:35:52,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 12:35:52,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 12:35:53,523:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-17 12:39:17,285:INFO:PyCaret RegressionExperiment
2023-06-17 12:39:17,285:INFO:Logging name: reg-default-name
2023-06-17 12:39:17,285:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:39:17,285:INFO:version 3.0.2
2023-06-17 12:39:17,285:INFO:Initializing setup()
2023-06-17 12:39:17,285:INFO:self.USI: 8026
2023-06-17 12:39:17,285:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:39:17,285:INFO:Checking environment
2023-06-17 12:39:17,285:INFO:python_version: 3.9.5
2023-06-17 12:39:17,285:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:39:17,285:INFO:machine: AMD64
2023-06-17 12:39:17,295:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:39:17,299:INFO:Memory: svmem(total=17102532608, available=9215066112, percent=46.1, used=7887466496, free=9215066112)
2023-06-17 12:39:17,299:INFO:Physical Core: 8
2023-06-17 12:39:17,299:INFO:Logical Core: 16
2023-06-17 12:39:17,300:INFO:Checking libraries
2023-06-17 12:39:17,300:INFO:System:
2023-06-17 12:39:17,300:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:39:17,300:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:39:17,300:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:39:17,300:INFO:PyCaret required dependencies:
2023-06-17 12:39:17,300:INFO:                 pip: 23.1.2
2023-06-17 12:39:17,300:INFO:          setuptools: 56.0.0
2023-06-17 12:39:17,300:INFO:             pycaret: 3.0.2
2023-06-17 12:39:17,300:INFO:             IPython: 8.14.0
2023-06-17 12:39:17,300:INFO:          ipywidgets: 8.0.6
2023-06-17 12:39:17,300:INFO:                tqdm: 4.65.0
2023-06-17 12:39:17,300:INFO:               numpy: 1.22.3
2023-06-17 12:39:17,300:INFO:              pandas: 1.4.2
2023-06-17 12:39:17,300:INFO:              jinja2: 3.1.2
2023-06-17 12:39:17,300:INFO:               scipy: 1.8.0
2023-06-17 12:39:17,300:INFO:              joblib: 1.2.0
2023-06-17 12:39:17,300:INFO:             sklearn: 1.2.2
2023-06-17 12:39:17,300:INFO:                pyod: 1.0.9
2023-06-17 12:39:17,300:INFO:            imblearn: 0.10.1
2023-06-17 12:39:17,300:INFO:   category_encoders: 2.6.1
2023-06-17 12:39:17,300:INFO:            lightgbm: 3.3.5
2023-06-17 12:39:17,300:INFO:               numba: 0.57.0
2023-06-17 12:39:17,300:INFO:            requests: 2.27.1
2023-06-17 12:39:17,300:INFO:          matplotlib: 3.5.1
2023-06-17 12:39:17,300:INFO:          scikitplot: 0.3.7
2023-06-17 12:39:17,300:INFO:         yellowbrick: 1.5
2023-06-17 12:39:17,301:INFO:              plotly: 5.10.0
2023-06-17 12:39:17,301:INFO:             kaleido: 0.2.1
2023-06-17 12:39:17,301:INFO:         statsmodels: 0.14.0
2023-06-17 12:39:17,301:INFO:              sktime: 0.17.0
2023-06-17 12:39:17,301:INFO:               tbats: 1.1.3
2023-06-17 12:39:17,301:INFO:            pmdarima: 2.0.3
2023-06-17 12:39:17,301:INFO:              psutil: 5.9.5
2023-06-17 12:39:17,301:INFO:PyCaret optional dependencies:
2023-06-17 12:39:17,308:INFO:                shap: Not installed
2023-06-17 12:39:17,308:INFO:           interpret: Not installed
2023-06-17 12:39:17,308:INFO:                umap: Not installed
2023-06-17 12:39:17,308:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:39:17,308:INFO:  explainerdashboard: Not installed
2023-06-17 12:39:17,308:INFO:             autoviz: Not installed
2023-06-17 12:39:17,308:INFO:           fairlearn: Not installed
2023-06-17 12:39:17,308:INFO:             xgboost: 1.7.4
2023-06-17 12:39:17,308:INFO:            catboost: Not installed
2023-06-17 12:39:17,309:INFO:              kmodes: Not installed
2023-06-17 12:39:17,309:INFO:             mlxtend: Not installed
2023-06-17 12:39:17,309:INFO:       statsforecast: Not installed
2023-06-17 12:39:17,309:INFO:        tune_sklearn: Not installed
2023-06-17 12:39:17,309:INFO:                 ray: Not installed
2023-06-17 12:39:17,309:INFO:            hyperopt: Not installed
2023-06-17 12:39:17,309:INFO:              optuna: Not installed
2023-06-17 12:39:17,309:INFO:               skopt: Not installed
2023-06-17 12:39:17,309:INFO:              mlflow: Not installed
2023-06-17 12:39:17,309:INFO:              gradio: Not installed
2023-06-17 12:39:17,309:INFO:             fastapi: Not installed
2023-06-17 12:39:17,309:INFO:             uvicorn: Not installed
2023-06-17 12:39:17,309:INFO:              m2cgen: Not installed
2023-06-17 12:39:17,309:INFO:           evidently: Not installed
2023-06-17 12:39:17,309:INFO:               fugue: Not installed
2023-06-17 12:39:17,309:INFO:           streamlit: 1.23.1
2023-06-17 12:39:17,309:INFO:             prophet: Not installed
2023-06-17 12:39:17,309:INFO:None
2023-06-17 12:39:17,309:INFO:Set up data.
2023-06-17 12:39:17,314:INFO:Set up train/test split.
2023-06-17 12:39:17,318:INFO:Set up index.
2023-06-17 12:39:17,319:INFO:Set up folding strategy.
2023-06-17 12:39:17,319:INFO:Assigning column types.
2023-06-17 12:39:17,321:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:39:17,321:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,326:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,331:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,388:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,432:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:17,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:17,578:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,583:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,587:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,643:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,687:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:17,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:17,690:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:39:17,695:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,699:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,796:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:17,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:17,803:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,808:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,861:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,904:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:17,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:17,907:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:39:17,916:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,012:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,023:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,122:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,123:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,126:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:39:18,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,233:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,299:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,341:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,344:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:39:18,408:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,451:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,517:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,561:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,564:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:39:18,671:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,779:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,791:INFO:Preparing preprocessing pipeline...
2023-06-17 12:39:18,791:INFO:Set up simple imputation.
2023-06-17 12:39:18,793:INFO:Set up encoding of categorical features.
2023-06-17 12:39:31,855:INFO:PyCaret RegressionExperiment
2023-06-17 12:39:31,855:INFO:Logging name: reg-default-name
2023-06-17 12:39:31,855:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:39:31,855:INFO:version 3.0.2
2023-06-17 12:39:31,855:INFO:Initializing setup()
2023-06-17 12:39:31,855:INFO:self.USI: fc57
2023-06-17 12:39:31,855:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:39:31,855:INFO:Checking environment
2023-06-17 12:39:31,855:INFO:python_version: 3.9.5
2023-06-17 12:39:31,855:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:39:31,855:INFO:machine: AMD64
2023-06-17 12:39:31,855:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:39:31,859:INFO:Memory: svmem(total=17102532608, available=9234493440, percent=46.0, used=7868039168, free=9234493440)
2023-06-17 12:39:31,859:INFO:Physical Core: 8
2023-06-17 12:39:31,859:INFO:Logical Core: 16
2023-06-17 12:39:31,860:INFO:Checking libraries
2023-06-17 12:39:31,860:INFO:System:
2023-06-17 12:39:31,860:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:39:31,860:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:39:31,860:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:39:31,860:INFO:PyCaret required dependencies:
2023-06-17 12:39:31,860:INFO:                 pip: 23.1.2
2023-06-17 12:39:31,860:INFO:          setuptools: 56.0.0
2023-06-17 12:39:31,860:INFO:             pycaret: 3.0.2
2023-06-17 12:39:31,860:INFO:             IPython: 8.14.0
2023-06-17 12:39:31,860:INFO:          ipywidgets: 8.0.6
2023-06-17 12:39:31,860:INFO:                tqdm: 4.65.0
2023-06-17 12:39:31,860:INFO:               numpy: 1.22.3
2023-06-17 12:39:31,860:INFO:              pandas: 1.4.2
2023-06-17 12:39:31,860:INFO:              jinja2: 3.1.2
2023-06-17 12:39:31,860:INFO:               scipy: 1.8.0
2023-06-17 12:39:31,860:INFO:              joblib: 1.2.0
2023-06-17 12:39:31,860:INFO:             sklearn: 1.2.2
2023-06-17 12:39:31,860:INFO:                pyod: 1.0.9
2023-06-17 12:39:31,860:INFO:            imblearn: 0.10.1
2023-06-17 12:39:31,860:INFO:   category_encoders: 2.6.1
2023-06-17 12:39:31,860:INFO:            lightgbm: 3.3.5
2023-06-17 12:39:31,860:INFO:               numba: 0.57.0
2023-06-17 12:39:31,861:INFO:            requests: 2.27.1
2023-06-17 12:39:31,861:INFO:          matplotlib: 3.5.1
2023-06-17 12:39:31,861:INFO:          scikitplot: 0.3.7
2023-06-17 12:39:31,861:INFO:         yellowbrick: 1.5
2023-06-17 12:39:31,861:INFO:              plotly: 5.10.0
2023-06-17 12:39:31,861:INFO:             kaleido: 0.2.1
2023-06-17 12:39:31,861:INFO:         statsmodels: 0.14.0
2023-06-17 12:39:31,861:INFO:              sktime: 0.17.0
2023-06-17 12:39:31,861:INFO:               tbats: 1.1.3
2023-06-17 12:39:31,861:INFO:            pmdarima: 2.0.3
2023-06-17 12:39:31,861:INFO:              psutil: 5.9.5
2023-06-17 12:39:31,861:INFO:PyCaret optional dependencies:
2023-06-17 12:39:31,861:INFO:                shap: Not installed
2023-06-17 12:39:31,861:INFO:           interpret: Not installed
2023-06-17 12:39:31,861:INFO:                umap: Not installed
2023-06-17 12:39:31,861:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:39:31,861:INFO:  explainerdashboard: Not installed
2023-06-17 12:39:31,861:INFO:             autoviz: Not installed
2023-06-17 12:39:31,861:INFO:           fairlearn: Not installed
2023-06-17 12:39:31,861:INFO:             xgboost: 1.7.4
2023-06-17 12:39:31,861:INFO:            catboost: Not installed
2023-06-17 12:39:31,861:INFO:              kmodes: Not installed
2023-06-17 12:39:31,861:INFO:             mlxtend: Not installed
2023-06-17 12:39:31,862:INFO:       statsforecast: Not installed
2023-06-17 12:39:31,862:INFO:        tune_sklearn: Not installed
2023-06-17 12:39:31,862:INFO:                 ray: Not installed
2023-06-17 12:39:31,862:INFO:            hyperopt: Not installed
2023-06-17 12:39:31,862:INFO:              optuna: Not installed
2023-06-17 12:39:31,862:INFO:               skopt: Not installed
2023-06-17 12:39:31,862:INFO:              mlflow: Not installed
2023-06-17 12:39:31,862:INFO:              gradio: Not installed
2023-06-17 12:39:31,862:INFO:             fastapi: Not installed
2023-06-17 12:39:31,862:INFO:             uvicorn: Not installed
2023-06-17 12:39:31,862:INFO:              m2cgen: Not installed
2023-06-17 12:39:31,862:INFO:           evidently: Not installed
2023-06-17 12:39:31,862:INFO:               fugue: Not installed
2023-06-17 12:39:31,862:INFO:           streamlit: 1.23.1
2023-06-17 12:39:31,862:INFO:             prophet: Not installed
2023-06-17 12:39:31,862:INFO:None
2023-06-17 12:39:31,862:INFO:Set up data.
2023-06-17 12:39:39,848:INFO:PyCaret RegressionExperiment
2023-06-17 12:39:39,848:INFO:Logging name: reg-default-name
2023-06-17 12:39:39,848:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:39:39,848:INFO:version 3.0.2
2023-06-17 12:39:39,848:INFO:Initializing setup()
2023-06-17 12:39:39,848:INFO:self.USI: d2f2
2023-06-17 12:39:39,848:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:39:39,848:INFO:Checking environment
2023-06-17 12:39:39,848:INFO:python_version: 3.9.5
2023-06-17 12:39:39,848:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:39:39,848:INFO:machine: AMD64
2023-06-17 12:39:39,848:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:39:39,852:INFO:Memory: svmem(total=17102532608, available=9243717632, percent=46.0, used=7858814976, free=9243717632)
2023-06-17 12:39:39,852:INFO:Physical Core: 8
2023-06-17 12:39:39,852:INFO:Logical Core: 16
2023-06-17 12:39:39,852:INFO:Checking libraries
2023-06-17 12:39:39,852:INFO:System:
2023-06-17 12:39:39,852:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:39:39,852:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:39:39,852:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:39:39,853:INFO:PyCaret required dependencies:
2023-06-17 12:39:39,853:INFO:                 pip: 23.1.2
2023-06-17 12:39:39,853:INFO:          setuptools: 56.0.0
2023-06-17 12:39:39,853:INFO:             pycaret: 3.0.2
2023-06-17 12:39:39,853:INFO:             IPython: 8.14.0
2023-06-17 12:39:39,853:INFO:          ipywidgets: 8.0.6
2023-06-17 12:39:39,853:INFO:                tqdm: 4.65.0
2023-06-17 12:39:39,853:INFO:               numpy: 1.22.3
2023-06-17 12:39:39,853:INFO:              pandas: 1.4.2
2023-06-17 12:39:39,853:INFO:              jinja2: 3.1.2
2023-06-17 12:39:39,853:INFO:               scipy: 1.8.0
2023-06-17 12:39:39,853:INFO:              joblib: 1.2.0
2023-06-17 12:39:39,853:INFO:             sklearn: 1.2.2
2023-06-17 12:39:39,853:INFO:                pyod: 1.0.9
2023-06-17 12:39:39,853:INFO:            imblearn: 0.10.1
2023-06-17 12:39:39,853:INFO:   category_encoders: 2.6.1
2023-06-17 12:39:39,853:INFO:            lightgbm: 3.3.5
2023-06-17 12:39:39,853:INFO:               numba: 0.57.0
2023-06-17 12:39:39,853:INFO:            requests: 2.27.1
2023-06-17 12:39:39,853:INFO:          matplotlib: 3.5.1
2023-06-17 12:39:39,853:INFO:          scikitplot: 0.3.7
2023-06-17 12:39:39,853:INFO:         yellowbrick: 1.5
2023-06-17 12:39:39,853:INFO:              plotly: 5.10.0
2023-06-17 12:39:39,853:INFO:             kaleido: 0.2.1
2023-06-17 12:39:39,853:INFO:         statsmodels: 0.14.0
2023-06-17 12:39:39,853:INFO:              sktime: 0.17.0
2023-06-17 12:39:39,853:INFO:               tbats: 1.1.3
2023-06-17 12:39:39,853:INFO:            pmdarima: 2.0.3
2023-06-17 12:39:39,853:INFO:              psutil: 5.9.5
2023-06-17 12:39:39,854:INFO:PyCaret optional dependencies:
2023-06-17 12:39:39,854:INFO:                shap: Not installed
2023-06-17 12:39:39,854:INFO:           interpret: Not installed
2023-06-17 12:39:39,854:INFO:                umap: Not installed
2023-06-17 12:39:39,854:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:39:39,854:INFO:  explainerdashboard: Not installed
2023-06-17 12:39:39,854:INFO:             autoviz: Not installed
2023-06-17 12:39:39,854:INFO:           fairlearn: Not installed
2023-06-17 12:39:39,854:INFO:             xgboost: 1.7.4
2023-06-17 12:39:39,854:INFO:            catboost: Not installed
2023-06-17 12:39:39,854:INFO:              kmodes: Not installed
2023-06-17 12:39:39,854:INFO:             mlxtend: Not installed
2023-06-17 12:39:39,854:INFO:       statsforecast: Not installed
2023-06-17 12:39:39,854:INFO:        tune_sklearn: Not installed
2023-06-17 12:39:39,854:INFO:                 ray: Not installed
2023-06-17 12:39:39,854:INFO:            hyperopt: Not installed
2023-06-17 12:39:39,854:INFO:              optuna: Not installed
2023-06-17 12:39:39,854:INFO:               skopt: Not installed
2023-06-17 12:39:39,854:INFO:              mlflow: Not installed
2023-06-17 12:39:39,854:INFO:              gradio: Not installed
2023-06-17 12:39:39,854:INFO:             fastapi: Not installed
2023-06-17 12:39:39,854:INFO:             uvicorn: Not installed
2023-06-17 12:39:39,854:INFO:              m2cgen: Not installed
2023-06-17 12:39:39,854:INFO:           evidently: Not installed
2023-06-17 12:39:39,854:INFO:               fugue: Not installed
2023-06-17 12:39:39,854:INFO:           streamlit: 1.23.1
2023-06-17 12:39:39,854:INFO:             prophet: Not installed
2023-06-17 12:39:39,854:INFO:None
2023-06-17 12:39:39,854:INFO:Set up data.
2023-06-17 12:39:39,860:INFO:Set up train/test split.
2023-06-17 12:39:39,865:INFO:Set up index.
2023-06-17 12:39:39,865:INFO:Set up folding strategy.
2023-06-17 12:39:39,865:INFO:Assigning column types.
2023-06-17 12:39:39,868:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:39:39,868:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,873:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,877:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,977:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,977:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:39,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:39,980:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,985:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,989:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,087:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,090:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:39:40,094:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,099:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,197:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,204:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,209:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,265:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,309:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,312:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:39:40,321:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,376:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,418:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,418:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,430:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,485:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,529:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,529:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,532:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:39:40,595:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,638:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,704:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,747:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,749:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:39:40,813:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,857:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,922:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,965:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,968:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:39:41,075:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:41,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:41,184:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:41,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:41,187:INFO:Preparing preprocessing pipeline...
2023-06-17 12:39:41,187:INFO:Set up simple imputation.
2023-06-17 12:39:41,189:INFO:Set up encoding of categorical features.
2023-06-17 12:40:28,743:INFO:PyCaret ClassificationExperiment
2023-06-17 12:40:28,743:INFO:Logging name: clf-default-name
2023-06-17 12:40:28,743:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:40:28,743:INFO:version 3.0.2
2023-06-17 12:40:28,744:INFO:Initializing setup()
2023-06-17 12:40:28,744:INFO:self.USI: 0d19
2023-06-17 12:40:28,744:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:40:28,744:INFO:Checking environment
2023-06-17 12:40:28,744:INFO:python_version: 3.9.5
2023-06-17 12:40:28,744:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:40:28,744:INFO:machine: AMD64
2023-06-17 12:40:28,744:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:40:28,747:INFO:Memory: svmem(total=17102532608, available=9190006784, percent=46.3, used=7912525824, free=9190006784)
2023-06-17 12:40:28,747:INFO:Physical Core: 8
2023-06-17 12:40:28,748:INFO:Logical Core: 16
2023-06-17 12:40:28,748:INFO:Checking libraries
2023-06-17 12:40:28,748:INFO:System:
2023-06-17 12:40:28,748:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:40:28,748:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:40:28,748:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:40:28,748:INFO:PyCaret required dependencies:
2023-06-17 12:40:28,748:INFO:                 pip: 23.1.2
2023-06-17 12:40:28,748:INFO:          setuptools: 56.0.0
2023-06-17 12:40:28,748:INFO:             pycaret: 3.0.2
2023-06-17 12:40:28,748:INFO:             IPython: 8.14.0
2023-06-17 12:40:28,748:INFO:          ipywidgets: 8.0.6
2023-06-17 12:40:28,748:INFO:                tqdm: 4.65.0
2023-06-17 12:40:28,748:INFO:               numpy: 1.22.3
2023-06-17 12:40:28,748:INFO:              pandas: 1.4.2
2023-06-17 12:40:28,748:INFO:              jinja2: 3.1.2
2023-06-17 12:40:28,748:INFO:               scipy: 1.8.0
2023-06-17 12:40:28,748:INFO:              joblib: 1.2.0
2023-06-17 12:40:28,748:INFO:             sklearn: 1.2.2
2023-06-17 12:40:28,748:INFO:                pyod: 1.0.9
2023-06-17 12:40:28,748:INFO:            imblearn: 0.10.1
2023-06-17 12:40:28,748:INFO:   category_encoders: 2.6.1
2023-06-17 12:40:28,748:INFO:            lightgbm: 3.3.5
2023-06-17 12:40:28,748:INFO:               numba: 0.57.0
2023-06-17 12:40:28,748:INFO:            requests: 2.27.1
2023-06-17 12:40:28,748:INFO:          matplotlib: 3.5.1
2023-06-17 12:40:28,748:INFO:          scikitplot: 0.3.7
2023-06-17 12:40:28,748:INFO:         yellowbrick: 1.5
2023-06-17 12:40:28,748:INFO:              plotly: 5.10.0
2023-06-17 12:40:28,748:INFO:             kaleido: 0.2.1
2023-06-17 12:40:28,748:INFO:         statsmodels: 0.14.0
2023-06-17 12:40:28,748:INFO:              sktime: 0.17.0
2023-06-17 12:40:28,749:INFO:               tbats: 1.1.3
2023-06-17 12:40:28,749:INFO:            pmdarima: 2.0.3
2023-06-17 12:40:28,749:INFO:              psutil: 5.9.5
2023-06-17 12:40:28,749:INFO:PyCaret optional dependencies:
2023-06-17 12:40:28,749:INFO:                shap: Not installed
2023-06-17 12:40:28,749:INFO:           interpret: Not installed
2023-06-17 12:40:28,749:INFO:                umap: Not installed
2023-06-17 12:40:28,749:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:40:28,749:INFO:  explainerdashboard: Not installed
2023-06-17 12:40:28,749:INFO:             autoviz: Not installed
2023-06-17 12:40:28,749:INFO:           fairlearn: Not installed
2023-06-17 12:40:28,749:INFO:             xgboost: 1.7.4
2023-06-17 12:40:28,749:INFO:            catboost: Not installed
2023-06-17 12:40:28,749:INFO:              kmodes: Not installed
2023-06-17 12:40:28,749:INFO:             mlxtend: Not installed
2023-06-17 12:40:28,749:INFO:       statsforecast: Not installed
2023-06-17 12:40:28,749:INFO:        tune_sklearn: Not installed
2023-06-17 12:40:28,749:INFO:                 ray: Not installed
2023-06-17 12:40:28,749:INFO:            hyperopt: Not installed
2023-06-17 12:40:28,749:INFO:              optuna: Not installed
2023-06-17 12:40:28,749:INFO:               skopt: Not installed
2023-06-17 12:40:28,749:INFO:              mlflow: Not installed
2023-06-17 12:40:28,749:INFO:              gradio: Not installed
2023-06-17 12:40:28,749:INFO:             fastapi: Not installed
2023-06-17 12:40:28,749:INFO:             uvicorn: Not installed
2023-06-17 12:40:28,749:INFO:              m2cgen: Not installed
2023-06-17 12:40:28,749:INFO:           evidently: Not installed
2023-06-17 12:40:28,749:INFO:               fugue: Not installed
2023-06-17 12:40:28,749:INFO:           streamlit: 1.23.1
2023-06-17 12:40:28,749:INFO:             prophet: Not installed
2023-06-17 12:40:28,750:INFO:None
2023-06-17 12:40:28,750:INFO:Set up data.
2023-06-17 12:40:28,755:INFO:Set up train/test split.
2023-06-17 12:40:28,758:INFO:Set up index.
2023-06-17 12:40:28,758:INFO:Set up folding strategy.
2023-06-17 12:40:28,759:INFO:Assigning column types.
2023-06-17 12:40:28,761:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:40:28,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,843:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:28,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:28,891:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,919:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:28,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:28,922:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:40:28,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,994:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:28,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:29,041:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:40:29,068:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:29,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:29,071:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:40:29,142:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:29,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:29,215:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:29,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:29,218:INFO:Preparing preprocessing pipeline...
2023-06-17 12:40:29,220:INFO:Set up simple imputation.
2023-06-17 12:40:29,222:INFO:Set up encoding of categorical features.
2023-06-17 12:42:50,295:INFO:PyCaret ClassificationExperiment
2023-06-17 12:42:50,295:INFO:Logging name: clf-default-name
2023-06-17 12:42:50,295:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:42:50,295:INFO:version 3.0.2
2023-06-17 12:42:50,295:INFO:Initializing setup()
2023-06-17 12:42:50,295:INFO:self.USI: 0ff7
2023-06-17 12:42:50,295:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:42:50,295:INFO:Checking environment
2023-06-17 12:42:50,296:INFO:python_version: 3.9.5
2023-06-17 12:42:50,296:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:42:50,296:INFO:machine: AMD64
2023-06-17 12:42:50,296:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:42:50,300:INFO:Memory: svmem(total=17102532608, available=9206042624, percent=46.2, used=7896489984, free=9206042624)
2023-06-17 12:42:50,300:INFO:Physical Core: 8
2023-06-17 12:42:50,300:INFO:Logical Core: 16
2023-06-17 12:42:50,300:INFO:Checking libraries
2023-06-17 12:42:50,300:INFO:System:
2023-06-17 12:42:50,300:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:42:50,300:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:42:50,300:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:42:50,300:INFO:PyCaret required dependencies:
2023-06-17 12:42:50,300:INFO:                 pip: 23.1.2
2023-06-17 12:42:50,300:INFO:          setuptools: 56.0.0
2023-06-17 12:42:50,300:INFO:             pycaret: 3.0.2
2023-06-17 12:42:50,300:INFO:             IPython: 8.14.0
2023-06-17 12:42:50,300:INFO:          ipywidgets: 8.0.6
2023-06-17 12:42:50,300:INFO:                tqdm: 4.65.0
2023-06-17 12:42:50,300:INFO:               numpy: 1.22.3
2023-06-17 12:42:50,300:INFO:              pandas: 1.4.2
2023-06-17 12:42:50,300:INFO:              jinja2: 3.1.2
2023-06-17 12:42:50,300:INFO:               scipy: 1.8.0
2023-06-17 12:42:50,300:INFO:              joblib: 1.2.0
2023-06-17 12:42:50,300:INFO:             sklearn: 1.2.2
2023-06-17 12:42:50,300:INFO:                pyod: 1.0.9
2023-06-17 12:42:50,300:INFO:            imblearn: 0.10.1
2023-06-17 12:42:50,300:INFO:   category_encoders: 2.6.1
2023-06-17 12:42:50,300:INFO:            lightgbm: 3.3.5
2023-06-17 12:42:50,300:INFO:               numba: 0.57.0
2023-06-17 12:42:50,301:INFO:            requests: 2.27.1
2023-06-17 12:42:50,301:INFO:          matplotlib: 3.5.1
2023-06-17 12:42:50,301:INFO:          scikitplot: 0.3.7
2023-06-17 12:42:50,301:INFO:         yellowbrick: 1.5
2023-06-17 12:42:50,301:INFO:              plotly: 5.10.0
2023-06-17 12:42:50,301:INFO:             kaleido: 0.2.1
2023-06-17 12:42:50,301:INFO:         statsmodels: 0.14.0
2023-06-17 12:42:50,301:INFO:              sktime: 0.17.0
2023-06-17 12:42:50,301:INFO:               tbats: 1.1.3
2023-06-17 12:42:50,301:INFO:            pmdarima: 2.0.3
2023-06-17 12:42:50,301:INFO:              psutil: 5.9.5
2023-06-17 12:42:50,301:INFO:PyCaret optional dependencies:
2023-06-17 12:42:50,301:INFO:                shap: Not installed
2023-06-17 12:42:50,301:INFO:           interpret: Not installed
2023-06-17 12:42:50,301:INFO:                umap: Not installed
2023-06-17 12:42:50,301:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:42:50,301:INFO:  explainerdashboard: Not installed
2023-06-17 12:42:50,301:INFO:             autoviz: Not installed
2023-06-17 12:42:50,301:INFO:           fairlearn: Not installed
2023-06-17 12:42:50,301:INFO:             xgboost: 1.7.4
2023-06-17 12:42:50,301:INFO:            catboost: Not installed
2023-06-17 12:42:50,301:INFO:              kmodes: Not installed
2023-06-17 12:42:50,301:INFO:             mlxtend: Not installed
2023-06-17 12:42:50,301:INFO:       statsforecast: Not installed
2023-06-17 12:42:50,301:INFO:        tune_sklearn: Not installed
2023-06-17 12:42:50,301:INFO:                 ray: Not installed
2023-06-17 12:42:50,301:INFO:            hyperopt: Not installed
2023-06-17 12:42:50,302:INFO:              optuna: Not installed
2023-06-17 12:42:50,302:INFO:               skopt: Not installed
2023-06-17 12:42:50,302:INFO:              mlflow: Not installed
2023-06-17 12:42:50,302:INFO:              gradio: Not installed
2023-06-17 12:42:50,302:INFO:             fastapi: Not installed
2023-06-17 12:42:50,302:INFO:             uvicorn: Not installed
2023-06-17 12:42:50,302:INFO:              m2cgen: Not installed
2023-06-17 12:42:50,302:INFO:           evidently: Not installed
2023-06-17 12:42:50,302:INFO:               fugue: Not installed
2023-06-17 12:42:50,302:INFO:           streamlit: 1.23.1
2023-06-17 12:42:50,302:INFO:             prophet: Not installed
2023-06-17 12:42:50,302:INFO:None
2023-06-17 12:42:50,302:INFO:Set up data.
2023-06-17 12:42:50,307:INFO:Set up train/test split.
2023-06-17 12:42:58,197:INFO:PyCaret ClassificationExperiment
2023-06-17 12:42:58,197:INFO:Logging name: clf-default-name
2023-06-17 12:42:58,197:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:42:58,197:INFO:version 3.0.2
2023-06-17 12:42:58,197:INFO:Initializing setup()
2023-06-17 12:42:58,197:INFO:self.USI: 51d1
2023-06-17 12:42:58,197:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:42:58,197:INFO:Checking environment
2023-06-17 12:42:58,197:INFO:python_version: 3.9.5
2023-06-17 12:42:58,197:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:42:58,198:INFO:machine: AMD64
2023-06-17 12:42:58,198:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:42:58,201:INFO:Memory: svmem(total=17102532608, available=9197432832, percent=46.2, used=7905099776, free=9197432832)
2023-06-17 12:42:58,202:INFO:Physical Core: 8
2023-06-17 12:42:58,202:INFO:Logical Core: 16
2023-06-17 12:42:58,202:INFO:Checking libraries
2023-06-17 12:42:58,202:INFO:System:
2023-06-17 12:42:58,202:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:42:58,202:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:42:58,202:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:42:58,202:INFO:PyCaret required dependencies:
2023-06-17 12:42:58,202:INFO:                 pip: 23.1.2
2023-06-17 12:42:58,202:INFO:          setuptools: 56.0.0
2023-06-17 12:42:58,202:INFO:             pycaret: 3.0.2
2023-06-17 12:42:58,202:INFO:             IPython: 8.14.0
2023-06-17 12:42:58,202:INFO:          ipywidgets: 8.0.6
2023-06-17 12:42:58,202:INFO:                tqdm: 4.65.0
2023-06-17 12:42:58,202:INFO:               numpy: 1.22.3
2023-06-17 12:42:58,202:INFO:              pandas: 1.4.2
2023-06-17 12:42:58,202:INFO:              jinja2: 3.1.2
2023-06-17 12:42:58,202:INFO:               scipy: 1.8.0
2023-06-17 12:42:58,202:INFO:              joblib: 1.2.0
2023-06-17 12:42:58,202:INFO:             sklearn: 1.2.2
2023-06-17 12:42:58,202:INFO:                pyod: 1.0.9
2023-06-17 12:42:58,202:INFO:            imblearn: 0.10.1
2023-06-17 12:42:58,202:INFO:   category_encoders: 2.6.1
2023-06-17 12:42:58,202:INFO:            lightgbm: 3.3.5
2023-06-17 12:42:58,202:INFO:               numba: 0.57.0
2023-06-17 12:42:58,202:INFO:            requests: 2.27.1
2023-06-17 12:42:58,202:INFO:          matplotlib: 3.5.1
2023-06-17 12:42:58,202:INFO:          scikitplot: 0.3.7
2023-06-17 12:42:58,202:INFO:         yellowbrick: 1.5
2023-06-17 12:42:58,202:INFO:              plotly: 5.10.0
2023-06-17 12:42:58,202:INFO:             kaleido: 0.2.1
2023-06-17 12:42:58,202:INFO:         statsmodels: 0.14.0
2023-06-17 12:42:58,203:INFO:              sktime: 0.17.0
2023-06-17 12:42:58,203:INFO:               tbats: 1.1.3
2023-06-17 12:42:58,203:INFO:            pmdarima: 2.0.3
2023-06-17 12:42:58,203:INFO:              psutil: 5.9.5
2023-06-17 12:42:58,203:INFO:PyCaret optional dependencies:
2023-06-17 12:42:58,203:INFO:                shap: Not installed
2023-06-17 12:42:58,203:INFO:           interpret: Not installed
2023-06-17 12:42:58,203:INFO:                umap: Not installed
2023-06-17 12:42:58,203:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:42:58,203:INFO:  explainerdashboard: Not installed
2023-06-17 12:42:58,203:INFO:             autoviz: Not installed
2023-06-17 12:42:58,203:INFO:           fairlearn: Not installed
2023-06-17 12:42:58,203:INFO:             xgboost: 1.7.4
2023-06-17 12:42:58,203:INFO:            catboost: Not installed
2023-06-17 12:42:58,203:INFO:              kmodes: Not installed
2023-06-17 12:42:58,203:INFO:             mlxtend: Not installed
2023-06-17 12:42:58,203:INFO:       statsforecast: Not installed
2023-06-17 12:42:58,203:INFO:        tune_sklearn: Not installed
2023-06-17 12:42:58,203:INFO:                 ray: Not installed
2023-06-17 12:42:58,203:INFO:            hyperopt: Not installed
2023-06-17 12:42:58,203:INFO:              optuna: Not installed
2023-06-17 12:42:58,203:INFO:               skopt: Not installed
2023-06-17 12:42:58,203:INFO:              mlflow: Not installed
2023-06-17 12:42:58,203:INFO:              gradio: Not installed
2023-06-17 12:42:58,203:INFO:             fastapi: Not installed
2023-06-17 12:42:58,203:INFO:             uvicorn: Not installed
2023-06-17 12:42:58,203:INFO:              m2cgen: Not installed
2023-06-17 12:42:58,203:INFO:           evidently: Not installed
2023-06-17 12:42:58,203:INFO:               fugue: Not installed
2023-06-17 12:42:58,203:INFO:           streamlit: 1.23.1
2023-06-17 12:42:58,204:INFO:             prophet: Not installed
2023-06-17 12:42:58,204:INFO:None
2023-06-17 12:42:58,204:INFO:Set up data.
2023-06-17 12:43:00,365:INFO:PyCaret ClassificationExperiment
2023-06-17 12:43:00,366:INFO:Logging name: clf-default-name
2023-06-17 12:43:00,366:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:43:00,366:INFO:version 3.0.2
2023-06-17 12:43:00,366:INFO:Initializing setup()
2023-06-17 12:43:00,366:INFO:self.USI: 0d5a
2023-06-17 12:43:00,366:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:43:00,366:INFO:Checking environment
2023-06-17 12:43:00,366:INFO:python_version: 3.9.5
2023-06-17 12:43:00,366:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:43:00,366:INFO:machine: AMD64
2023-06-17 12:43:00,366:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:43:00,370:INFO:Memory: svmem(total=17102532608, available=9205927936, percent=46.2, used=7896604672, free=9205927936)
2023-06-17 12:43:00,370:INFO:Physical Core: 8
2023-06-17 12:43:00,370:INFO:Logical Core: 16
2023-06-17 12:43:00,370:INFO:Checking libraries
2023-06-17 12:43:00,370:INFO:System:
2023-06-17 12:43:00,370:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:43:00,370:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:43:00,370:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:43:00,370:INFO:PyCaret required dependencies:
2023-06-17 12:43:00,370:INFO:                 pip: 23.1.2
2023-06-17 12:43:00,370:INFO:          setuptools: 56.0.0
2023-06-17 12:43:00,370:INFO:             pycaret: 3.0.2
2023-06-17 12:43:00,370:INFO:             IPython: 8.14.0
2023-06-17 12:43:00,370:INFO:          ipywidgets: 8.0.6
2023-06-17 12:43:00,370:INFO:                tqdm: 4.65.0
2023-06-17 12:43:00,370:INFO:               numpy: 1.22.3
2023-06-17 12:43:00,370:INFO:              pandas: 1.4.2
2023-06-17 12:43:00,370:INFO:              jinja2: 3.1.2
2023-06-17 12:43:00,370:INFO:               scipy: 1.8.0
2023-06-17 12:43:00,370:INFO:              joblib: 1.2.0
2023-06-17 12:43:00,370:INFO:             sklearn: 1.2.2
2023-06-17 12:43:00,370:INFO:                pyod: 1.0.9
2023-06-17 12:43:00,370:INFO:            imblearn: 0.10.1
2023-06-17 12:43:00,370:INFO:   category_encoders: 2.6.1
2023-06-17 12:43:00,371:INFO:            lightgbm: 3.3.5
2023-06-17 12:43:00,371:INFO:               numba: 0.57.0
2023-06-17 12:43:00,371:INFO:            requests: 2.27.1
2023-06-17 12:43:00,371:INFO:          matplotlib: 3.5.1
2023-06-17 12:43:00,371:INFO:          scikitplot: 0.3.7
2023-06-17 12:43:00,371:INFO:         yellowbrick: 1.5
2023-06-17 12:43:00,371:INFO:              plotly: 5.10.0
2023-06-17 12:43:00,371:INFO:             kaleido: 0.2.1
2023-06-17 12:43:00,371:INFO:         statsmodels: 0.14.0
2023-06-17 12:43:00,371:INFO:              sktime: 0.17.0
2023-06-17 12:43:00,371:INFO:               tbats: 1.1.3
2023-06-17 12:43:00,371:INFO:            pmdarima: 2.0.3
2023-06-17 12:43:00,371:INFO:              psutil: 5.9.5
2023-06-17 12:43:00,371:INFO:PyCaret optional dependencies:
2023-06-17 12:43:00,371:INFO:                shap: Not installed
2023-06-17 12:43:00,371:INFO:           interpret: Not installed
2023-06-17 12:43:00,371:INFO:                umap: Not installed
2023-06-17 12:43:00,371:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:43:00,371:INFO:  explainerdashboard: Not installed
2023-06-17 12:43:00,371:INFO:             autoviz: Not installed
2023-06-17 12:43:00,371:INFO:           fairlearn: Not installed
2023-06-17 12:43:00,371:INFO:             xgboost: 1.7.4
2023-06-17 12:43:00,371:INFO:            catboost: Not installed
2023-06-17 12:43:00,371:INFO:              kmodes: Not installed
2023-06-17 12:43:00,371:INFO:             mlxtend: Not installed
2023-06-17 12:43:00,371:INFO:       statsforecast: Not installed
2023-06-17 12:43:00,371:INFO:        tune_sklearn: Not installed
2023-06-17 12:43:00,371:INFO:                 ray: Not installed
2023-06-17 12:43:00,371:INFO:            hyperopt: Not installed
2023-06-17 12:43:00,371:INFO:              optuna: Not installed
2023-06-17 12:43:00,371:INFO:               skopt: Not installed
2023-06-17 12:43:00,372:INFO:              mlflow: Not installed
2023-06-17 12:43:00,372:INFO:              gradio: Not installed
2023-06-17 12:43:00,372:INFO:             fastapi: Not installed
2023-06-17 12:43:00,372:INFO:             uvicorn: Not installed
2023-06-17 12:43:00,372:INFO:              m2cgen: Not installed
2023-06-17 12:43:00,372:INFO:           evidently: Not installed
2023-06-17 12:43:00,372:INFO:               fugue: Not installed
2023-06-17 12:43:00,372:INFO:           streamlit: 1.23.1
2023-06-17 12:43:00,372:INFO:             prophet: Not installed
2023-06-17 12:43:00,372:INFO:None
2023-06-17 12:43:00,372:INFO:Set up data.
2023-06-17 12:43:02,366:INFO:PyCaret ClassificationExperiment
2023-06-17 12:43:02,366:INFO:Logging name: clf-default-name
2023-06-17 12:43:02,366:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:43:02,366:INFO:version 3.0.2
2023-06-17 12:43:02,366:INFO:Initializing setup()
2023-06-17 12:43:02,366:INFO:self.USI: 3163
2023-06-17 12:43:02,366:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:43:02,366:INFO:Checking environment
2023-06-17 12:43:02,366:INFO:python_version: 3.9.5
2023-06-17 12:43:02,366:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:43:02,366:INFO:machine: AMD64
2023-06-17 12:43:02,366:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:43:02,370:INFO:Memory: svmem(total=17102532608, available=9211850752, percent=46.1, used=7890681856, free=9211850752)
2023-06-17 12:43:02,370:INFO:Physical Core: 8
2023-06-17 12:43:02,370:INFO:Logical Core: 16
2023-06-17 12:43:02,370:INFO:Checking libraries
2023-06-17 12:43:02,370:INFO:System:
2023-06-17 12:43:02,371:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:43:02,371:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:43:02,371:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:43:02,371:INFO:PyCaret required dependencies:
2023-06-17 12:43:02,371:INFO:                 pip: 23.1.2
2023-06-17 12:43:02,371:INFO:          setuptools: 56.0.0
2023-06-17 12:43:02,371:INFO:             pycaret: 3.0.2
2023-06-17 12:43:02,371:INFO:             IPython: 8.14.0
2023-06-17 12:43:02,371:INFO:          ipywidgets: 8.0.6
2023-06-17 12:43:02,371:INFO:                tqdm: 4.65.0
2023-06-17 12:43:02,371:INFO:               numpy: 1.22.3
2023-06-17 12:43:02,371:INFO:              pandas: 1.4.2
2023-06-17 12:43:02,371:INFO:              jinja2: 3.1.2
2023-06-17 12:43:02,371:INFO:               scipy: 1.8.0
2023-06-17 12:43:02,371:INFO:              joblib: 1.2.0
2023-06-17 12:43:02,371:INFO:             sklearn: 1.2.2
2023-06-17 12:43:02,371:INFO:                pyod: 1.0.9
2023-06-17 12:43:02,371:INFO:            imblearn: 0.10.1
2023-06-17 12:43:02,371:INFO:   category_encoders: 2.6.1
2023-06-17 12:43:02,371:INFO:            lightgbm: 3.3.5
2023-06-17 12:43:02,371:INFO:               numba: 0.57.0
2023-06-17 12:43:02,371:INFO:            requests: 2.27.1
2023-06-17 12:43:02,371:INFO:          matplotlib: 3.5.1
2023-06-17 12:43:02,371:INFO:          scikitplot: 0.3.7
2023-06-17 12:43:02,371:INFO:         yellowbrick: 1.5
2023-06-17 12:43:02,371:INFO:              plotly: 5.10.0
2023-06-17 12:43:02,371:INFO:             kaleido: 0.2.1
2023-06-17 12:43:02,371:INFO:         statsmodels: 0.14.0
2023-06-17 12:43:02,371:INFO:              sktime: 0.17.0
2023-06-17 12:43:02,371:INFO:               tbats: 1.1.3
2023-06-17 12:43:02,372:INFO:            pmdarima: 2.0.3
2023-06-17 12:43:02,372:INFO:              psutil: 5.9.5
2023-06-17 12:43:02,372:INFO:PyCaret optional dependencies:
2023-06-17 12:43:02,372:INFO:                shap: Not installed
2023-06-17 12:43:02,372:INFO:           interpret: Not installed
2023-06-17 12:43:02,372:INFO:                umap: Not installed
2023-06-17 12:43:02,372:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:43:02,372:INFO:  explainerdashboard: Not installed
2023-06-17 12:43:02,372:INFO:             autoviz: Not installed
2023-06-17 12:43:02,372:INFO:           fairlearn: Not installed
2023-06-17 12:43:02,372:INFO:             xgboost: 1.7.4
2023-06-17 12:43:02,372:INFO:            catboost: Not installed
2023-06-17 12:43:02,372:INFO:              kmodes: Not installed
2023-06-17 12:43:02,372:INFO:             mlxtend: Not installed
2023-06-17 12:43:02,372:INFO:       statsforecast: Not installed
2023-06-17 12:43:02,372:INFO:        tune_sklearn: Not installed
2023-06-17 12:43:02,372:INFO:                 ray: Not installed
2023-06-17 12:43:02,372:INFO:            hyperopt: Not installed
2023-06-17 12:43:02,372:INFO:              optuna: Not installed
2023-06-17 12:43:02,372:INFO:               skopt: Not installed
2023-06-17 12:43:02,372:INFO:              mlflow: Not installed
2023-06-17 12:43:02,372:INFO:              gradio: Not installed
2023-06-17 12:43:02,372:INFO:             fastapi: Not installed
2023-06-17 12:43:02,372:INFO:             uvicorn: Not installed
2023-06-17 12:43:02,372:INFO:              m2cgen: Not installed
2023-06-17 12:43:02,372:INFO:           evidently: Not installed
2023-06-17 12:43:02,372:INFO:               fugue: Not installed
2023-06-17 12:43:02,372:INFO:           streamlit: 1.23.1
2023-06-17 12:43:02,372:INFO:             prophet: Not installed
2023-06-17 12:43:02,372:INFO:None
2023-06-17 12:43:02,372:INFO:Set up data.
2023-06-17 12:43:02,378:INFO:Set up train/test split.
2023-06-17 12:43:02,381:INFO:Set up index.
2023-06-17 12:43:02,381:INFO:Set up folding strategy.
2023-06-17 12:43:02,381:INFO:Assigning column types.
2023-06-17 12:43:02,383:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:43:02,427:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,455:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,501:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,501:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,529:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,531:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:43:02,575:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,601:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,647:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,674:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,677:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:43:02,748:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,822:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,825:INFO:Preparing preprocessing pipeline...
2023-06-17 12:43:02,826:INFO:Set up simple imputation.
2023-06-17 12:43:02,828:INFO:Set up encoding of ordinal features.
2023-06-17 12:43:02,829:INFO:Set up encoding of categorical features.
2023-06-17 12:43:04,992:INFO:PyCaret ClassificationExperiment
2023-06-17 12:43:04,993:INFO:Logging name: clf-default-name
2023-06-17 12:43:04,993:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:43:04,993:INFO:version 3.0.2
2023-06-17 12:43:04,993:INFO:Initializing setup()
2023-06-17 12:43:04,993:INFO:self.USI: 8d5f
2023-06-17 12:43:04,993:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:43:04,993:INFO:Checking environment
2023-06-17 12:43:04,993:INFO:python_version: 3.9.5
2023-06-17 12:43:04,993:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:43:04,993:INFO:machine: AMD64
2023-06-17 12:43:04,993:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:43:04,997:INFO:Memory: svmem(total=17102532608, available=9216151552, percent=46.1, used=7886381056, free=9216151552)
2023-06-17 12:43:04,997:INFO:Physical Core: 8
2023-06-17 12:43:04,997:INFO:Logical Core: 16
2023-06-17 12:43:04,997:INFO:Checking libraries
2023-06-17 12:43:04,997:INFO:System:
2023-06-17 12:43:04,997:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:43:04,997:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:43:04,997:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:43:04,997:INFO:PyCaret required dependencies:
2023-06-17 12:43:04,997:INFO:                 pip: 23.1.2
2023-06-17 12:43:04,997:INFO:          setuptools: 56.0.0
2023-06-17 12:43:04,997:INFO:             pycaret: 3.0.2
2023-06-17 12:43:04,997:INFO:             IPython: 8.14.0
2023-06-17 12:43:04,997:INFO:          ipywidgets: 8.0.6
2023-06-17 12:43:04,997:INFO:                tqdm: 4.65.0
2023-06-17 12:43:04,997:INFO:               numpy: 1.22.3
2023-06-17 12:43:04,997:INFO:              pandas: 1.4.2
2023-06-17 12:43:04,997:INFO:              jinja2: 3.1.2
2023-06-17 12:43:04,997:INFO:               scipy: 1.8.0
2023-06-17 12:43:04,998:INFO:              joblib: 1.2.0
2023-06-17 12:43:04,998:INFO:             sklearn: 1.2.2
2023-06-17 12:43:04,998:INFO:                pyod: 1.0.9
2023-06-17 12:43:04,998:INFO:            imblearn: 0.10.1
2023-06-17 12:43:04,998:INFO:   category_encoders: 2.6.1
2023-06-17 12:43:04,998:INFO:            lightgbm: 3.3.5
2023-06-17 12:43:04,998:INFO:               numba: 0.57.0
2023-06-17 12:43:04,998:INFO:            requests: 2.27.1
2023-06-17 12:43:04,998:INFO:          matplotlib: 3.5.1
2023-06-17 12:43:04,998:INFO:          scikitplot: 0.3.7
2023-06-17 12:43:04,998:INFO:         yellowbrick: 1.5
2023-06-17 12:43:04,998:INFO:              plotly: 5.10.0
2023-06-17 12:43:04,998:INFO:             kaleido: 0.2.1
2023-06-17 12:43:04,998:INFO:         statsmodels: 0.14.0
2023-06-17 12:43:04,998:INFO:              sktime: 0.17.0
2023-06-17 12:43:04,998:INFO:               tbats: 1.1.3
2023-06-17 12:43:04,998:INFO:            pmdarima: 2.0.3
2023-06-17 12:43:04,998:INFO:              psutil: 5.9.5
2023-06-17 12:43:04,998:INFO:PyCaret optional dependencies:
2023-06-17 12:43:04,998:INFO:                shap: Not installed
2023-06-17 12:43:04,998:INFO:           interpret: Not installed
2023-06-17 12:43:04,998:INFO:                umap: Not installed
2023-06-17 12:43:04,998:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:43:04,998:INFO:  explainerdashboard: Not installed
2023-06-17 12:43:04,998:INFO:             autoviz: Not installed
2023-06-17 12:43:04,998:INFO:           fairlearn: Not installed
2023-06-17 12:43:04,998:INFO:             xgboost: 1.7.4
2023-06-17 12:43:04,998:INFO:            catboost: Not installed
2023-06-17 12:43:04,998:INFO:              kmodes: Not installed
2023-06-17 12:43:04,998:INFO:             mlxtend: Not installed
2023-06-17 12:43:04,998:INFO:       statsforecast: Not installed
2023-06-17 12:43:04,998:INFO:        tune_sklearn: Not installed
2023-06-17 12:43:04,999:INFO:                 ray: Not installed
2023-06-17 12:43:04,999:INFO:            hyperopt: Not installed
2023-06-17 12:43:04,999:INFO:              optuna: Not installed
2023-06-17 12:43:04,999:INFO:               skopt: Not installed
2023-06-17 12:43:04,999:INFO:              mlflow: Not installed
2023-06-17 12:43:04,999:INFO:              gradio: Not installed
2023-06-17 12:43:04,999:INFO:             fastapi: Not installed
2023-06-17 12:43:04,999:INFO:             uvicorn: Not installed
2023-06-17 12:43:04,999:INFO:              m2cgen: Not installed
2023-06-17 12:43:04,999:INFO:           evidently: Not installed
2023-06-17 12:43:04,999:INFO:               fugue: Not installed
2023-06-17 12:43:04,999:INFO:           streamlit: 1.23.1
2023-06-17 12:43:04,999:INFO:             prophet: Not installed
2023-06-17 12:43:04,999:INFO:None
2023-06-17 12:43:04,999:INFO:Set up data.
2023-06-17 12:44:30,157:INFO:PyCaret ClassificationExperiment
2023-06-17 12:44:30,157:INFO:Logging name: clf-default-name
2023-06-17 12:44:30,157:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:44:30,157:INFO:version 3.0.2
2023-06-17 12:44:30,157:INFO:Initializing setup()
2023-06-17 12:44:30,157:INFO:self.USI: 7f1d
2023-06-17 12:44:30,157:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:44:30,157:INFO:Checking environment
2023-06-17 12:44:30,157:INFO:python_version: 3.9.5
2023-06-17 12:44:30,157:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:44:30,157:INFO:machine: AMD64
2023-06-17 12:44:30,157:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:44:30,162:INFO:Memory: svmem(total=17102532608, available=8994562048, percent=47.4, used=8107970560, free=8994562048)
2023-06-17 12:44:30,162:INFO:Physical Core: 8
2023-06-17 12:44:30,162:INFO:Logical Core: 16
2023-06-17 12:44:30,162:INFO:Checking libraries
2023-06-17 12:44:30,162:INFO:System:
2023-06-17 12:44:30,162:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:44:30,162:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:44:30,162:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:44:30,162:INFO:PyCaret required dependencies:
2023-06-17 12:44:30,162:INFO:                 pip: 23.1.2
2023-06-17 12:44:30,162:INFO:          setuptools: 56.0.0
2023-06-17 12:44:30,162:INFO:             pycaret: 3.0.2
2023-06-17 12:44:30,162:INFO:             IPython: 8.14.0
2023-06-17 12:44:30,162:INFO:          ipywidgets: 8.0.6
2023-06-17 12:44:30,162:INFO:                tqdm: 4.65.0
2023-06-17 12:44:30,162:INFO:               numpy: 1.22.3
2023-06-17 12:44:30,162:INFO:              pandas: 1.4.2
2023-06-17 12:44:30,162:INFO:              jinja2: 3.1.2
2023-06-17 12:44:30,162:INFO:               scipy: 1.8.0
2023-06-17 12:44:30,162:INFO:              joblib: 1.2.0
2023-06-17 12:44:30,162:INFO:             sklearn: 1.2.2
2023-06-17 12:44:30,162:INFO:                pyod: 1.0.9
2023-06-17 12:44:30,162:INFO:            imblearn: 0.10.1
2023-06-17 12:44:30,162:INFO:   category_encoders: 2.6.1
2023-06-17 12:44:30,162:INFO:            lightgbm: 3.3.5
2023-06-17 12:44:30,162:INFO:               numba: 0.57.0
2023-06-17 12:44:30,163:INFO:            requests: 2.27.1
2023-06-17 12:44:30,163:INFO:          matplotlib: 3.5.1
2023-06-17 12:44:30,163:INFO:          scikitplot: 0.3.7
2023-06-17 12:44:30,163:INFO:         yellowbrick: 1.5
2023-06-17 12:44:30,163:INFO:              plotly: 5.10.0
2023-06-17 12:44:30,163:INFO:             kaleido: 0.2.1
2023-06-17 12:44:30,163:INFO:         statsmodels: 0.14.0
2023-06-17 12:44:30,163:INFO:              sktime: 0.17.0
2023-06-17 12:44:30,163:INFO:               tbats: 1.1.3
2023-06-17 12:44:30,163:INFO:            pmdarima: 2.0.3
2023-06-17 12:44:30,163:INFO:              psutil: 5.9.5
2023-06-17 12:44:30,163:INFO:PyCaret optional dependencies:
2023-06-17 12:44:30,163:INFO:                shap: Not installed
2023-06-17 12:44:30,163:INFO:           interpret: Not installed
2023-06-17 12:44:30,163:INFO:                umap: Not installed
2023-06-17 12:44:30,163:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:44:30,163:INFO:  explainerdashboard: Not installed
2023-06-17 12:44:30,163:INFO:             autoviz: Not installed
2023-06-17 12:44:30,163:INFO:           fairlearn: Not installed
2023-06-17 12:44:30,163:INFO:             xgboost: 1.7.4
2023-06-17 12:44:30,163:INFO:            catboost: Not installed
2023-06-17 12:44:30,163:INFO:              kmodes: Not installed
2023-06-17 12:44:30,163:INFO:             mlxtend: Not installed
2023-06-17 12:44:30,163:INFO:       statsforecast: Not installed
2023-06-17 12:44:30,163:INFO:        tune_sklearn: Not installed
2023-06-17 12:44:30,163:INFO:                 ray: Not installed
2023-06-17 12:44:30,164:INFO:            hyperopt: Not installed
2023-06-17 12:44:30,164:INFO:              optuna: Not installed
2023-06-17 12:44:30,164:INFO:               skopt: Not installed
2023-06-17 12:44:30,164:INFO:              mlflow: Not installed
2023-06-17 12:44:30,164:INFO:              gradio: Not installed
2023-06-17 12:44:30,164:INFO:             fastapi: Not installed
2023-06-17 12:44:30,164:INFO:             uvicorn: Not installed
2023-06-17 12:44:30,164:INFO:              m2cgen: Not installed
2023-06-17 12:44:30,164:INFO:           evidently: Not installed
2023-06-17 12:44:30,164:INFO:               fugue: Not installed
2023-06-17 12:44:30,164:INFO:           streamlit: 1.23.1
2023-06-17 12:44:30,164:INFO:             prophet: Not installed
2023-06-17 12:44:30,164:INFO:None
2023-06-17 12:44:30,164:INFO:Set up data.
2023-06-17 12:44:30,169:INFO:Set up train/test split.
2023-06-17 12:44:30,177:INFO:Set up index.
2023-06-17 12:44:30,178:INFO:Set up folding strategy.
2023-06-17 12:44:30,178:INFO:Assigning column types.
2023-06-17 12:44:30,180:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:44:30,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,224:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,251:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,324:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,326:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:44:30,370:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,396:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,469:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,471:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:44:30,540:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,611:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,614:INFO:Preparing preprocessing pipeline...
2023-06-17 12:44:30,615:INFO:Set up label encoding.
2023-06-17 12:44:30,615:INFO:Set up simple imputation.
2023-06-17 12:44:30,617:INFO:Set up encoding of categorical features.
2023-06-17 12:44:30,617:INFO:Set up column name cleaning.
2023-06-17 12:44:30,696:INFO:Finished creating preprocessing pipeline.
2023-06-17 12:44:30,707:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=TargetEncoder(cols=['Million '
                                                                    'Plus '
                                                                    'Cities',
                                                                    'Cause '
                                                                    'Subcategory'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 12:44:30,707:INFO:Creating final display dataframe.
2023-06-17 12:44:30,886:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               3820
1                        Target                                Outcome of Incident
2                   Target type                                         Multiclass
3                Target mapping  Greviously Injured: 0, Minor Injury: 1, Person...
4           Original data shape                                          (9550, 5)
5        Transformed data shape                                         (9550, 10)
6   Transformed train set shape                                         (6685, 10)
7    Transformed test set shape                                         (2865, 10)
8              Numeric features                                                  1
9          Categorical features                                                  3
10     Rows with missing values                                               0.0%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               7f1d
2023-06-17 12:44:30,961:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:31,034:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:31,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:31,037:INFO:setup() successfully completed in 0.88s...............
2023-06-17 12:44:31,040:INFO:Initializing compare_models()
2023-06-17 12:44:31,040:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 12:44:31,040:INFO:Checking exceptions
2023-06-17 12:44:31,044:INFO:Preparing display monitor
2023-06-17 12:44:31,046:INFO:Initializing Logistic Regression
2023-06-17 12:44:31,046:INFO:Total runtime is 0.0 minutes
2023-06-17 12:44:31,047:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:31,047:INFO:Initializing create_model()
2023-06-17 12:44:31,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:31,047:INFO:Checking exceptions
2023-06-17 12:44:31,047:INFO:Importing libraries
2023-06-17 12:44:31,047:INFO:Copying training dataset
2023-06-17 12:44:31,050:INFO:Defining folds
2023-06-17 12:44:31,050:INFO:Declaring metric variables
2023-06-17 12:44:31,050:INFO:Importing untrained model
2023-06-17 12:44:31,051:INFO:Logistic Regression Imported successfully
2023-06-17 12:44:31,051:INFO:Starting cross validation
2023-06-17 12:44:31,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:34,903:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:34,906:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:34,909:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,009:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,013:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,017:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,024:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,028:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,033:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,067:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,071:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,074:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,081:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,087:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,092:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,128:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,129:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,131:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,131:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,132:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,134:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,140:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,143:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,147:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,548:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,553:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,558:INFO:Calculating mean and std
2023-06-17 12:44:35,559:INFO:Creating metrics dataframe
2023-06-17 12:44:35,568:INFO:Uploading results into container
2023-06-17 12:44:35,568:INFO:Uploading model into container now
2023-06-17 12:44:35,569:INFO:_master_model_container: 1
2023-06-17 12:44:35,569:INFO:_display_container: 2
2023-06-17 12:44:35,569:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3820, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 12:44:35,569:INFO:create_model() successfully completed......................................
2023-06-17 12:44:35,697:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:35,697:INFO:Creating metrics dataframe
2023-06-17 12:44:35,700:INFO:Initializing K Neighbors Classifier
2023-06-17 12:44:35,700:INFO:Total runtime is 0.07756293217341105 minutes
2023-06-17 12:44:35,700:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:35,700:INFO:Initializing create_model()
2023-06-17 12:44:35,700:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:35,700:INFO:Checking exceptions
2023-06-17 12:44:35,700:INFO:Importing libraries
2023-06-17 12:44:35,701:INFO:Copying training dataset
2023-06-17 12:44:35,704:INFO:Defining folds
2023-06-17 12:44:35,704:INFO:Declaring metric variables
2023-06-17 12:44:35,704:INFO:Importing untrained model
2023-06-17 12:44:35,704:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:44:35,705:INFO:Starting cross validation
2023-06-17 12:44:35,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:36,093:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,097:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,102:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,103:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,104:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,106:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,108:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,109:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,113:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,123:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,129:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,870:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,874:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,875:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,877:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,878:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,878:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,880:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,880:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,882:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,883:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,884:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,885:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,887:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,887:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,890:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,896:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,899:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,902:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,908:INFO:Calculating mean and std
2023-06-17 12:44:37,909:INFO:Creating metrics dataframe
2023-06-17 12:44:37,918:INFO:Uploading results into container
2023-06-17 12:44:37,919:INFO:Uploading model into container now
2023-06-17 12:44:37,920:INFO:_master_model_container: 2
2023-06-17 12:44:37,920:INFO:_display_container: 2
2023-06-17 12:44:37,920:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:44:37,920:INFO:create_model() successfully completed......................................
2023-06-17 12:44:38,060:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:38,060:INFO:Creating metrics dataframe
2023-06-17 12:44:38,063:INFO:Initializing Naive Bayes
2023-06-17 12:44:38,063:INFO:Total runtime is 0.11694627205530803 minutes
2023-06-17 12:44:38,063:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:38,063:INFO:Initializing create_model()
2023-06-17 12:44:38,063:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:38,063:INFO:Checking exceptions
2023-06-17 12:44:38,063:INFO:Importing libraries
2023-06-17 12:44:38,064:INFO:Copying training dataset
2023-06-17 12:44:38,067:INFO:Defining folds
2023-06-17 12:44:38,067:INFO:Declaring metric variables
2023-06-17 12:44:38,067:INFO:Importing untrained model
2023-06-17 12:44:38,067:INFO:Naive Bayes Imported successfully
2023-06-17 12:44:38,067:INFO:Starting cross validation
2023-06-17 12:44:38,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:38,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,341:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,351:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,366:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,381:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,383:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,385:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,387:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,388:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,390:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,393:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,394:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:38,396:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,401:INFO:Calculating mean and std
2023-06-17 12:44:38,402:INFO:Creating metrics dataframe
2023-06-17 12:44:38,410:INFO:Uploading results into container
2023-06-17 12:44:38,411:INFO:Uploading model into container now
2023-06-17 12:44:38,411:INFO:_master_model_container: 3
2023-06-17 12:44:38,411:INFO:_display_container: 2
2023-06-17 12:44:38,411:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 12:44:38,412:INFO:create_model() successfully completed......................................
2023-06-17 12:44:38,528:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:38,528:INFO:Creating metrics dataframe
2023-06-17 12:44:38,531:INFO:Initializing Decision Tree Classifier
2023-06-17 12:44:38,531:INFO:Total runtime is 0.12474627097447713 minutes
2023-06-17 12:44:38,531:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:38,531:INFO:Initializing create_model()
2023-06-17 12:44:38,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:38,531:INFO:Checking exceptions
2023-06-17 12:44:38,531:INFO:Importing libraries
2023-06-17 12:44:38,531:INFO:Copying training dataset
2023-06-17 12:44:38,534:INFO:Defining folds
2023-06-17 12:44:38,535:INFO:Declaring metric variables
2023-06-17 12:44:38,535:INFO:Importing untrained model
2023-06-17 12:44:38,535:INFO:Decision Tree Classifier Imported successfully
2023-06-17 12:44:38,535:INFO:Starting cross validation
2023-06-17 12:44:38,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:38,796:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,801:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,806:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,823:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,826:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,835:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,840:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,841:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,844:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,852:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,854:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,856:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,857:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,859:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,861:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,862:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,880:INFO:Calculating mean and std
2023-06-17 12:44:38,881:INFO:Creating metrics dataframe
2023-06-17 12:44:38,889:INFO:Uploading results into container
2023-06-17 12:44:38,890:INFO:Uploading model into container now
2023-06-17 12:44:38,890:INFO:_master_model_container: 4
2023-06-17 12:44:38,890:INFO:_display_container: 2
2023-06-17 12:44:38,890:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3820, splitter='best')
2023-06-17 12:44:38,890:INFO:create_model() successfully completed......................................
2023-06-17 12:44:39,006:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:39,007:INFO:Creating metrics dataframe
2023-06-17 12:44:39,009:INFO:Initializing SVM - Linear Kernel
2023-06-17 12:44:39,010:INFO:Total runtime is 0.13272960583368937 minutes
2023-06-17 12:44:39,010:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:39,010:INFO:Initializing create_model()
2023-06-17 12:44:39,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:39,010:INFO:Checking exceptions
2023-06-17 12:44:39,010:INFO:Importing libraries
2023-06-17 12:44:39,010:INFO:Copying training dataset
2023-06-17 12:44:39,013:INFO:Defining folds
2023-06-17 12:44:39,013:INFO:Declaring metric variables
2023-06-17 12:44:39,013:INFO:Importing untrained model
2023-06-17 12:44:39,013:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:44:39,014:INFO:Starting cross validation
2023-06-17 12:44:39,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:39,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,318:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,321:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,322:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,324:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,327:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,330:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,333:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,360:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,361:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,366:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,376:INFO:Calculating mean and std
2023-06-17 12:44:39,376:INFO:Creating metrics dataframe
2023-06-17 12:44:39,385:INFO:Uploading results into container
2023-06-17 12:44:39,386:INFO:Uploading model into container now
2023-06-17 12:44:39,386:INFO:_master_model_container: 5
2023-06-17 12:44:39,386:INFO:_display_container: 2
2023-06-17 12:44:39,386:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3820, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 12:44:39,386:INFO:create_model() successfully completed......................................
2023-06-17 12:44:39,505:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:39,505:INFO:Creating metrics dataframe
2023-06-17 12:44:39,508:INFO:Initializing Ridge Classifier
2023-06-17 12:44:39,508:INFO:Total runtime is 0.14102327426274616 minutes
2023-06-17 12:44:39,509:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:39,509:INFO:Initializing create_model()
2023-06-17 12:44:39,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:39,509:INFO:Checking exceptions
2023-06-17 12:44:39,509:INFO:Importing libraries
2023-06-17 12:44:39,509:INFO:Copying training dataset
2023-06-17 12:44:39,512:INFO:Defining folds
2023-06-17 12:44:39,512:INFO:Declaring metric variables
2023-06-17 12:44:39,512:INFO:Importing untrained model
2023-06-17 12:44:39,512:INFO:Ridge Classifier Imported successfully
2023-06-17 12:44:39,512:INFO:Starting cross validation
2023-06-17 12:44:39,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:39,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,721:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,722:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,724:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,724:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,727:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,727:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,733:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,735:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,738:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,741:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,742:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,745:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,748:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,751:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,754:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,757:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,759:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,761:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,761:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,762:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,764:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,765:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,765:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,766:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,767:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,768:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,769:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,772:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,780:INFO:Calculating mean and std
2023-06-17 12:44:39,780:INFO:Creating metrics dataframe
2023-06-17 12:44:39,789:INFO:Uploading results into container
2023-06-17 12:44:39,789:INFO:Uploading model into container now
2023-06-17 12:44:39,790:INFO:_master_model_container: 6
2023-06-17 12:44:39,790:INFO:_display_container: 2
2023-06-17 12:44:39,790:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3820, solver='auto',
                tol=0.0001)
2023-06-17 12:44:39,790:INFO:create_model() successfully completed......................................
2023-06-17 12:44:39,906:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:39,906:INFO:Creating metrics dataframe
2023-06-17 12:44:39,909:INFO:Initializing Random Forest Classifier
2023-06-17 12:44:39,909:INFO:Total runtime is 0.14770660797754923 minutes
2023-06-17 12:44:39,910:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:39,910:INFO:Initializing create_model()
2023-06-17 12:44:39,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:39,910:INFO:Checking exceptions
2023-06-17 12:44:39,910:INFO:Importing libraries
2023-06-17 12:44:39,910:INFO:Copying training dataset
2023-06-17 12:44:39,913:INFO:Defining folds
2023-06-17 12:44:39,913:INFO:Declaring metric variables
2023-06-17 12:44:39,913:INFO:Importing untrained model
2023-06-17 12:44:39,913:INFO:Random Forest Classifier Imported successfully
2023-06-17 12:44:39,913:INFO:Starting cross validation
2023-06-17 12:44:39,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:41,148:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,153:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,158:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,167:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,172:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,173:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,182:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,189:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,195:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,199:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,216:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,219:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,223:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,232:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,236:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,240:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,257:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,260:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,314:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,373:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,379:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,386:INFO:Calculating mean and std
2023-06-17 12:44:41,387:INFO:Creating metrics dataframe
2023-06-17 12:44:41,400:INFO:Uploading results into container
2023-06-17 12:44:41,401:INFO:Uploading model into container now
2023-06-17 12:44:41,401:INFO:_master_model_container: 7
2023-06-17 12:44:41,401:INFO:_display_container: 2
2023-06-17 12:44:41,402:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3820, verbose=0, warm_start=False)
2023-06-17 12:44:41,402:INFO:create_model() successfully completed......................................
2023-06-17 12:44:41,520:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:41,520:INFO:Creating metrics dataframe
2023-06-17 12:44:41,523:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 12:44:41,523:INFO:Total runtime is 0.1746066133181254 minutes
2023-06-17 12:44:41,523:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:41,523:INFO:Initializing create_model()
2023-06-17 12:44:41,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:41,523:INFO:Checking exceptions
2023-06-17 12:44:41,523:INFO:Importing libraries
2023-06-17 12:44:41,523:INFO:Copying training dataset
2023-06-17 12:44:41,526:INFO:Defining folds
2023-06-17 12:44:41,526:INFO:Declaring metric variables
2023-06-17 12:44:41,527:INFO:Importing untrained model
2023-06-17 12:44:41,527:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:44:41,527:INFO:Starting cross validation
2023-06-17 12:44:41,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:41,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,700:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,701:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,715:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,815:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,819:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,822:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,823:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,824:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,825:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,827:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,828:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,829:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,832:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,835:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:41,836:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,837:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,837:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,839:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,839:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,842:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,844:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:41,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,846:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,847:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,855:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,897:INFO:Calculating mean and std
2023-06-17 12:44:41,898:INFO:Creating metrics dataframe
2023-06-17 12:44:41,912:INFO:Uploading results into container
2023-06-17 12:44:41,912:INFO:Uploading model into container now
2023-06-17 12:44:41,912:INFO:_master_model_container: 8
2023-06-17 12:44:41,912:INFO:_display_container: 2
2023-06-17 12:44:41,913:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-17 12:44:41,913:INFO:create_model() successfully completed......................................
2023-06-17 12:44:42,029:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:42,029:INFO:Creating metrics dataframe
2023-06-17 12:44:42,032:INFO:Initializing Ada Boost Classifier
2023-06-17 12:44:42,032:INFO:Total runtime is 0.18308993975321453 minutes
2023-06-17 12:44:42,032:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:42,033:INFO:Initializing create_model()
2023-06-17 12:44:42,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:42,033:INFO:Checking exceptions
2023-06-17 12:44:42,033:INFO:Importing libraries
2023-06-17 12:44:42,033:INFO:Copying training dataset
2023-06-17 12:44:42,036:INFO:Defining folds
2023-06-17 12:44:42,036:INFO:Declaring metric variables
2023-06-17 12:44:42,036:INFO:Importing untrained model
2023-06-17 12:44:42,036:INFO:Ada Boost Classifier Imported successfully
2023-06-17 12:44:42,036:INFO:Starting cross validation
2023-06-17 12:44:42,037:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:42,626:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,631:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,636:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,644:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,645:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,646:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,648:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,649:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,649:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,651:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,651:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,653:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,654:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,655:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,658:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,660:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,664:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,665:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,668:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,669:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,671:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,679:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,688:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,697:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,738:INFO:Calculating mean and std
2023-06-17 12:44:42,739:INFO:Creating metrics dataframe
2023-06-17 12:44:42,757:INFO:Uploading results into container
2023-06-17 12:44:42,757:INFO:Uploading model into container now
2023-06-17 12:44:42,758:INFO:_master_model_container: 9
2023-06-17 12:44:42,758:INFO:_display_container: 2
2023-06-17 12:44:42,758:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3820)
2023-06-17 12:44:42,758:INFO:create_model() successfully completed......................................
2023-06-17 12:44:42,880:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:42,880:INFO:Creating metrics dataframe
2023-06-17 12:44:42,883:INFO:Initializing Gradient Boosting Classifier
2023-06-17 12:44:42,883:INFO:Total runtime is 0.1972732981046041 minutes
2023-06-17 12:44:42,884:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:42,884:INFO:Initializing create_model()
2023-06-17 12:44:42,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:42,884:INFO:Checking exceptions
2023-06-17 12:44:42,884:INFO:Importing libraries
2023-06-17 12:44:42,884:INFO:Copying training dataset
2023-06-17 12:44:42,887:INFO:Defining folds
2023-06-17 12:44:42,887:INFO:Declaring metric variables
2023-06-17 12:44:42,887:INFO:Importing untrained model
2023-06-17 12:44:42,887:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:44:42,888:INFO:Starting cross validation
2023-06-17 12:44:42,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:46,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,345:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,373:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,378:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,379:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,382:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,397:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,400:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,403:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,424:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,425:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,427:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,428:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,429:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,431:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,454:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,457:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,476:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,479:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,482:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,487:INFO:Calculating mean and std
2023-06-17 12:44:46,488:INFO:Creating metrics dataframe
2023-06-17 12:44:46,512:INFO:Uploading results into container
2023-06-17 12:44:46,512:INFO:Uploading model into container now
2023-06-17 12:44:46,512:INFO:_master_model_container: 10
2023-06-17 12:44:46,513:INFO:_display_container: 2
2023-06-17 12:44:46,513:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:44:46,513:INFO:create_model() successfully completed......................................
2023-06-17 12:44:46,629:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:46,629:INFO:Creating metrics dataframe
2023-06-17 12:44:46,632:INFO:Initializing Linear Discriminant Analysis
2023-06-17 12:44:46,632:INFO:Total runtime is 0.259756608804067 minutes
2023-06-17 12:44:46,633:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:46,633:INFO:Initializing create_model()
2023-06-17 12:44:46,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:46,633:INFO:Checking exceptions
2023-06-17 12:44:46,633:INFO:Importing libraries
2023-06-17 12:44:46,633:INFO:Copying training dataset
2023-06-17 12:44:46,637:INFO:Defining folds
2023-06-17 12:44:46,637:INFO:Declaring metric variables
2023-06-17 12:44:46,637:INFO:Importing untrained model
2023-06-17 12:44:46,637:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 12:44:46,637:INFO:Starting cross validation
2023-06-17 12:44:46,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:46,903:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,908:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,913:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,919:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,922:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,927:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,927:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,929:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,935:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,937:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,938:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:46,939:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:46,940:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,941:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,943:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,949:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,961:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,966:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,969:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,971:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,972:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,974:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,979:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,983:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:47,052:INFO:Calculating mean and std
2023-06-17 12:44:47,053:INFO:Creating metrics dataframe
2023-06-17 12:44:47,076:INFO:Uploading results into container
2023-06-17 12:44:47,077:INFO:Uploading model into container now
2023-06-17 12:44:47,077:INFO:_master_model_container: 11
2023-06-17 12:44:47,077:INFO:_display_container: 2
2023-06-17 12:44:47,078:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 12:44:47,078:INFO:create_model() successfully completed......................................
2023-06-17 12:44:47,195:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:47,195:INFO:Creating metrics dataframe
2023-06-17 12:44:47,198:INFO:Initializing Extra Trees Classifier
2023-06-17 12:44:47,198:INFO:Total runtime is 0.26918994983037314 minutes
2023-06-17 12:44:47,198:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:47,199:INFO:Initializing create_model()
2023-06-17 12:44:47,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:47,199:INFO:Checking exceptions
2023-06-17 12:44:47,199:INFO:Importing libraries
2023-06-17 12:44:47,199:INFO:Copying training dataset
2023-06-17 12:44:47,202:INFO:Defining folds
2023-06-17 12:44:47,202:INFO:Declaring metric variables
2023-06-17 12:44:47,202:INFO:Importing untrained model
2023-06-17 12:44:47,202:INFO:Extra Trees Classifier Imported successfully
2023-06-17 12:44:47,202:INFO:Starting cross validation
2023-06-17 12:44:47,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:48,621:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,625:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,626:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,629:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,633:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,663:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,667:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,668:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,671:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,673:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,676:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,717:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,723:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,759:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,762:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,765:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,772:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,779:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,841:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,861:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,861:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,864:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,864:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:49,033:INFO:Calculating mean and std
2023-06-17 12:44:49,034:INFO:Creating metrics dataframe
2023-06-17 12:44:49,062:INFO:Uploading results into container
2023-06-17 12:44:49,063:INFO:Uploading model into container now
2023-06-17 12:44:49,063:INFO:_master_model_container: 12
2023-06-17 12:44:49,063:INFO:_display_container: 2
2023-06-17 12:44:49,063:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3820, verbose=0, warm_start=False)
2023-06-17 12:44:49,063:INFO:create_model() successfully completed......................................
2023-06-17 12:44:49,180:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:49,181:INFO:Creating metrics dataframe
2023-06-17 12:44:49,184:INFO:Initializing Extreme Gradient Boosting
2023-06-17 12:44:49,184:INFO:Total runtime is 0.3022899429003398 minutes
2023-06-17 12:44:49,184:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:49,184:INFO:Initializing create_model()
2023-06-17 12:44:49,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:49,184:INFO:Checking exceptions
2023-06-17 12:44:49,184:INFO:Importing libraries
2023-06-17 12:44:49,184:INFO:Copying training dataset
2023-06-17 12:44:49,187:INFO:Defining folds
2023-06-17 12:44:49,187:INFO:Declaring metric variables
2023-06-17 12:44:49,187:INFO:Importing untrained model
2023-06-17 12:44:49,188:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 12:44:49,188:INFO:Starting cross validation
2023-06-17 12:44:49,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:51,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,362:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,385:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,388:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,390:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,393:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,395:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,454:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,457:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,466:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,469:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,472:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,486:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,487:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,487:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,489:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,490:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,492:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,493:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,494:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,495:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,528:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,533:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,567:INFO:Calculating mean and std
2023-06-17 12:44:51,568:INFO:Creating metrics dataframe
2023-06-17 12:44:51,601:INFO:Uploading results into container
2023-06-17 12:44:51,602:INFO:Uploading model into container now
2023-06-17 12:44:51,602:INFO:_master_model_container: 13
2023-06-17 12:44:51,602:INFO:_display_container: 2
2023-06-17 12:44:51,603:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 12:44:51,603:INFO:create_model() successfully completed......................................
2023-06-17 12:44:51,719:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:51,719:INFO:Creating metrics dataframe
2023-06-17 12:44:51,722:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 12:44:51,722:INFO:Total runtime is 0.34458994070688886 minutes
2023-06-17 12:44:51,722:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:51,723:INFO:Initializing create_model()
2023-06-17 12:44:51,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:51,723:INFO:Checking exceptions
2023-06-17 12:44:51,723:INFO:Importing libraries
2023-06-17 12:44:51,723:INFO:Copying training dataset
2023-06-17 12:44:51,726:INFO:Defining folds
2023-06-17 12:44:51,726:INFO:Declaring metric variables
2023-06-17 12:44:51,727:INFO:Importing untrained model
2023-06-17 12:44:51,727:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 12:44:51,727:INFO:Starting cross validation
2023-06-17 12:44:51,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:52,865:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,870:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,875:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,911:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,921:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,921:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,924:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,927:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,951:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,952:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,954:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,957:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,957:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,959:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,959:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,963:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,965:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,967:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,983:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,984:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,986:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,987:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,989:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,990:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,993:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,997:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,000:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,105:INFO:Calculating mean and std
2023-06-17 12:44:53,106:INFO:Creating metrics dataframe
2023-06-17 12:44:53,144:INFO:Uploading results into container
2023-06-17 12:44:53,144:INFO:Uploading model into container now
2023-06-17 12:44:53,145:INFO:_master_model_container: 14
2023-06-17 12:44:53,145:INFO:_display_container: 2
2023-06-17 12:44:53,145:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3820, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 12:44:53,145:INFO:create_model() successfully completed......................................
2023-06-17 12:44:53,267:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:53,267:INFO:Creating metrics dataframe
2023-06-17 12:44:53,270:INFO:Initializing Dummy Classifier
2023-06-17 12:44:53,270:INFO:Total runtime is 0.3703899701436361 minutes
2023-06-17 12:44:53,270:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:53,270:INFO:Initializing create_model()
2023-06-17 12:44:53,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:53,271:INFO:Checking exceptions
2023-06-17 12:44:53,271:INFO:Importing libraries
2023-06-17 12:44:53,271:INFO:Copying training dataset
2023-06-17 12:44:53,274:INFO:Defining folds
2023-06-17 12:44:53,274:INFO:Declaring metric variables
2023-06-17 12:44:53,274:INFO:Importing untrained model
2023-06-17 12:44:53,274:INFO:Dummy Classifier Imported successfully
2023-06-17 12:44:53,274:INFO:Starting cross validation
2023-06-17 12:44:53,275:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:53,541:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,545:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,546:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,549:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,550:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,553:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,557:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,561:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,562:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,564:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,566:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,566:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,569:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,570:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,579:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,582:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,584:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,586:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,586:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,588:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,589:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,590:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,597:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,602:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,604:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,606:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,613:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,614:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,614:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,617:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,618:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,620:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,765:INFO:Calculating mean and std
2023-06-17 12:44:53,765:INFO:Creating metrics dataframe
2023-06-17 12:44:53,803:INFO:Uploading results into container
2023-06-17 12:44:53,804:INFO:Uploading model into container now
2023-06-17 12:44:53,804:INFO:_master_model_container: 15
2023-06-17 12:44:53,804:INFO:_display_container: 2
2023-06-17 12:44:53,804:INFO:DummyClassifier(constant=None, random_state=3820, strategy='prior')
2023-06-17 12:44:53,804:INFO:create_model() successfully completed......................................
2023-06-17 12:44:53,926:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:53,926:INFO:Creating metrics dataframe
2023-06-17 12:44:53,930:INFO:Initializing create_model()
2023-06-17 12:44:53,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:53,930:INFO:Checking exceptions
2023-06-17 12:44:53,931:INFO:Importing libraries
2023-06-17 12:44:53,931:INFO:Copying training dataset
2023-06-17 12:44:53,934:INFO:Defining folds
2023-06-17 12:44:53,934:INFO:Declaring metric variables
2023-06-17 12:44:53,934:INFO:Importing untrained model
2023-06-17 12:44:53,934:INFO:Declaring custom model
2023-06-17 12:44:53,934:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:44:53,935:INFO:Cross validation set to False
2023-06-17 12:44:53,935:INFO:Fitting Model
2023-06-17 12:44:56,230:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:44:56,230:INFO:create_model() successfully completed......................................
2023-06-17 12:44:56,361:INFO:_master_model_container: 15
2023-06-17 12:44:56,362:INFO:_display_container: 2
2023-06-17 12:44:56,362:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:44:56,362:INFO:compare_models() successfully completed......................................
2023-06-17 12:44:56,369:INFO:Initializing save_model()
2023-06-17 12:44:56,370:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=TargetEncoder(cols=['Million '
                                                                    'Plus '
                                                                    'Cities',
                                                                    'Cause '
                                                                    'Subcategory'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 12:44:56,370:INFO:Adding model into prep_pipe
2023-06-17 12:44:56,389:INFO:best_model.pkl saved in current working directory
2023-06-17 12:44:56,398:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=3820, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-06-17 12:44:56,398:INFO:save_model() successfully completed......................................
2023-06-17 12:45:28,711:INFO:PyCaret RegressionExperiment
2023-06-17 12:45:28,712:INFO:Logging name: reg-default-name
2023-06-17 12:45:28,712:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:45:28,712:INFO:version 3.0.2
2023-06-17 12:45:28,712:INFO:Initializing setup()
2023-06-17 12:45:28,712:INFO:self.USI: 035c
2023-06-17 12:45:28,712:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:28,712:INFO:Checking environment
2023-06-17 12:45:28,712:INFO:python_version: 3.9.5
2023-06-17 12:45:28,712:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:28,712:INFO:machine: AMD64
2023-06-17 12:45:28,712:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:28,716:INFO:Memory: svmem(total=17102532608, available=7408541696, percent=56.7, used=9693990912, free=7408541696)
2023-06-17 12:45:28,716:INFO:Physical Core: 8
2023-06-17 12:45:28,716:INFO:Logical Core: 16
2023-06-17 12:45:28,716:INFO:Checking libraries
2023-06-17 12:45:28,716:INFO:System:
2023-06-17 12:45:28,716:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:28,716:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:28,716:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:28,716:INFO:PyCaret required dependencies:
2023-06-17 12:45:28,716:INFO:                 pip: 23.1.2
2023-06-17 12:45:28,716:INFO:          setuptools: 56.0.0
2023-06-17 12:45:28,716:INFO:             pycaret: 3.0.2
2023-06-17 12:45:28,716:INFO:             IPython: 8.14.0
2023-06-17 12:45:28,716:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:28,716:INFO:                tqdm: 4.65.0
2023-06-17 12:45:28,716:INFO:               numpy: 1.22.3
2023-06-17 12:45:28,716:INFO:              pandas: 1.4.2
2023-06-17 12:45:28,717:INFO:              jinja2: 3.1.2
2023-06-17 12:45:28,717:INFO:               scipy: 1.8.0
2023-06-17 12:45:28,717:INFO:              joblib: 1.2.0
2023-06-17 12:45:28,717:INFO:             sklearn: 1.2.2
2023-06-17 12:45:28,717:INFO:                pyod: 1.0.9
2023-06-17 12:45:28,717:INFO:            imblearn: 0.10.1
2023-06-17 12:45:28,717:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:28,717:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:28,717:INFO:               numba: 0.57.0
2023-06-17 12:45:28,717:INFO:            requests: 2.27.1
2023-06-17 12:45:28,717:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:28,717:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:28,717:INFO:         yellowbrick: 1.5
2023-06-17 12:45:28,717:INFO:              plotly: 5.10.0
2023-06-17 12:45:28,717:INFO:             kaleido: 0.2.1
2023-06-17 12:45:28,717:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:28,717:INFO:              sktime: 0.17.0
2023-06-17 12:45:28,717:INFO:               tbats: 1.1.3
2023-06-17 12:45:28,717:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:28,717:INFO:              psutil: 5.9.5
2023-06-17 12:45:28,717:INFO:PyCaret optional dependencies:
2023-06-17 12:45:28,717:INFO:                shap: Not installed
2023-06-17 12:45:28,717:INFO:           interpret: Not installed
2023-06-17 12:45:28,717:INFO:                umap: Not installed
2023-06-17 12:45:28,717:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:28,717:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:28,717:INFO:             autoviz: Not installed
2023-06-17 12:45:28,717:INFO:           fairlearn: Not installed
2023-06-17 12:45:28,717:INFO:             xgboost: 1.7.4
2023-06-17 12:45:28,717:INFO:            catboost: Not installed
2023-06-17 12:45:28,717:INFO:              kmodes: Not installed
2023-06-17 12:45:28,717:INFO:             mlxtend: Not installed
2023-06-17 12:45:28,717:INFO:       statsforecast: Not installed
2023-06-17 12:45:28,718:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:28,718:INFO:                 ray: Not installed
2023-06-17 12:45:28,718:INFO:            hyperopt: Not installed
2023-06-17 12:45:28,718:INFO:              optuna: Not installed
2023-06-17 12:45:28,718:INFO:               skopt: Not installed
2023-06-17 12:45:28,718:INFO:              mlflow: Not installed
2023-06-17 12:45:28,718:INFO:              gradio: Not installed
2023-06-17 12:45:28,718:INFO:             fastapi: Not installed
2023-06-17 12:45:28,718:INFO:             uvicorn: Not installed
2023-06-17 12:45:28,718:INFO:              m2cgen: Not installed
2023-06-17 12:45:28,718:INFO:           evidently: Not installed
2023-06-17 12:45:28,718:INFO:               fugue: Not installed
2023-06-17 12:45:28,718:INFO:           streamlit: 1.23.1
2023-06-17 12:45:28,718:INFO:             prophet: Not installed
2023-06-17 12:45:28,718:INFO:None
2023-06-17 12:45:28,718:INFO:Set up data.
2023-06-17 12:45:28,724:INFO:Set up train/test split.
2023-06-17 12:45:28,727:INFO:Set up index.
2023-06-17 12:45:28,727:INFO:Set up folding strategy.
2023-06-17 12:45:28,727:INFO:Assigning column types.
2023-06-17 12:45:28,729:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:28,729:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,734:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,739:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,798:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,845:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,846:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:28,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:28,850:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,855:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,859:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,964:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:28,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:28,967:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:45:28,971:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,976:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,033:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,079:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,086:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,091:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,148:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,193:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,196:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:45:29,205:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,263:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,308:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,308:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,320:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,375:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,420:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,421:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,424:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:45:29,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,535:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,610:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,655:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,656:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,659:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:29,732:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,777:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,892:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,895:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:45:30,007:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,122:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,126:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:30,126:INFO:Set up simple imputation.
2023-06-17 12:45:30,128:INFO:Set up encoding of categorical features.
2023-06-17 12:45:30,128:INFO:Set up column name cleaning.
2023-06-17 12:45:30,224:INFO:PyCaret RegressionExperiment
2023-06-17 12:45:30,224:INFO:Logging name: reg-default-name
2023-06-17 12:45:30,224:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:45:30,224:INFO:version 3.0.2
2023-06-17 12:45:30,224:INFO:Initializing setup()
2023-06-17 12:45:30,224:INFO:self.USI: 47a9
2023-06-17 12:45:30,224:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:30,224:INFO:Checking environment
2023-06-17 12:45:30,224:INFO:python_version: 3.9.5
2023-06-17 12:45:30,224:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:30,224:INFO:machine: AMD64
2023-06-17 12:45:30,224:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:30,228:INFO:Memory: svmem(total=17102532608, available=7404507136, percent=56.7, used=9698025472, free=7404507136)
2023-06-17 12:45:30,228:INFO:Physical Core: 8
2023-06-17 12:45:30,228:INFO:Logical Core: 16
2023-06-17 12:45:30,228:INFO:Checking libraries
2023-06-17 12:45:30,228:INFO:System:
2023-06-17 12:45:30,228:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:30,228:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:30,228:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:30,228:INFO:PyCaret required dependencies:
2023-06-17 12:45:30,229:INFO:                 pip: 23.1.2
2023-06-17 12:45:30,229:INFO:          setuptools: 56.0.0
2023-06-17 12:45:30,229:INFO:             pycaret: 3.0.2
2023-06-17 12:45:30,229:INFO:             IPython: 8.14.0
2023-06-17 12:45:30,229:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:30,229:INFO:                tqdm: 4.65.0
2023-06-17 12:45:30,229:INFO:               numpy: 1.22.3
2023-06-17 12:45:30,229:INFO:              pandas: 1.4.2
2023-06-17 12:45:30,230:INFO:              jinja2: 3.1.2
2023-06-17 12:45:30,230:INFO:               scipy: 1.8.0
2023-06-17 12:45:30,230:INFO:              joblib: 1.2.0
2023-06-17 12:45:30,230:INFO:             sklearn: 1.2.2
2023-06-17 12:45:30,230:INFO:                pyod: 1.0.9
2023-06-17 12:45:30,230:INFO:            imblearn: 0.10.1
2023-06-17 12:45:30,230:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:30,230:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:30,230:INFO:               numba: 0.57.0
2023-06-17 12:45:30,231:INFO:            requests: 2.27.1
2023-06-17 12:45:30,231:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:30,231:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:30,231:INFO:         yellowbrick: 1.5
2023-06-17 12:45:30,231:INFO:              plotly: 5.10.0
2023-06-17 12:45:30,231:INFO:             kaleido: 0.2.1
2023-06-17 12:45:30,231:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:30,231:INFO:              sktime: 0.17.0
2023-06-17 12:45:30,231:INFO:               tbats: 1.1.3
2023-06-17 12:45:30,231:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:30,231:INFO:              psutil: 5.9.5
2023-06-17 12:45:30,231:INFO:PyCaret optional dependencies:
2023-06-17 12:45:30,231:INFO:                shap: Not installed
2023-06-17 12:45:30,231:INFO:           interpret: Not installed
2023-06-17 12:45:30,232:INFO:                umap: Not installed
2023-06-17 12:45:30,232:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:30,232:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:30,232:INFO:             autoviz: Not installed
2023-06-17 12:45:30,232:INFO:           fairlearn: Not installed
2023-06-17 12:45:30,232:INFO:             xgboost: 1.7.4
2023-06-17 12:45:30,232:INFO:            catboost: Not installed
2023-06-17 12:45:30,232:INFO:              kmodes: Not installed
2023-06-17 12:45:30,232:INFO:             mlxtend: Not installed
2023-06-17 12:45:30,232:INFO:       statsforecast: Not installed
2023-06-17 12:45:30,232:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:30,232:INFO:                 ray: Not installed
2023-06-17 12:45:30,232:INFO:            hyperopt: Not installed
2023-06-17 12:45:30,232:INFO:              optuna: Not installed
2023-06-17 12:45:30,232:INFO:               skopt: Not installed
2023-06-17 12:45:30,232:INFO:              mlflow: Not installed
2023-06-17 12:45:30,232:INFO:              gradio: Not installed
2023-06-17 12:45:30,232:INFO:             fastapi: Not installed
2023-06-17 12:45:30,232:INFO:             uvicorn: Not installed
2023-06-17 12:45:30,232:INFO:              m2cgen: Not installed
2023-06-17 12:45:30,232:INFO:           evidently: Not installed
2023-06-17 12:45:30,232:INFO:               fugue: Not installed
2023-06-17 12:45:30,232:INFO:           streamlit: 1.23.1
2023-06-17 12:45:30,232:INFO:             prophet: Not installed
2023-06-17 12:45:30,232:INFO:None
2023-06-17 12:45:30,232:INFO:Set up data.
2023-06-17 12:45:30,238:INFO:Set up train/test split.
2023-06-17 12:45:30,241:INFO:Set up index.
2023-06-17 12:45:30,241:INFO:Set up folding strategy.
2023-06-17 12:45:30,242:INFO:Assigning column types.
2023-06-17 12:45:30,244:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:30,244:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,249:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,253:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,316:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,360:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,363:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,368:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,372:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,596:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,596:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,599:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:45:30,603:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,608:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,662:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,705:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,712:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,716:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,771:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,813:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,814:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,816:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:45:30,825:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,881:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,924:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,936:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,996:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,042:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,045:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:45:31,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,155:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,221:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,264:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,267:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:31,330:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,373:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,484:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,487:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:45:31,592:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,709:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,713:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:31,713:INFO:Set up simple imputation.
2023-06-17 12:45:31,715:INFO:Set up encoding of categorical features.
2023-06-17 12:45:31,716:INFO:Set up column name cleaning.
2023-06-17 12:45:32,301:INFO:PyCaret RegressionExperiment
2023-06-17 12:45:32,301:INFO:Logging name: reg-default-name
2023-06-17 12:45:32,301:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:45:32,301:INFO:version 3.0.2
2023-06-17 12:45:32,301:INFO:Initializing setup()
2023-06-17 12:45:32,301:INFO:self.USI: c0eb
2023-06-17 12:45:32,301:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:32,301:INFO:Checking environment
2023-06-17 12:45:32,302:INFO:python_version: 3.9.5
2023-06-17 12:45:32,302:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:32,302:INFO:machine: AMD64
2023-06-17 12:45:32,302:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:32,305:INFO:Memory: svmem(total=17102532608, available=7402790912, percent=56.7, used=9699741696, free=7402790912)
2023-06-17 12:45:32,305:INFO:Physical Core: 8
2023-06-17 12:45:32,305:INFO:Logical Core: 16
2023-06-17 12:45:32,305:INFO:Checking libraries
2023-06-17 12:45:32,305:INFO:System:
2023-06-17 12:45:32,305:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:32,306:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:32,306:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:32,306:INFO:PyCaret required dependencies:
2023-06-17 12:45:32,306:INFO:                 pip: 23.1.2
2023-06-17 12:45:32,306:INFO:          setuptools: 56.0.0
2023-06-17 12:45:32,306:INFO:             pycaret: 3.0.2
2023-06-17 12:45:32,306:INFO:             IPython: 8.14.0
2023-06-17 12:45:32,306:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:32,306:INFO:                tqdm: 4.65.0
2023-06-17 12:45:32,306:INFO:               numpy: 1.22.3
2023-06-17 12:45:32,306:INFO:              pandas: 1.4.2
2023-06-17 12:45:32,306:INFO:              jinja2: 3.1.2
2023-06-17 12:45:32,306:INFO:               scipy: 1.8.0
2023-06-17 12:45:32,306:INFO:              joblib: 1.2.0
2023-06-17 12:45:32,306:INFO:             sklearn: 1.2.2
2023-06-17 12:45:32,306:INFO:                pyod: 1.0.9
2023-06-17 12:45:32,306:INFO:            imblearn: 0.10.1
2023-06-17 12:45:32,306:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:32,306:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:32,306:INFO:               numba: 0.57.0
2023-06-17 12:45:32,306:INFO:            requests: 2.27.1
2023-06-17 12:45:32,306:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:32,306:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:32,306:INFO:         yellowbrick: 1.5
2023-06-17 12:45:32,306:INFO:              plotly: 5.10.0
2023-06-17 12:45:32,306:INFO:             kaleido: 0.2.1
2023-06-17 12:45:32,307:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:32,307:INFO:              sktime: 0.17.0
2023-06-17 12:45:32,307:INFO:               tbats: 1.1.3
2023-06-17 12:45:32,307:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:32,307:INFO:              psutil: 5.9.5
2023-06-17 12:45:32,307:INFO:PyCaret optional dependencies:
2023-06-17 12:45:32,307:INFO:                shap: Not installed
2023-06-17 12:45:32,307:INFO:           interpret: Not installed
2023-06-17 12:45:32,307:INFO:                umap: Not installed
2023-06-17 12:45:32,307:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:32,307:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:32,307:INFO:             autoviz: Not installed
2023-06-17 12:45:32,307:INFO:           fairlearn: Not installed
2023-06-17 12:45:32,307:INFO:             xgboost: 1.7.4
2023-06-17 12:45:32,307:INFO:            catboost: Not installed
2023-06-17 12:45:32,307:INFO:              kmodes: Not installed
2023-06-17 12:45:32,307:INFO:             mlxtend: Not installed
2023-06-17 12:45:32,307:INFO:       statsforecast: Not installed
2023-06-17 12:45:32,307:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:32,307:INFO:                 ray: Not installed
2023-06-17 12:45:32,307:INFO:            hyperopt: Not installed
2023-06-17 12:45:32,307:INFO:              optuna: Not installed
2023-06-17 12:45:32,307:INFO:               skopt: Not installed
2023-06-17 12:45:32,307:INFO:              mlflow: Not installed
2023-06-17 12:45:32,307:INFO:              gradio: Not installed
2023-06-17 12:45:32,307:INFO:             fastapi: Not installed
2023-06-17 12:45:32,307:INFO:             uvicorn: Not installed
2023-06-17 12:45:32,307:INFO:              m2cgen: Not installed
2023-06-17 12:45:32,307:INFO:           evidently: Not installed
2023-06-17 12:45:32,307:INFO:               fugue: Not installed
2023-06-17 12:45:32,307:INFO:           streamlit: 1.23.1
2023-06-17 12:45:32,307:INFO:             prophet: Not installed
2023-06-17 12:45:32,308:INFO:None
2023-06-17 12:45:32,308:INFO:Set up data.
2023-06-17 12:45:32,313:INFO:Set up train/test split.
2023-06-17 12:45:32,316:INFO:Set up index.
2023-06-17 12:45:32,316:INFO:Set up folding strategy.
2023-06-17 12:45:32,316:INFO:Assigning column types.
2023-06-17 12:45:32,318:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:32,318:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,322:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,327:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,381:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,423:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,424:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,427:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,431:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,436:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,534:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,537:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:45:32,541:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,545:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,641:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,642:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,649:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,653:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,707:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,749:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,750:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,752:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:45:32,761:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,814:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,857:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,869:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,922:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,965:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,967:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:45:33,031:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,073:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,139:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,182:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,184:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:33,249:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,292:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,362:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,406:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,409:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:45:33,519:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,632:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,635:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:33,635:INFO:Set up simple imputation.
2023-06-17 12:45:33,637:INFO:Set up encoding of categorical features.
2023-06-17 12:45:33,637:INFO:Set up column name cleaning.
2023-06-17 12:45:36,887:INFO:PyCaret RegressionExperiment
2023-06-17 12:45:36,887:INFO:Logging name: reg-default-name
2023-06-17 12:45:36,888:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:45:36,888:INFO:version 3.0.2
2023-06-17 12:45:36,888:INFO:Initializing setup()
2023-06-17 12:45:36,888:INFO:self.USI: fabd
2023-06-17 12:45:36,888:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:36,888:INFO:Checking environment
2023-06-17 12:45:36,888:INFO:python_version: 3.9.5
2023-06-17 12:45:36,888:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:36,888:INFO:machine: AMD64
2023-06-17 12:45:36,888:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:36,892:INFO:Memory: svmem(total=17102532608, available=7411216384, percent=56.7, used=9691316224, free=7411216384)
2023-06-17 12:45:36,892:INFO:Physical Core: 8
2023-06-17 12:45:36,892:INFO:Logical Core: 16
2023-06-17 12:45:36,892:INFO:Checking libraries
2023-06-17 12:45:36,892:INFO:System:
2023-06-17 12:45:36,892:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:36,892:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:36,892:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:36,892:INFO:PyCaret required dependencies:
2023-06-17 12:45:36,892:INFO:                 pip: 23.1.2
2023-06-17 12:45:36,892:INFO:          setuptools: 56.0.0
2023-06-17 12:45:36,892:INFO:             pycaret: 3.0.2
2023-06-17 12:45:36,892:INFO:             IPython: 8.14.0
2023-06-17 12:45:36,892:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:36,892:INFO:                tqdm: 4.65.0
2023-06-17 12:45:36,892:INFO:               numpy: 1.22.3
2023-06-17 12:45:36,892:INFO:              pandas: 1.4.2
2023-06-17 12:45:36,892:INFO:              jinja2: 3.1.2
2023-06-17 12:45:36,892:INFO:               scipy: 1.8.0
2023-06-17 12:45:36,892:INFO:              joblib: 1.2.0
2023-06-17 12:45:36,893:INFO:             sklearn: 1.2.2
2023-06-17 12:45:36,893:INFO:                pyod: 1.0.9
2023-06-17 12:45:36,893:INFO:            imblearn: 0.10.1
2023-06-17 12:45:36,893:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:36,893:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:36,893:INFO:               numba: 0.57.0
2023-06-17 12:45:36,893:INFO:            requests: 2.27.1
2023-06-17 12:45:36,893:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:36,893:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:36,893:INFO:         yellowbrick: 1.5
2023-06-17 12:45:36,893:INFO:              plotly: 5.10.0
2023-06-17 12:45:36,893:INFO:             kaleido: 0.2.1
2023-06-17 12:45:36,893:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:36,893:INFO:              sktime: 0.17.0
2023-06-17 12:45:36,893:INFO:               tbats: 1.1.3
2023-06-17 12:45:36,893:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:36,893:INFO:              psutil: 5.9.5
2023-06-17 12:45:36,893:INFO:PyCaret optional dependencies:
2023-06-17 12:45:36,893:INFO:                shap: Not installed
2023-06-17 12:45:36,893:INFO:           interpret: Not installed
2023-06-17 12:45:36,893:INFO:                umap: Not installed
2023-06-17 12:45:36,893:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:36,893:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:36,893:INFO:             autoviz: Not installed
2023-06-17 12:45:36,893:INFO:           fairlearn: Not installed
2023-06-17 12:45:36,893:INFO:             xgboost: 1.7.4
2023-06-17 12:45:36,893:INFO:            catboost: Not installed
2023-06-17 12:45:36,893:INFO:              kmodes: Not installed
2023-06-17 12:45:36,893:INFO:             mlxtend: Not installed
2023-06-17 12:45:36,893:INFO:       statsforecast: Not installed
2023-06-17 12:45:36,893:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:36,893:INFO:                 ray: Not installed
2023-06-17 12:45:36,894:INFO:            hyperopt: Not installed
2023-06-17 12:45:36,894:INFO:              optuna: Not installed
2023-06-17 12:45:36,894:INFO:               skopt: Not installed
2023-06-17 12:45:36,894:INFO:              mlflow: Not installed
2023-06-17 12:45:36,894:INFO:              gradio: Not installed
2023-06-17 12:45:36,894:INFO:             fastapi: Not installed
2023-06-17 12:45:36,894:INFO:             uvicorn: Not installed
2023-06-17 12:45:36,894:INFO:              m2cgen: Not installed
2023-06-17 12:45:36,894:INFO:           evidently: Not installed
2023-06-17 12:45:36,894:INFO:               fugue: Not installed
2023-06-17 12:45:36,894:INFO:           streamlit: 1.23.1
2023-06-17 12:45:36,894:INFO:             prophet: Not installed
2023-06-17 12:45:36,894:INFO:None
2023-06-17 12:45:36,894:INFO:Set up data.
2023-06-17 12:45:36,899:INFO:Set up train/test split.
2023-06-17 12:45:36,902:INFO:Set up index.
2023-06-17 12:45:36,902:INFO:Set up folding strategy.
2023-06-17 12:45:36,902:INFO:Assigning column types.
2023-06-17 12:45:36,904:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:36,904:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:36,909:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:36,913:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:36,970:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,014:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,016:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,021:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,025:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,125:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,127:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:45:37,132:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,136:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,191:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,234:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,235:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,242:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,246:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,301:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,344:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,347:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:45:37,356:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,411:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,456:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,467:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,523:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,566:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,569:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:45:37,635:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,680:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,748:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,791:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,794:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:37,858:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,902:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,970:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:38,014:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:38,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:38,017:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:45:38,125:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:38,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:38,235:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:38,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:38,239:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:38,239:INFO:Set up simple imputation.
2023-06-17 12:45:38,241:INFO:Set up encoding of categorical features.
2023-06-17 12:45:38,241:INFO:Set up column name cleaning.
2023-06-17 12:45:58,950:INFO:PyCaret ClassificationExperiment
2023-06-17 12:45:58,950:INFO:Logging name: clf-default-name
2023-06-17 12:45:58,950:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:45:58,950:INFO:version 3.0.2
2023-06-17 12:45:58,950:INFO:Initializing setup()
2023-06-17 12:45:58,950:INFO:self.USI: 4891
2023-06-17 12:45:58,950:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:58,951:INFO:Checking environment
2023-06-17 12:45:58,951:INFO:python_version: 3.9.5
2023-06-17 12:45:58,951:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:58,951:INFO:machine: AMD64
2023-06-17 12:45:58,951:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:58,954:INFO:Memory: svmem(total=17102532608, available=7470927872, percent=56.3, used=9631604736, free=7470927872)
2023-06-17 12:45:58,954:INFO:Physical Core: 8
2023-06-17 12:45:58,954:INFO:Logical Core: 16
2023-06-17 12:45:58,954:INFO:Checking libraries
2023-06-17 12:45:58,954:INFO:System:
2023-06-17 12:45:58,954:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:58,954:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:58,954:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:58,954:INFO:PyCaret required dependencies:
2023-06-17 12:45:58,954:INFO:                 pip: 23.1.2
2023-06-17 12:45:58,954:INFO:          setuptools: 56.0.0
2023-06-17 12:45:58,954:INFO:             pycaret: 3.0.2
2023-06-17 12:45:58,954:INFO:             IPython: 8.14.0
2023-06-17 12:45:58,954:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:58,954:INFO:                tqdm: 4.65.0
2023-06-17 12:45:58,954:INFO:               numpy: 1.22.3
2023-06-17 12:45:58,954:INFO:              pandas: 1.4.2
2023-06-17 12:45:58,954:INFO:              jinja2: 3.1.2
2023-06-17 12:45:58,954:INFO:               scipy: 1.8.0
2023-06-17 12:45:58,954:INFO:              joblib: 1.2.0
2023-06-17 12:45:58,954:INFO:             sklearn: 1.2.2
2023-06-17 12:45:58,954:INFO:                pyod: 1.0.9
2023-06-17 12:45:58,954:INFO:            imblearn: 0.10.1
2023-06-17 12:45:58,954:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:58,954:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:58,955:INFO:               numba: 0.57.0
2023-06-17 12:45:58,955:INFO:            requests: 2.27.1
2023-06-17 12:45:58,955:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:58,955:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:58,955:INFO:         yellowbrick: 1.5
2023-06-17 12:45:58,955:INFO:              plotly: 5.10.0
2023-06-17 12:45:58,955:INFO:             kaleido: 0.2.1
2023-06-17 12:45:58,955:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:58,955:INFO:              sktime: 0.17.0
2023-06-17 12:45:58,955:INFO:               tbats: 1.1.3
2023-06-17 12:45:58,955:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:58,955:INFO:              psutil: 5.9.5
2023-06-17 12:45:58,955:INFO:PyCaret optional dependencies:
2023-06-17 12:45:58,955:INFO:                shap: Not installed
2023-06-17 12:45:58,955:INFO:           interpret: Not installed
2023-06-17 12:45:58,955:INFO:                umap: Not installed
2023-06-17 12:45:58,955:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:58,955:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:58,955:INFO:             autoviz: Not installed
2023-06-17 12:45:58,955:INFO:           fairlearn: Not installed
2023-06-17 12:45:58,955:INFO:             xgboost: 1.7.4
2023-06-17 12:45:58,955:INFO:            catboost: Not installed
2023-06-17 12:45:58,955:INFO:              kmodes: Not installed
2023-06-17 12:45:58,955:INFO:             mlxtend: Not installed
2023-06-17 12:45:58,955:INFO:       statsforecast: Not installed
2023-06-17 12:45:58,955:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:58,955:INFO:                 ray: Not installed
2023-06-17 12:45:58,955:INFO:            hyperopt: Not installed
2023-06-17 12:45:58,955:INFO:              optuna: Not installed
2023-06-17 12:45:58,955:INFO:               skopt: Not installed
2023-06-17 12:45:58,955:INFO:              mlflow: Not installed
2023-06-17 12:45:58,955:INFO:              gradio: Not installed
2023-06-17 12:45:58,955:INFO:             fastapi: Not installed
2023-06-17 12:45:58,956:INFO:             uvicorn: Not installed
2023-06-17 12:45:58,956:INFO:              m2cgen: Not installed
2023-06-17 12:45:58,956:INFO:           evidently: Not installed
2023-06-17 12:45:58,956:INFO:               fugue: Not installed
2023-06-17 12:45:58,956:INFO:           streamlit: 1.23.1
2023-06-17 12:45:58,956:INFO:             prophet: Not installed
2023-06-17 12:45:58,956:INFO:None
2023-06-17 12:45:58,956:INFO:Set up data.
2023-06-17 12:45:58,961:INFO:Set up train/test split.
2023-06-17 12:45:58,968:INFO:Set up index.
2023-06-17 12:45:58,968:INFO:Set up folding strategy.
2023-06-17 12:45:58,968:INFO:Assigning column types.
2023-06-17 12:45:58,970:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:59,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,042:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,115:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,118:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:59,162:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,189:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,236:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,263:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,265:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:45:59,335:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,407:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,410:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:59,411:INFO:Set up label encoding.
2023-06-17 12:45:59,411:INFO:Set up simple imputation.
2023-06-17 12:45:59,413:INFO:Set up encoding of categorical features.
2023-06-17 12:45:59,413:INFO:Set up column name cleaning.
2023-06-17 12:45:59,490:INFO:Finished creating preprocessing pipeline.
2023-06-17 12:45:59,496:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=TargetEncoder(cols=['Million '
                                                                    'Plus '
                                                                    'Cities',
                                                                    'Cause '
                                                                    'Subcategory'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 12:45:59,496:INFO:Creating final display dataframe.
2023-06-17 12:45:59,674:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2151
1                        Target                                Outcome of Incident
2                   Target type                                         Multiclass
3                Target mapping  Greviously Injured: 0, Minor Injury: 1, Person...
4           Original data shape                                          (9550, 5)
5        Transformed data shape                                         (9550, 10)
6   Transformed train set shape                                         (6685, 10)
7    Transformed test set shape                                         (2865, 10)
8              Numeric features                                                  1
9          Categorical features                                                  3
10     Rows with missing values                                               0.0%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               4891
2023-06-17 12:45:59,751:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,823:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,826:INFO:setup() successfully completed in 0.9s...............
2023-06-17 12:45:59,828:INFO:Initializing compare_models()
2023-06-17 12:45:59,828:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 12:45:59,828:INFO:Checking exceptions
2023-06-17 12:45:59,831:INFO:Preparing display monitor
2023-06-17 12:45:59,833:INFO:Initializing Logistic Regression
2023-06-17 12:45:59,833:INFO:Total runtime is 0.0 minutes
2023-06-17 12:45:59,833:INFO:SubProcess create_model() called ==================================
2023-06-17 12:45:59,833:INFO:Initializing create_model()
2023-06-17 12:45:59,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:45:59,834:INFO:Checking exceptions
2023-06-17 12:45:59,834:INFO:Importing libraries
2023-06-17 12:45:59,834:INFO:Copying training dataset
2023-06-17 12:45:59,837:INFO:Defining folds
2023-06-17 12:45:59,837:INFO:Declaring metric variables
2023-06-17 12:45:59,837:INFO:Importing untrained model
2023-06-17 12:45:59,837:INFO:Logistic Regression Imported successfully
2023-06-17 12:45:59,837:INFO:Starting cross validation
2023-06-17 12:45:59,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:00,289:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,292:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,295:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,491:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,495:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,499:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,511:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,515:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,519:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,592:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,596:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,599:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,604:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,607:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,621:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,624:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,625:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,627:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,688:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,744:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,758:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,760:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,763:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,784:INFO:Calculating mean and std
2023-06-17 12:46:00,785:INFO:Creating metrics dataframe
2023-06-17 12:46:00,829:INFO:Uploading results into container
2023-06-17 12:46:00,829:INFO:Uploading model into container now
2023-06-17 12:46:00,829:INFO:_master_model_container: 1
2023-06-17 12:46:00,830:INFO:_display_container: 2
2023-06-17 12:46:00,830:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2151, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 12:46:00,830:INFO:create_model() successfully completed......................................
2023-06-17 12:46:00,958:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:00,958:INFO:Creating metrics dataframe
2023-06-17 12:46:00,961:INFO:Initializing K Neighbors Classifier
2023-06-17 12:46:00,961:INFO:Total runtime is 0.018797135353088378 minutes
2023-06-17 12:46:00,961:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:00,961:INFO:Initializing create_model()
2023-06-17 12:46:00,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:00,961:INFO:Checking exceptions
2023-06-17 12:46:00,961:INFO:Importing libraries
2023-06-17 12:46:00,962:INFO:Copying training dataset
2023-06-17 12:46:00,966:INFO:Defining folds
2023-06-17 12:46:00,966:INFO:Declaring metric variables
2023-06-17 12:46:00,966:INFO:Importing untrained model
2023-06-17 12:46:00,966:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:46:00,966:INFO:Starting cross validation
2023-06-17 12:46:00,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:01,307:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,321:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,330:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,331:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,334:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,351:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,360:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,372:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,377:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,559:INFO:Calculating mean and std
2023-06-17 12:46:01,560:INFO:Creating metrics dataframe
2023-06-17 12:46:01,602:INFO:Uploading results into container
2023-06-17 12:46:01,603:INFO:Uploading model into container now
2023-06-17 12:46:01,603:INFO:_master_model_container: 2
2023-06-17 12:46:01,603:INFO:_display_container: 2
2023-06-17 12:46:01,603:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:46:01,603:INFO:create_model() successfully completed......................................
2023-06-17 12:46:01,721:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:01,721:INFO:Creating metrics dataframe
2023-06-17 12:46:01,724:INFO:Initializing Naive Bayes
2023-06-17 12:46:01,724:INFO:Total runtime is 0.031516150633494056 minutes
2023-06-17 12:46:01,724:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:01,725:INFO:Initializing create_model()
2023-06-17 12:46:01,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:01,725:INFO:Checking exceptions
2023-06-17 12:46:01,725:INFO:Importing libraries
2023-06-17 12:46:01,725:INFO:Copying training dataset
2023-06-17 12:46:01,728:INFO:Defining folds
2023-06-17 12:46:01,729:INFO:Declaring metric variables
2023-06-17 12:46:01,729:INFO:Importing untrained model
2023-06-17 12:46:01,729:INFO:Naive Bayes Imported successfully
2023-06-17 12:46:01,729:INFO:Starting cross validation
2023-06-17 12:46:01,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:01,991:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,996:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,001:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,002:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,008:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,013:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,016:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,018:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,021:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,023:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,025:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,025:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,028:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,030:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,034:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,035:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,039:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,045:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,045:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,049:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,050:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,053:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,056:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,063:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,066:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,069:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,234:INFO:Calculating mean and std
2023-06-17 12:46:02,235:INFO:Creating metrics dataframe
2023-06-17 12:46:02,279:INFO:Uploading results into container
2023-06-17 12:46:02,280:INFO:Uploading model into container now
2023-06-17 12:46:02,280:INFO:_master_model_container: 3
2023-06-17 12:46:02,280:INFO:_display_container: 2
2023-06-17 12:46:02,281:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 12:46:02,281:INFO:create_model() successfully completed......................................
2023-06-17 12:46:02,397:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:02,397:INFO:Creating metrics dataframe
2023-06-17 12:46:02,401:INFO:Initializing Decision Tree Classifier
2023-06-17 12:46:02,401:INFO:Total runtime is 0.04279949267705281 minutes
2023-06-17 12:46:02,401:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:02,401:INFO:Initializing create_model()
2023-06-17 12:46:02,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:02,401:INFO:Checking exceptions
2023-06-17 12:46:02,401:INFO:Importing libraries
2023-06-17 12:46:02,401:INFO:Copying training dataset
2023-06-17 12:46:02,405:INFO:Defining folds
2023-06-17 12:46:02,405:INFO:Declaring metric variables
2023-06-17 12:46:02,405:INFO:Importing untrained model
2023-06-17 12:46:02,405:INFO:Decision Tree Classifier Imported successfully
2023-06-17 12:46:02,406:INFO:Starting cross validation
2023-06-17 12:46:02,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:02,690:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,693:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,697:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,699:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,702:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,715:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,718:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,719:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,721:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,722:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,723:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,725:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,726:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,727:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,730:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,731:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,731:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,732:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,738:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,744:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,748:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,751:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,925:INFO:Calculating mean and std
2023-06-17 12:46:02,926:INFO:Creating metrics dataframe
2023-06-17 12:46:02,968:INFO:Uploading results into container
2023-06-17 12:46:02,969:INFO:Uploading model into container now
2023-06-17 12:46:02,969:INFO:_master_model_container: 4
2023-06-17 12:46:02,969:INFO:_display_container: 2
2023-06-17 12:46:02,969:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2151, splitter='best')
2023-06-17 12:46:02,969:INFO:create_model() successfully completed......................................
2023-06-17 12:46:03,085:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:03,085:INFO:Creating metrics dataframe
2023-06-17 12:46:03,088:INFO:Initializing SVM - Linear Kernel
2023-06-17 12:46:03,088:INFO:Total runtime is 0.05425012509028117 minutes
2023-06-17 12:46:03,088:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:03,088:INFO:Initializing create_model()
2023-06-17 12:46:03,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:03,088:INFO:Checking exceptions
2023-06-17 12:46:03,088:INFO:Importing libraries
2023-06-17 12:46:03,088:INFO:Copying training dataset
2023-06-17 12:46:03,091:INFO:Defining folds
2023-06-17 12:46:03,091:INFO:Declaring metric variables
2023-06-17 12:46:03,092:INFO:Importing untrained model
2023-06-17 12:46:03,092:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:46:03,092:INFO:Starting cross validation
2023-06-17 12:46:03,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:03,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,360:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,365:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,394:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,396:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,401:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,402:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,403:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,404:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,406:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,409:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,412:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,414:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,416:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,417:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,420:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,422:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,423:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,435:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,436:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,438:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,439:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,440:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,441:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,442:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,443:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,443:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,445:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,446:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,447:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,448:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,449:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,450:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,451:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,452:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,453:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,453:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,456:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,456:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,457:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,458:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,617:INFO:Calculating mean and std
2023-06-17 12:46:03,618:INFO:Creating metrics dataframe
2023-06-17 12:46:03,662:INFO:Uploading results into container
2023-06-17 12:46:03,663:INFO:Uploading model into container now
2023-06-17 12:46:03,663:INFO:_master_model_container: 5
2023-06-17 12:46:03,663:INFO:_display_container: 2
2023-06-17 12:46:03,663:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2151, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 12:46:03,663:INFO:create_model() successfully completed......................................
2023-06-17 12:46:03,784:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:03,784:INFO:Creating metrics dataframe
2023-06-17 12:46:03,787:INFO:Initializing Ridge Classifier
2023-06-17 12:46:03,787:INFO:Total runtime is 0.06590015093485514 minutes
2023-06-17 12:46:03,787:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:03,788:INFO:Initializing create_model()
2023-06-17 12:46:03,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:03,788:INFO:Checking exceptions
2023-06-17 12:46:03,788:INFO:Importing libraries
2023-06-17 12:46:03,788:INFO:Copying training dataset
2023-06-17 12:46:03,791:INFO:Defining folds
2023-06-17 12:46:03,791:INFO:Declaring metric variables
2023-06-17 12:46:03,791:INFO:Importing untrained model
2023-06-17 12:46:03,791:INFO:Ridge Classifier Imported successfully
2023-06-17 12:46:03,792:INFO:Starting cross validation
2023-06-17 12:46:03,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:03,972:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:03,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,980:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,985:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,997:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:03,998:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,003:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,004:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,006:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,007:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,011:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,015:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,015:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,016:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,019:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,019:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,021:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,024:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,026:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,029:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,030:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,031:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,031:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,032:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,035:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,036:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,036:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,037:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,037:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,040:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,043:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,045:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,047:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,057:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,058:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,061:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,064:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,232:INFO:Calculating mean and std
2023-06-17 12:46:04,233:INFO:Creating metrics dataframe
2023-06-17 12:46:04,278:INFO:Uploading results into container
2023-06-17 12:46:04,279:INFO:Uploading model into container now
2023-06-17 12:46:04,279:INFO:_master_model_container: 6
2023-06-17 12:46:04,279:INFO:_display_container: 2
2023-06-17 12:46:04,279:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2151, solver='auto',
                tol=0.0001)
2023-06-17 12:46:04,279:INFO:create_model() successfully completed......................................
2023-06-17 12:46:04,396:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:04,396:INFO:Creating metrics dataframe
2023-06-17 12:46:04,399:INFO:Initializing Random Forest Classifier
2023-06-17 12:46:04,399:INFO:Total runtime is 0.07610011498133341 minutes
2023-06-17 12:46:04,400:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:04,400:INFO:Initializing create_model()
2023-06-17 12:46:04,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:04,400:INFO:Checking exceptions
2023-06-17 12:46:04,400:INFO:Importing libraries
2023-06-17 12:46:04,400:INFO:Copying training dataset
2023-06-17 12:46:04,403:INFO:Defining folds
2023-06-17 12:46:04,403:INFO:Declaring metric variables
2023-06-17 12:46:04,403:INFO:Importing untrained model
2023-06-17 12:46:04,403:INFO:Random Forest Classifier Imported successfully
2023-06-17 12:46:04,403:INFO:Starting cross validation
2023-06-17 12:46:04,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:05,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,687:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,689:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,689:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,704:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,709:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,713:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,714:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,725:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,744:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,749:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,754:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,780:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,783:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,863:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,866:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,869:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,890:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,893:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,894:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,897:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,897:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,900:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,020:INFO:Calculating mean and std
2023-06-17 12:46:06,021:INFO:Creating metrics dataframe
2023-06-17 12:46:06,073:INFO:Uploading results into container
2023-06-17 12:46:06,074:INFO:Uploading model into container now
2023-06-17 12:46:06,074:INFO:_master_model_container: 7
2023-06-17 12:46:06,074:INFO:_display_container: 2
2023-06-17 12:46:06,075:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2151, verbose=0, warm_start=False)
2023-06-17 12:46:06,075:INFO:create_model() successfully completed......................................
2023-06-17 12:46:06,199:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:06,199:INFO:Creating metrics dataframe
2023-06-17 12:46:06,202:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 12:46:06,202:INFO:Total runtime is 0.10613641738891602 minutes
2023-06-17 12:46:06,202:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:06,203:INFO:Initializing create_model()
2023-06-17 12:46:06,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:06,203:INFO:Checking exceptions
2023-06-17 12:46:06,203:INFO:Importing libraries
2023-06-17 12:46:06,203:INFO:Copying training dataset
2023-06-17 12:46:06,206:INFO:Defining folds
2023-06-17 12:46:06,206:INFO:Declaring metric variables
2023-06-17 12:46:06,206:INFO:Importing untrained model
2023-06-17 12:46:06,206:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:46:06,207:INFO:Starting cross validation
2023-06-17 12:46:06,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:06,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,373:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,375:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,375:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,386:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,390:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,393:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,394:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,409:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,492:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,494:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,498:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,501:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,506:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,507:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,511:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,513:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,517:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,517:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,521:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,526:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,526:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,532:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,533:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,535:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,536:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,536:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,537:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,538:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,540:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,540:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,541:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,543:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,543:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,544:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,545:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,550:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,769:INFO:Calculating mean and std
2023-06-17 12:46:06,769:INFO:Creating metrics dataframe
2023-06-17 12:46:06,819:INFO:Uploading results into container
2023-06-17 12:46:06,819:INFO:Uploading model into container now
2023-06-17 12:46:06,820:INFO:_master_model_container: 8
2023-06-17 12:46:06,820:INFO:_display_container: 2
2023-06-17 12:46:06,820:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-17 12:46:06,820:INFO:create_model() successfully completed......................................
2023-06-17 12:46:06,937:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:06,937:INFO:Creating metrics dataframe
2023-06-17 12:46:06,940:INFO:Initializing Ada Boost Classifier
2023-06-17 12:46:06,940:INFO:Total runtime is 0.11843642393747966 minutes
2023-06-17 12:46:06,940:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:06,941:INFO:Initializing create_model()
2023-06-17 12:46:06,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:06,941:INFO:Checking exceptions
2023-06-17 12:46:06,941:INFO:Importing libraries
2023-06-17 12:46:06,941:INFO:Copying training dataset
2023-06-17 12:46:06,944:INFO:Defining folds
2023-06-17 12:46:06,944:INFO:Declaring metric variables
2023-06-17 12:46:06,944:INFO:Importing untrained model
2023-06-17 12:46:06,944:INFO:Ada Boost Classifier Imported successfully
2023-06-17 12:46:06,944:INFO:Starting cross validation
2023-06-17 12:46:06,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:07,507:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,510:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,513:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,524:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,536:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,547:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,554:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,582:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,585:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,586:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,588:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,591:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,591:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,594:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,599:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,602:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,603:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,616:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,618:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,619:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,621:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,622:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,624:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,812:INFO:Calculating mean and std
2023-06-17 12:46:07,813:INFO:Creating metrics dataframe
2023-06-17 12:46:07,867:INFO:Uploading results into container
2023-06-17 12:46:07,867:INFO:Uploading model into container now
2023-06-17 12:46:07,868:INFO:_master_model_container: 9
2023-06-17 12:46:07,868:INFO:_display_container: 2
2023-06-17 12:46:07,868:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2151)
2023-06-17 12:46:07,868:INFO:create_model() successfully completed......................................
2023-06-17 12:46:07,988:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:07,988:INFO:Creating metrics dataframe
2023-06-17 12:46:07,992:INFO:Initializing Gradient Boosting Classifier
2023-06-17 12:46:07,992:INFO:Total runtime is 0.1359697659810384 minutes
2023-06-17 12:46:07,992:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:07,992:INFO:Initializing create_model()
2023-06-17 12:46:07,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:07,992:INFO:Checking exceptions
2023-06-17 12:46:07,992:INFO:Importing libraries
2023-06-17 12:46:07,992:INFO:Copying training dataset
2023-06-17 12:46:07,995:INFO:Defining folds
2023-06-17 12:46:07,995:INFO:Declaring metric variables
2023-06-17 12:46:07,995:INFO:Importing untrained model
2023-06-17 12:46:07,996:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:46:07,996:INFO:Starting cross validation
2023-06-17 12:46:07,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:11,303:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,333:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,337:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,337:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,341:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,347:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,347:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,347:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,348:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,351:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,366:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,372:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,377:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,408:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,410:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,411:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,412:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,413:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,415:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,656:INFO:Calculating mean and std
2023-06-17 12:46:11,656:INFO:Creating metrics dataframe
2023-06-17 12:46:11,717:INFO:Uploading results into container
2023-06-17 12:46:11,718:INFO:Uploading model into container now
2023-06-17 12:46:11,718:INFO:_master_model_container: 10
2023-06-17 12:46:11,718:INFO:_display_container: 2
2023-06-17 12:46:11,719:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:46:11,719:INFO:create_model() successfully completed......................................
2023-06-17 12:46:11,835:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:11,835:INFO:Creating metrics dataframe
2023-06-17 12:46:11,838:INFO:Initializing Linear Discriminant Analysis
2023-06-17 12:46:11,838:INFO:Total runtime is 0.20007067918777466 minutes
2023-06-17 12:46:11,838:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:11,838:INFO:Initializing create_model()
2023-06-17 12:46:11,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:11,838:INFO:Checking exceptions
2023-06-17 12:46:11,838:INFO:Importing libraries
2023-06-17 12:46:11,838:INFO:Copying training dataset
2023-06-17 12:46:11,842:INFO:Defining folds
2023-06-17 12:46:11,842:INFO:Declaring metric variables
2023-06-17 12:46:11,842:INFO:Importing untrained model
2023-06-17 12:46:11,842:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 12:46:11,842:INFO:Starting cross validation
2023-06-17 12:46:11,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:12,091:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,094:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,097:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,133:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,137:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,137:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,139:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,140:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,142:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,142:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,142:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,145:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,147:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,149:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,155:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,156:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,157:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,159:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,161:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,164:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,167:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,170:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,174:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,177:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,181:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,428:INFO:Calculating mean and std
2023-06-17 12:46:12,428:INFO:Creating metrics dataframe
2023-06-17 12:46:12,486:INFO:Uploading results into container
2023-06-17 12:46:12,487:INFO:Uploading model into container now
2023-06-17 12:46:12,487:INFO:_master_model_container: 11
2023-06-17 12:46:12,487:INFO:_display_container: 2
2023-06-17 12:46:12,488:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 12:46:12,488:INFO:create_model() successfully completed......................................
2023-06-17 12:46:12,605:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:12,605:INFO:Creating metrics dataframe
2023-06-17 12:46:12,608:INFO:Initializing Extra Trees Classifier
2023-06-17 12:46:12,608:INFO:Total runtime is 0.21290401617685953 minutes
2023-06-17 12:46:12,608:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:12,609:INFO:Initializing create_model()
2023-06-17 12:46:12,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:12,609:INFO:Checking exceptions
2023-06-17 12:46:12,609:INFO:Importing libraries
2023-06-17 12:46:12,609:INFO:Copying training dataset
2023-06-17 12:46:12,612:INFO:Defining folds
2023-06-17 12:46:12,612:INFO:Declaring metric variables
2023-06-17 12:46:12,612:INFO:Importing untrained model
2023-06-17 12:46:12,612:INFO:Extra Trees Classifier Imported successfully
2023-06-17 12:46:12,612:INFO:Starting cross validation
2023-06-17 12:46:12,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:13,957:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,959:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,964:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,967:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,968:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,974:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,978:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,983:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,988:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,992:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,997:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,002:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,006:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,010:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,034:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,043:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,046:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,050:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,053:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,058:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,062:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,075:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,079:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,082:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,086:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,089:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,092:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,390:INFO:Calculating mean and std
2023-06-17 12:46:14,391:INFO:Creating metrics dataframe
2023-06-17 12:46:14,457:INFO:Uploading results into container
2023-06-17 12:46:14,458:INFO:Uploading model into container now
2023-06-17 12:46:14,458:INFO:_master_model_container: 12
2023-06-17 12:46:14,458:INFO:_display_container: 2
2023-06-17 12:46:14,458:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2151, verbose=0, warm_start=False)
2023-06-17 12:46:14,458:INFO:create_model() successfully completed......................................
2023-06-17 12:46:14,575:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:14,575:INFO:Creating metrics dataframe
2023-06-17 12:46:14,578:INFO:Initializing Extreme Gradient Boosting
2023-06-17 12:46:14,578:INFO:Total runtime is 0.24573734601338704 minutes
2023-06-17 12:46:14,578:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:14,578:INFO:Initializing create_model()
2023-06-17 12:46:14,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:14,578:INFO:Checking exceptions
2023-06-17 12:46:14,578:INFO:Importing libraries
2023-06-17 12:46:14,578:INFO:Copying training dataset
2023-06-17 12:46:14,581:INFO:Defining folds
2023-06-17 12:46:14,581:INFO:Declaring metric variables
2023-06-17 12:46:14,582:INFO:Importing untrained model
2023-06-17 12:46:14,582:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 12:46:14,582:INFO:Starting cross validation
2023-06-17 12:46:14,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:16,549:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,552:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,633:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,637:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,654:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,657:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,660:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,719:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,721:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,724:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,724:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,726:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,752:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,773:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,775:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,779:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,781:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,784:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,794:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,797:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,799:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,809:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,811:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,814:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,994:INFO:Calculating mean and std
2023-06-17 12:46:16,995:INFO:Creating metrics dataframe
2023-06-17 12:46:17,064:INFO:Uploading results into container
2023-06-17 12:46:17,064:INFO:Uploading model into container now
2023-06-17 12:46:17,065:INFO:_master_model_container: 13
2023-06-17 12:46:17,065:INFO:_display_container: 2
2023-06-17 12:46:17,065:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 12:46:17,065:INFO:create_model() successfully completed......................................
2023-06-17 12:46:17,188:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:17,188:INFO:Creating metrics dataframe
2023-06-17 12:46:17,191:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 12:46:17,191:INFO:Total runtime is 0.2892873764038086 minutes
2023-06-17 12:46:17,191:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:17,191:INFO:Initializing create_model()
2023-06-17 12:46:17,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:17,191:INFO:Checking exceptions
2023-06-17 12:46:17,191:INFO:Importing libraries
2023-06-17 12:46:17,191:INFO:Copying training dataset
2023-06-17 12:46:17,195:INFO:Defining folds
2023-06-17 12:46:17,195:INFO:Declaring metric variables
2023-06-17 12:46:17,195:INFO:Importing untrained model
2023-06-17 12:46:17,195:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 12:46:17,196:INFO:Starting cross validation
2023-06-17 12:46:17,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:18,397:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,401:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,405:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,406:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,410:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,414:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,415:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,419:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,422:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,429:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,434:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,438:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,442:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,445:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,450:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,458:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,459:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,462:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,463:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,464:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,465:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,467:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,467:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,468:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,470:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,530:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,809:INFO:Calculating mean and std
2023-06-17 12:46:18,810:INFO:Creating metrics dataframe
2023-06-17 12:46:18,883:INFO:Uploading results into container
2023-06-17 12:46:18,883:INFO:Uploading model into container now
2023-06-17 12:46:18,884:INFO:_master_model_container: 14
2023-06-17 12:46:18,884:INFO:_display_container: 2
2023-06-17 12:46:18,884:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2151, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 12:46:18,884:INFO:create_model() successfully completed......................................
2023-06-17 12:46:19,002:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:19,002:INFO:Creating metrics dataframe
2023-06-17 12:46:19,005:INFO:Initializing Dummy Classifier
2023-06-17 12:46:19,005:INFO:Total runtime is 0.3195206761360168 minutes
2023-06-17 12:46:19,005:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:19,006:INFO:Initializing create_model()
2023-06-17 12:46:19,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:19,006:INFO:Checking exceptions
2023-06-17 12:46:19,006:INFO:Importing libraries
2023-06-17 12:46:19,006:INFO:Copying training dataset
2023-06-17 12:46:19,010:INFO:Defining folds
2023-06-17 12:46:19,010:INFO:Declaring metric variables
2023-06-17 12:46:19,010:INFO:Importing untrained model
2023-06-17 12:46:19,010:INFO:Dummy Classifier Imported successfully
2023-06-17 12:46:19,010:INFO:Starting cross validation
2023-06-17 12:46:19,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:19,275:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,278:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,280:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,281:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,295:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,298:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,300:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,301:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,302:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,304:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,306:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,307:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,309:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,310:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,311:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,311:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,314:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,314:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,322:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,327:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,333:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,688:INFO:Calculating mean and std
2023-06-17 12:46:19,688:INFO:Creating metrics dataframe
2023-06-17 12:46:19,761:INFO:Uploading results into container
2023-06-17 12:46:19,761:INFO:Uploading model into container now
2023-06-17 12:46:19,762:INFO:_master_model_container: 15
2023-06-17 12:46:19,762:INFO:_display_container: 2
2023-06-17 12:46:19,762:INFO:DummyClassifier(constant=None, random_state=2151, strategy='prior')
2023-06-17 12:46:19,762:INFO:create_model() successfully completed......................................
2023-06-17 12:46:19,881:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:19,881:INFO:Creating metrics dataframe
2023-06-17 12:46:19,885:INFO:Initializing create_model()
2023-06-17 12:46:19,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:19,885:INFO:Checking exceptions
2023-06-17 12:46:19,886:INFO:Importing libraries
2023-06-17 12:46:19,886:INFO:Copying training dataset
2023-06-17 12:46:19,889:INFO:Defining folds
2023-06-17 12:46:19,889:INFO:Declaring metric variables
2023-06-17 12:46:19,889:INFO:Importing untrained model
2023-06-17 12:46:19,889:INFO:Declaring custom model
2023-06-17 12:46:19,889:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:46:19,890:INFO:Cross validation set to False
2023-06-17 12:46:19,890:INFO:Fitting Model
2023-06-17 12:46:22,223:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:46:22,224:INFO:create_model() successfully completed......................................
2023-06-17 12:46:22,354:INFO:_master_model_container: 15
2023-06-17 12:46:22,354:INFO:_display_container: 2
2023-06-17 12:46:22,355:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:46:22,355:INFO:compare_models() successfully completed......................................
2023-06-17 12:46:22,362:INFO:Initializing save_model()
2023-06-17 12:46:22,362:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=TargetEncoder(cols=['Million '
                                                                    'Plus '
                                                                    'Cities',
                                                                    'Cause '
                                                                    'Subcategory'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 12:46:22,362:INFO:Adding model into prep_pipe
2023-06-17 12:46:22,381:INFO:best_model.pkl saved in current working directory
2023-06-17 12:46:22,388:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=2151, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-06-17 12:46:22,388:INFO:save_model() successfully completed......................................
2023-06-17 12:48:56,189:INFO:PyCaret ClassificationExperiment
2023-06-17 12:48:56,190:INFO:Logging name: clf-default-name
2023-06-17 12:48:56,190:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:48:56,190:INFO:version 3.0.2
2023-06-17 12:48:56,190:INFO:Initializing setup()
2023-06-17 12:48:56,190:INFO:self.USI: 4c83
2023-06-17 12:48:56,190:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:48:56,190:INFO:Checking environment
2023-06-17 12:48:56,190:INFO:python_version: 3.9.5
2023-06-17 12:48:56,190:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:48:56,190:INFO:machine: AMD64
2023-06-17 12:48:56,190:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:48:56,194:INFO:Memory: svmem(total=17102532608, available=7365263360, percent=56.9, used=9737269248, free=7365263360)
2023-06-17 12:48:56,194:INFO:Physical Core: 8
2023-06-17 12:48:56,194:INFO:Logical Core: 16
2023-06-17 12:48:56,194:INFO:Checking libraries
2023-06-17 12:48:56,194:INFO:System:
2023-06-17 12:48:56,194:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:48:56,194:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:48:56,194:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:48:56,194:INFO:PyCaret required dependencies:
2023-06-17 12:48:56,194:INFO:                 pip: 23.1.2
2023-06-17 12:48:56,194:INFO:          setuptools: 56.0.0
2023-06-17 12:48:56,194:INFO:             pycaret: 3.0.2
2023-06-17 12:48:56,194:INFO:             IPython: 8.14.0
2023-06-17 12:48:56,194:INFO:          ipywidgets: 8.0.6
2023-06-17 12:48:56,194:INFO:                tqdm: 4.65.0
2023-06-17 12:48:56,194:INFO:               numpy: 1.22.3
2023-06-17 12:48:56,194:INFO:              pandas: 1.4.2
2023-06-17 12:48:56,194:INFO:              jinja2: 3.1.2
2023-06-17 12:48:56,194:INFO:               scipy: 1.8.0
2023-06-17 12:48:56,194:INFO:              joblib: 1.2.0
2023-06-17 12:48:56,194:INFO:             sklearn: 1.2.2
2023-06-17 12:48:56,194:INFO:                pyod: 1.0.9
2023-06-17 12:48:56,194:INFO:            imblearn: 0.10.1
2023-06-17 12:48:56,195:INFO:   category_encoders: 2.6.1
2023-06-17 12:48:56,195:INFO:            lightgbm: 3.3.5
2023-06-17 12:48:56,195:INFO:               numba: 0.57.0
2023-06-17 12:48:56,195:INFO:            requests: 2.27.1
2023-06-17 12:48:56,195:INFO:          matplotlib: 3.5.1
2023-06-17 12:48:56,195:INFO:          scikitplot: 0.3.7
2023-06-17 12:48:56,195:INFO:         yellowbrick: 1.5
2023-06-17 12:48:56,195:INFO:              plotly: 5.10.0
2023-06-17 12:48:56,195:INFO:             kaleido: 0.2.1
2023-06-17 12:48:56,195:INFO:         statsmodels: 0.14.0
2023-06-17 12:48:56,195:INFO:              sktime: 0.17.0
2023-06-17 12:48:56,195:INFO:               tbats: 1.1.3
2023-06-17 12:48:56,195:INFO:            pmdarima: 2.0.3
2023-06-17 12:48:56,195:INFO:              psutil: 5.9.5
2023-06-17 12:48:56,195:INFO:PyCaret optional dependencies:
2023-06-17 12:48:56,195:INFO:                shap: Not installed
2023-06-17 12:48:56,195:INFO:           interpret: Not installed
2023-06-17 12:48:56,195:INFO:                umap: Not installed
2023-06-17 12:48:56,195:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:48:56,195:INFO:  explainerdashboard: Not installed
2023-06-17 12:48:56,195:INFO:             autoviz: Not installed
2023-06-17 12:48:56,195:INFO:           fairlearn: Not installed
2023-06-17 12:48:56,195:INFO:             xgboost: 1.7.4
2023-06-17 12:48:56,195:INFO:            catboost: Not installed
2023-06-17 12:48:56,195:INFO:              kmodes: Not installed
2023-06-17 12:48:56,195:INFO:             mlxtend: Not installed
2023-06-17 12:48:56,195:INFO:       statsforecast: Not installed
2023-06-17 12:48:56,195:INFO:        tune_sklearn: Not installed
2023-06-17 12:48:56,195:INFO:                 ray: Not installed
2023-06-17 12:48:56,195:INFO:            hyperopt: Not installed
2023-06-17 12:48:56,195:INFO:              optuna: Not installed
2023-06-17 12:48:56,195:INFO:               skopt: Not installed
2023-06-17 12:48:56,195:INFO:              mlflow: Not installed
2023-06-17 12:48:56,195:INFO:              gradio: Not installed
2023-06-17 12:48:56,196:INFO:             fastapi: Not installed
2023-06-17 12:48:56,196:INFO:             uvicorn: Not installed
2023-06-17 12:48:56,196:INFO:              m2cgen: Not installed
2023-06-17 12:48:56,196:INFO:           evidently: Not installed
2023-06-17 12:48:56,196:INFO:               fugue: Not installed
2023-06-17 12:48:56,196:INFO:           streamlit: 1.23.1
2023-06-17 12:48:56,196:INFO:             prophet: Not installed
2023-06-17 12:48:56,196:INFO:None
2023-06-17 12:48:56,196:INFO:Set up data.
2023-06-17 12:48:56,208:INFO:Set up train/test split.
2023-06-17 12:48:56,217:INFO:Set up index.
2023-06-17 12:48:56,217:INFO:Set up folding strategy.
2023-06-17 12:48:56,217:INFO:Assigning column types.
2023-06-17 12:48:56,220:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:48:56,263:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,264:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,290:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,335:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,363:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,365:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:48:56,408:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,434:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,479:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,505:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,508:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:48:56,578:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,649:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,652:INFO:Preparing preprocessing pipeline...
2023-06-17 12:48:56,654:INFO:Set up label encoding.
2023-06-17 12:48:56,654:INFO:Set up simple imputation.
2023-06-17 12:48:56,658:INFO:Set up encoding of categorical features.
2023-06-17 12:48:56,658:INFO:Set up column name cleaning.
2023-06-17 12:48:56,920:INFO:Finished creating preprocessing pipeline.
2023-06-17 12:48:56,926:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'ID',
                                             'Number of Bags', 'Aroma',
                                             'Flavor', 'Aftertaste', 'Acidity',
                                             'Body', 'Balance', 'Uniformity...
                                                                    'Weight',
                                                                    'Grading '
                                                                    'Date',
                                                                    'Owner',
                                                                    'Variety',
                                                                    'Expiration'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 12:48:56,926:INFO:Creating final display dataframe.
2023-06-17 12:48:57,464:INFO:Setup _display_container:                     Description             Value
0                    Session id              3961
1                        Target         Clean Cup
2                   Target type        Multiclass
3                Target mapping           10.0: 0
4           Original data shape         (207, 41)
5        Transformed data shape        (207, 156)
6   Transformed train set shape        (144, 156)
7    Transformed test set shape         (63, 156)
8              Numeric features                18
9          Categorical features                22
10     Rows with missing values             66.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              4c83
2023-06-17 12:48:57,540:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:57,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:57,611:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:57,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:57,614:INFO:setup() successfully completed in 1.46s...............
2023-06-17 12:48:57,616:INFO:Initializing compare_models()
2023-06-17 12:48:57,616:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 12:48:57,616:INFO:Checking exceptions
2023-06-17 12:48:57,620:INFO:Preparing display monitor
2023-06-17 12:48:57,622:INFO:Initializing Logistic Regression
2023-06-17 12:48:57,622:INFO:Total runtime is 0.0 minutes
2023-06-17 12:48:57,622:INFO:SubProcess create_model() called ==================================
2023-06-17 12:48:57,622:INFO:Initializing create_model()
2023-06-17 12:48:57,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:48:57,622:INFO:Checking exceptions
2023-06-17 12:48:57,622:INFO:Importing libraries
2023-06-17 12:48:57,623:INFO:Copying training dataset
2023-06-17 12:48:57,626:INFO:Defining folds
2023-06-17 12:48:57,626:INFO:Declaring metric variables
2023-06-17 12:48:57,626:INFO:Importing untrained model
2023-06-17 12:48:57,627:INFO:Logistic Regression Imported successfully
2023-06-17 12:48:57,627:INFO:Starting cross validation
2023-06-17 12:48:57,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:48:58,435:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 12:48:58,437:WARNING:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py", line 1241, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2023-06-17 12:48:58,437:INFO:Initializing create_model()
2023-06-17 12:48:58,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:48:58,437:INFO:Checking exceptions
2023-06-17 12:48:58,437:INFO:Importing libraries
2023-06-17 12:48:58,438:INFO:Copying training dataset
2023-06-17 12:48:58,442:INFO:Defining folds
2023-06-17 12:48:58,442:INFO:Declaring metric variables
2023-06-17 12:48:58,442:INFO:Importing untrained model
2023-06-17 12:48:58,443:INFO:Logistic Regression Imported successfully
2023-06-17 12:48:58,443:INFO:Starting cross validation
2023-06-17 12:48:58,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:48:59,265:ERROR:create_model() for lr raised an exception or returned all 0.0:
2023-06-17 12:48:59,266:ERROR:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py", line 1241, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py", line 1241, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2023-06-17 12:48:59,376:INFO:Initializing K Neighbors Classifier
2023-06-17 12:48:59,376:INFO:Total runtime is 0.029233264923095702 minutes
2023-06-17 12:48:59,376:INFO:SubProcess create_model() called ==================================
2023-06-17 12:48:59,376:INFO:Initializing create_model()
2023-06-17 12:48:59,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:48:59,377:INFO:Checking exceptions
2023-06-17 12:48:59,377:INFO:Importing libraries
2023-06-17 12:48:59,377:INFO:Copying training dataset
2023-06-17 12:48:59,381:INFO:Defining folds
2023-06-17 12:48:59,381:INFO:Declaring metric variables
2023-06-17 12:48:59,381:INFO:Importing untrained model
2023-06-17 12:48:59,381:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:48:59,381:INFO:Starting cross validation
2023-06-17 12:48:59,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:00,225:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,231:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,294:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,300:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,324:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,324:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,520:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,570:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,574:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,689:INFO:Calculating mean and std
2023-06-17 12:49:00,690:INFO:Creating metrics dataframe
2023-06-17 12:49:00,769:INFO:Uploading results into container
2023-06-17 12:49:00,770:INFO:Uploading model into container now
2023-06-17 12:49:00,770:INFO:_master_model_container: 1
2023-06-17 12:49:00,770:INFO:_display_container: 2
2023-06-17 12:49:00,771:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:49:00,771:INFO:create_model() successfully completed......................................
2023-06-17 12:49:00,891:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:00,892:INFO:Creating metrics dataframe
2023-06-17 12:49:00,894:INFO:Initializing Naive Bayes
2023-06-17 12:49:00,894:INFO:Total runtime is 0.05453330675760905 minutes
2023-06-17 12:49:00,894:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:00,895:INFO:Initializing create_model()
2023-06-17 12:49:00,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:00,895:INFO:Checking exceptions
2023-06-17 12:49:00,895:INFO:Importing libraries
2023-06-17 12:49:00,895:INFO:Copying training dataset
2023-06-17 12:49:00,898:INFO:Defining folds
2023-06-17 12:49:00,899:INFO:Declaring metric variables
2023-06-17 12:49:00,899:INFO:Importing untrained model
2023-06-17 12:49:00,899:INFO:Naive Bayes Imported successfully
2023-06-17 12:49:00,899:INFO:Starting cross validation
2023-06-17 12:49:00,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:01,640:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,647:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,687:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,699:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,729:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,733:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,760:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,766:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,777:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,783:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,787:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,793:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,805:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,809:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:02,109:INFO:Calculating mean and std
2023-06-17 12:49:02,110:INFO:Creating metrics dataframe
2023-06-17 12:49:02,191:INFO:Uploading results into container
2023-06-17 12:49:02,191:INFO:Uploading model into container now
2023-06-17 12:49:02,192:INFO:_master_model_container: 2
2023-06-17 12:49:02,192:INFO:_display_container: 2
2023-06-17 12:49:02,192:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 12:49:02,192:INFO:create_model() successfully completed......................................
2023-06-17 12:49:02,309:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:02,309:INFO:Creating metrics dataframe
2023-06-17 12:49:02,312:INFO:Initializing Decision Tree Classifier
2023-06-17 12:49:02,312:INFO:Total runtime is 0.0781666358311971 minutes
2023-06-17 12:49:02,313:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:02,313:INFO:Initializing create_model()
2023-06-17 12:49:02,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:02,313:INFO:Checking exceptions
2023-06-17 12:49:02,313:INFO:Importing libraries
2023-06-17 12:49:02,313:INFO:Copying training dataset
2023-06-17 12:49:02,316:INFO:Defining folds
2023-06-17 12:49:02,316:INFO:Declaring metric variables
2023-06-17 12:49:02,317:INFO:Importing untrained model
2023-06-17 12:49:02,317:INFO:Decision Tree Classifier Imported successfully
2023-06-17 12:49:02,317:INFO:Starting cross validation
2023-06-17 12:49:02,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:03,066:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,073:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,082:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,087:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,120:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,156:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,171:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,175:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,181:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,186:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,198:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,203:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,216:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,222:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,229:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,232:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,233:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,237:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,545:INFO:Calculating mean and std
2023-06-17 12:49:03,545:INFO:Creating metrics dataframe
2023-06-17 12:49:03,631:INFO:Uploading results into container
2023-06-17 12:49:03,631:INFO:Uploading model into container now
2023-06-17 12:49:03,632:INFO:_master_model_container: 3
2023-06-17 12:49:03,632:INFO:_display_container: 2
2023-06-17 12:49:03,632:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3961, splitter='best')
2023-06-17 12:49:03,632:INFO:create_model() successfully completed......................................
2023-06-17 12:49:03,754:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:03,754:INFO:Creating metrics dataframe
2023-06-17 12:49:03,757:INFO:Initializing SVM - Linear Kernel
2023-06-17 12:49:03,757:INFO:Total runtime is 0.10225818157196044 minutes
2023-06-17 12:49:03,757:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:03,757:INFO:Initializing create_model()
2023-06-17 12:49:03,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:03,758:INFO:Checking exceptions
2023-06-17 12:49:03,758:INFO:Importing libraries
2023-06-17 12:49:03,758:INFO:Copying training dataset
2023-06-17 12:49:03,761:INFO:Defining folds
2023-06-17 12:49:03,761:INFO:Declaring metric variables
2023-06-17 12:49:03,762:INFO:Importing untrained model
2023-06-17 12:49:03,762:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:49:03,762:INFO:Starting cross validation
2023-06-17 12:49:03,764:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:04,599:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 12:49:04,600:WARNING:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 894, in fit
    return self._fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 683, in _fit
    self._partial_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 637, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2023-06-17 12:49:04,600:INFO:Initializing create_model()
2023-06-17 12:49:04,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:04,600:INFO:Checking exceptions
2023-06-17 12:49:04,600:INFO:Importing libraries
2023-06-17 12:49:04,600:INFO:Copying training dataset
2023-06-17 12:49:04,605:INFO:Defining folds
2023-06-17 12:49:04,605:INFO:Declaring metric variables
2023-06-17 12:49:04,605:INFO:Importing untrained model
2023-06-17 12:49:04,605:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:49:04,606:INFO:Starting cross validation
2023-06-17 12:49:04,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:05,499:ERROR:create_model() for svm raised an exception or returned all 0.0:
2023-06-17 12:49:05,499:ERROR:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 894, in fit
    return self._fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 683, in _fit
    self._partial_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 637, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 894, in fit
    return self._fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 683, in _fit
    self._partial_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 637, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2023-06-17 12:49:05,624:INFO:Initializing Ridge Classifier
2023-06-17 12:49:05,625:INFO:Total runtime is 0.13339148759841918 minutes
2023-06-17 12:49:05,625:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:05,625:INFO:Initializing create_model()
2023-06-17 12:49:05,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:05,625:INFO:Checking exceptions
2023-06-17 12:49:05,625:INFO:Importing libraries
2023-06-17 12:49:05,625:INFO:Copying training dataset
2023-06-17 12:49:05,629:INFO:Defining folds
2023-06-17 12:49:05,629:INFO:Declaring metric variables
2023-06-17 12:49:05,629:INFO:Importing untrained model
2023-06-17 12:49:05,629:INFO:Ridge Classifier Imported successfully
2023-06-17 12:49:05,630:INFO:Starting cross validation
2023-06-17 12:49:05,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:06,294:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,298:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

led and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,412:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,419:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,428:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,432:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,437:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,441:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,456:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,461:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,773:INFO:Calculating mean and std
2023-06-17 12:49:06,774:INFO:Creating metrics dataframe
2023-06-17 12:49:06,861:INFO:Uploading results into container
2023-06-17 12:49:06,862:INFO:Uploading model into container now
2023-06-17 12:49:06,862:INFO:_master_model_container: 4
2023-06-17 12:49:06,862:INFO:_display_container: 2
2023-06-17 12:49:06,862:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3961, solver='auto',
                tol=0.0001)
2023-06-17 12:49:06,862:INFO:create_model() successfully completed......................................
2023-06-17 12:49:06,981:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:06,981:INFO:Creating metrics dataframe
2023-06-17 12:49:06,985:INFO:Initializing Random Forest Classifier
2023-06-17 12:49:06,985:INFO:Total runtime is 0.15606017112731932 minutes
2023-06-17 12:49:06,985:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:06,985:INFO:Initializing create_model()
2023-06-17 12:49:06,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:06,985:INFO:Checking exceptions
2023-06-17 12:49:06,985:INFO:Importing libraries
2023-06-17 12:49:06,985:INFO:Copying training dataset
2023-06-17 12:49:06,989:INFO:Defining folds
2023-06-17 12:49:06,990:INFO:Declaring metric variables
2023-06-17 12:49:06,990:INFO:Importing untrained model
2023-06-17 12:49:06,990:INFO:Random Forest Classifier Imported successfully
2023-06-17 12:49:06,990:INFO:Starting cross validation
2023-06-17 12:49:06,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:08,386:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,399:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,400:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,405:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,430:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,437:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,447:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,449:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,452:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,466:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,472:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,491:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,498:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,516:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,521:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,546:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,909:INFO:Calculating mean and std
2023-06-17 12:49:08,910:INFO:Creating metrics dataframe
2023-06-17 12:49:09,006:INFO:Uploading results into container
2023-06-17 12:49:09,007:INFO:Uploading model into container now
2023-06-17 12:49:09,007:INFO:_master_model_container: 5
2023-06-17 12:49:09,007:INFO:_display_container: 2
2023-06-17 12:49:09,008:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3961, verbose=0, warm_start=False)
2023-06-17 12:49:09,008:INFO:create_model() successfully completed......................................
2023-06-17 12:49:09,125:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:09,125:INFO:Creating metrics dataframe
2023-06-17 12:49:09,129:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 12:49:09,129:INFO:Total runtime is 0.1917914867401123 minutes
2023-06-17 12:49:09,130:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:09,130:INFO:Initializing create_model()
2023-06-17 12:49:09,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:09,130:INFO:Checking exceptions
2023-06-17 12:49:09,130:INFO:Importing libraries
2023-06-17 12:49:09,130:INFO:Copying training dataset
2023-06-17 12:49:09,134:INFO:Defining folds
2023-06-17 12:49:09,134:INFO:Declaring metric variables
2023-06-17 12:49:09,134:INFO:Importing untrained model
2023-06-17 12:49:09,134:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:49:09,135:INFO:Starting cross validation
2023-06-17 12:49:09,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:10,031:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 12:49:10,031:WARNING:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 896, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2023-06-17 12:49:10,031:INFO:Initializing create_model()
2023-06-17 12:49:10,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:10,031:INFO:Checking exceptions
2023-06-17 12:49:10,032:INFO:Importing libraries
2023-06-17 12:49:10,032:INFO:Copying training dataset
2023-06-17 12:49:10,036:INFO:Defining folds
2023-06-17 12:49:10,036:INFO:Declaring metric variables
2023-06-17 12:49:10,037:INFO:Importing untrained model
2023-06-17 12:49:10,037:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:49:10,037:INFO:Starting cross validation
2023-06-17 12:49:10,039:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:10,967:ERROR:create_model() for qda raised an exception or returned all 0.0:
2023-06-17 12:49:10,968:ERROR:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 896, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 896, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2023-06-17 12:49:11,109:INFO:Initializing Ada Boost Classifier
2023-06-17 12:49:11,109:INFO:Total runtime is 0.22479142745335895 minutes
2023-06-17 12:49:11,109:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:11,109:INFO:Initializing create_model()
2023-06-17 12:49:11,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:11,109:INFO:Checking exceptions
2023-06-17 12:49:11,109:INFO:Importing libraries
2023-06-17 12:49:11,109:INFO:Copying training dataset
2023-06-17 12:49:11,113:INFO:Defining folds
2023-06-17 12:49:11,113:INFO:Declaring metric variables
2023-06-17 12:49:11,113:INFO:Importing untrained model
2023-06-17 12:49:11,114:INFO:Ada Boost Classifier Imported successfully
2023-06-17 12:49:11,114:INFO:Starting cross validation
2023-06-17 12:49:11,116:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:11,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,780:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,857:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,865:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,869:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,892:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,898:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,911:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,938:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,942:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,952:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,959:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,994:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,998:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:12,001:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:12,005:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:12,336:INFO:Calculating mean and std
2023-06-17 12:49:12,337:INFO:Creating metrics dataframe
2023-06-17 12:49:12,438:INFO:Uploading results into container
2023-06-17 12:49:12,439:INFO:Uploading model into container now
2023-06-17 12:49:12,439:INFO:_master_model_container: 6
2023-06-17 12:49:12,439:INFO:_display_container: 2
2023-06-17 12:49:12,439:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3961)
2023-06-17 12:49:12,439:INFO:create_model() successfully completed......................................
2023-06-17 12:49:12,557:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:12,557:INFO:Creating metrics dataframe
2023-06-17 12:49:12,560:INFO:Initializing Gradient Boosting Classifier
2023-06-17 12:49:12,560:INFO:Total runtime is 0.24897479216257729 minutes
2023-06-17 12:49:12,560:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:12,560:INFO:Initializing create_model()
2023-06-17 12:49:12,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:12,560:INFO:Checking exceptions
2023-06-17 12:49:12,560:INFO:Importing libraries
2023-06-17 12:49:12,560:INFO:Copying training dataset
2023-06-17 12:49:12,564:INFO:Defining folds
2023-06-17 12:49:12,564:INFO:Declaring metric variables
2023-06-17 12:49:12,564:INFO:Importing untrained model
2023-06-17 12:49:12,564:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:49:12,565:INFO:Starting cross validation
2023-06-17 12:49:12,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:13,431:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 12:49:13,432:WARNING:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 440, in fit
    y = self._validate_y(y, sample_weight)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 1232, in _validate_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2023-06-17 12:49:13,432:INFO:Initializing create_model()
2023-06-17 12:49:13,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:13,432:INFO:Checking exceptions
2023-06-17 12:49:13,432:INFO:Importing libraries
2023-06-17 12:49:13,432:INFO:Copying training dataset
2023-06-17 12:49:13,437:INFO:Defining folds
2023-06-17 12:49:13,437:INFO:Declaring metric variables
2023-06-17 12:49:13,437:INFO:Importing untrained model
2023-06-17 12:49:13,437:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:49:13,438:INFO:Starting cross validation
2023-06-17 12:49:13,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:14,357:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2023-06-17 12:49:14,357:ERROR:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 440, in fit
    y = self._validate_y(y, sample_weight)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 1232, in _validate_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 440, in fit
    y = self._validate_y(y, sample_weight)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 1232, in _validate_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2023-06-17 12:49:14,501:INFO:Initializing Linear Discriminant Analysis
2023-06-17 12:49:14,502:INFO:Total runtime is 0.28134141763051346 minutes
2023-06-17 12:49:14,502:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:14,502:INFO:Initializing create_model()
2023-06-17 12:49:14,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:14,502:INFO:Checking exceptions
2023-06-17 12:49:14,502:INFO:Importing libraries
2023-06-17 12:49:14,502:INFO:Copying training dataset
2023-06-17 12:49:14,506:INFO:Defining folds
2023-06-17 12:49:14,506:INFO:Declaring metric variables
2023-06-17 12:49:14,506:INFO:Importing untrained model
2023-06-17 12:49:14,506:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 12:49:14,507:INFO:Starting cross validation
2023-06-17 12:49:14,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:15,262:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,267:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,269:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,274:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,304:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,311:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,321:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,334:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,341:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,349:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,349:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,362:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,391:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,396:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,813:INFO:Calculating mean and std
2023-06-17 12:49:15,814:INFO:Creating metrics dataframe
2023-06-17 12:49:15,919:INFO:Uploading results into container
2023-06-17 12:49:15,919:INFO:Uploading model into container now
2023-06-17 12:49:15,919:INFO:_master_model_container: 7
2023-06-17 12:49:15,920:INFO:_display_container: 2
2023-06-17 12:49:15,920:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 12:49:15,920:INFO:create_model() successfully completed......................................
2023-06-17 12:49:16,038:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:16,038:INFO:Creating metrics dataframe
2023-06-17 12:49:16,041:INFO:Initializing Extra Trees Classifier
2023-06-17 12:49:16,041:INFO:Total runtime is 0.3069848457972208 minutes
2023-06-17 12:49:16,041:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:16,041:INFO:Initializing create_model()
2023-06-17 12:49:16,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:16,041:INFO:Checking exceptions
2023-06-17 12:49:16,041:INFO:Importing libraries
2023-06-17 12:49:16,041:INFO:Copying training dataset
2023-06-17 12:49:16,045:INFO:Defining folds
2023-06-17 12:49:16,045:INFO:Declaring metric variables
2023-06-17 12:49:16,045:INFO:Importing untrained model
2023-06-17 12:49:16,045:INFO:Extra Trees Classifier Imported successfully
2023-06-17 12:49:16,045:INFO:Starting cross validation
2023-06-17 12:49:16,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:17,108:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,112:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,182:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,291:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,295:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,375:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,379:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,417:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,422:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,429:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,434:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,434:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,438:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,439:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,456:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,462:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,787:INFO:Calculating mean and std
2023-06-17 12:49:17,788:INFO:Creating metrics dataframe
2023-06-17 12:49:17,896:INFO:Uploading results into container
2023-06-17 12:49:17,896:INFO:Uploading model into container now
2023-06-17 12:49:17,897:INFO:_master_model_container: 8
2023-06-17 12:49:17,897:INFO:_display_container: 2
2023-06-17 12:49:17,897:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3961, verbose=0, warm_start=False)
2023-06-17 12:49:17,897:INFO:create_model() successfully completed......................................
2023-06-17 12:49:18,015:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:18,015:INFO:Creating metrics dataframe
2023-06-17 12:49:18,018:INFO:Initializing Extreme Gradient Boosting
2023-06-17 12:49:18,018:INFO:Total runtime is 0.33993484576543165 minutes
2023-06-17 12:49:18,019:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:18,019:INFO:Initializing create_model()
2023-06-17 12:49:18,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:18,019:INFO:Checking exceptions
2023-06-17 12:49:18,019:INFO:Importing libraries
2023-06-17 12:49:18,019:INFO:Copying training dataset
2023-06-17 12:49:18,023:INFO:Defining folds
2023-06-17 12:49:18,023:INFO:Declaring metric variables
2023-06-17 12:49:18,024:INFO:Importing untrained model
2023-06-17 12:49:18,024:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 12:49:18,024:INFO:Starting cross validation
2023-06-17 12:49:18,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:18,844:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,867:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,873:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,908:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,915:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,918:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,923:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,940:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,953:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,958:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,066:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:19,070:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,136:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:19,140:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,148:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:19,148:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:19,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,461:INFO:Calculating mean and std
2023-06-17 12:49:19,462:INFO:Creating metrics dataframe
2023-06-17 12:49:19,572:INFO:Uploading results into container
2023-06-17 12:49:19,573:INFO:Uploading model into container now
2023-06-17 12:49:19,573:INFO:_master_model_container: 9
2023-06-17 12:49:19,573:INFO:_display_container: 2
2023-06-17 12:49:19,574:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 12:49:19,574:INFO:create_model() successfully completed......................................
2023-06-17 12:49:19,695:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:19,695:INFO:Creating metrics dataframe
2023-06-17 12:49:19,698:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 12:49:19,698:INFO:Total runtime is 0.36793484687805167 minutes
2023-06-17 12:49:19,698:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:19,698:INFO:Initializing create_model()
2023-06-17 12:49:19,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:19,698:INFO:Checking exceptions
2023-06-17 12:49:19,698:INFO:Importing libraries
2023-06-17 12:49:19,698:INFO:Copying training dataset
2023-06-17 12:49:19,702:INFO:Defining folds
2023-06-17 12:49:19,702:INFO:Declaring metric variables
2023-06-17 12:49:19,702:INFO:Importing untrained model
2023-06-17 12:49:19,702:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 12:49:19,703:INFO:Starting cross validation
2023-06-17 12:49:19,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:20,399:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,403:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,440:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,448:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,465:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,524:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,530:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,539:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,544:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,545:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,549:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,559:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,601:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,613:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,617:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:21,036:INFO:Calculating mean and std
2023-06-17 12:49:21,036:INFO:Creating metrics dataframe
2023-06-17 12:49:21,155:INFO:Uploading results into container
2023-06-17 12:49:21,156:INFO:Uploading model into container now
2023-06-17 12:49:21,156:INFO:_master_model_container: 10
2023-06-17 12:49:21,156:INFO:_display_container: 2
2023-06-17 12:49:21,157:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3961, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 12:49:21,157:INFO:create_model() successfully completed......................................
2023-06-17 12:49:21,278:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:21,278:INFO:Creating metrics dataframe
2023-06-17 12:49:21,281:INFO:Initializing Dummy Classifier
2023-06-17 12:49:21,281:INFO:Total runtime is 0.39431817531585683 minutes
2023-06-17 12:49:21,281:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:21,281:INFO:Initializing create_model()
2023-06-17 12:49:21,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:21,282:INFO:Checking exceptions
2023-06-17 12:49:21,282:INFO:Importing libraries
2023-06-17 12:49:21,282:INFO:Copying training dataset
2023-06-17 12:49:21,285:INFO:Defining folds
2023-06-17 12:49:21,285:INFO:Declaring metric variables
2023-06-17 12:49:21,286:INFO:Importing untrained model
2023-06-17 12:49:21,286:INFO:Dummy Classifier Imported successfully
2023-06-17 12:49:21,286:INFO:Starting cross validation
2023-06-17 12:49:21,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:21,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:21,969:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:21,980:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:21,987:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,052:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,058:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,062:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,069:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,072:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,075:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,078:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,080:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,100:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,104:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,121:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,129:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,130:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,133:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,137:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,612:INFO:Calculating mean and std
2023-06-17 12:49:22,613:INFO:Creating metrics dataframe
2023-06-17 12:49:22,733:INFO:Uploading results into container
2023-06-17 12:49:22,734:INFO:Uploading model into container now
2023-06-17 12:49:22,734:INFO:_master_model_container: 11
2023-06-17 12:49:22,734:INFO:_display_container: 2
2023-06-17 12:49:22,734:INFO:DummyClassifier(constant=None, random_state=3961, strategy='prior')
2023-06-17 12:49:22,734:INFO:create_model() successfully completed......................................
2023-06-17 12:49:22,852:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:22,853:INFO:Creating metrics dataframe
2023-06-17 12:49:22,857:INFO:Initializing create_model()
2023-06-17 12:49:22,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:22,857:INFO:Checking exceptions
2023-06-17 12:49:22,858:INFO:Importing libraries
2023-06-17 12:49:22,858:INFO:Copying training dataset
2023-06-17 12:49:22,862:INFO:Defining folds
2023-06-17 12:49:22,862:INFO:Declaring metric variables
2023-06-17 12:49:22,862:INFO:Importing untrained model
2023-06-17 12:49:22,862:INFO:Declaring custom model
2023-06-17 12:49:22,863:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:49:22,865:INFO:Cross validation set to False
2023-06-17 12:49:22,865:INFO:Fitting Model
2023-06-17 12:49:23,187:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:49:23,187:INFO:create_model() successfully completed......................................
2023-06-17 12:49:23,314:INFO:_master_model_container: 11
2023-06-17 12:49:23,314:INFO:_display_container: 2
2023-06-17 12:49:23,314:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:49:23,314:INFO:compare_models() successfully completed......................................
2023-06-17 12:49:23,322:INFO:Initializing save_model()
2023-06-17 12:49:23,323:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'ID',
                                             'Number of Bags', 'Aroma',
                                             'Flavor', 'Aftertaste', 'Acidity',
                                             'Body', 'Balance', 'Uniformity...
                                                                    'Weight',
                                                                    'Grading '
                                                                    'Date',
                                                                    'Owner',
                                                                    'Variety',
                                                                    'Expiration'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 12:49:23,323:INFO:Adding model into prep_pipe
2023-06-17 12:49:23,347:INFO:best_model.pkl saved in current working directory
2023-06-17 12:49:23,354:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'ID',
                                             'Number of Bags', 'Aroma',
                                             'Flavor', 'Aftertaste', 'Acidity',
                                             'Body', 'Balance', 'Uniformity...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2023-06-17 12:49:23,354:INFO:save_model() successfully completed......................................
2023-06-17 12:49:43,514:INFO:PyCaret ClassificationExperiment
2023-06-17 12:49:43,514:INFO:Logging name: clf-default-name
2023-06-17 12:49:43,514:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:49:43,514:INFO:version 3.0.2
2023-06-17 12:49:43,514:INFO:Initializing setup()
2023-06-17 12:49:43,514:INFO:self.USI: 3847
2023-06-17 12:49:43,514:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:49:43,514:INFO:Checking environment
2023-06-17 12:49:43,514:INFO:python_version: 3.9.5
2023-06-17 12:49:43,514:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:49:43,514:INFO:machine: AMD64
2023-06-17 12:49:43,514:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:49:43,517:INFO:Memory: svmem(total=17102532608, available=7366762496, percent=56.9, used=9735770112, free=7366762496)
2023-06-17 12:49:43,518:INFO:Physical Core: 8
2023-06-17 12:49:43,518:INFO:Logical Core: 16
2023-06-17 12:49:43,518:INFO:Checking libraries
2023-06-17 12:49:43,518:INFO:System:
2023-06-17 12:49:43,518:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:49:43,518:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:49:43,518:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:49:43,518:INFO:PyCaret required dependencies:
2023-06-17 12:49:43,518:INFO:                 pip: 23.1.2
2023-06-17 12:49:43,518:INFO:          setuptools: 56.0.0
2023-06-17 12:49:43,518:INFO:             pycaret: 3.0.2
2023-06-17 12:49:43,518:INFO:             IPython: 8.14.0
2023-06-17 12:49:43,518:INFO:          ipywidgets: 8.0.6
2023-06-17 12:49:43,518:INFO:                tqdm: 4.65.0
2023-06-17 12:49:43,518:INFO:               numpy: 1.22.3
2023-06-17 12:49:43,518:INFO:              pandas: 1.4.2
2023-06-17 12:49:43,518:INFO:              jinja2: 3.1.2
2023-06-17 12:49:43,518:INFO:               scipy: 1.8.0
2023-06-17 12:49:43,518:INFO:              joblib: 1.2.0
2023-06-17 12:49:43,518:INFO:             sklearn: 1.2.2
2023-06-17 12:49:43,518:INFO:                pyod: 1.0.9
2023-06-17 12:49:43,518:INFO:            imblearn: 0.10.1
2023-06-17 12:49:43,518:INFO:   category_encoders: 2.6.1
2023-06-17 12:49:43,518:INFO:            lightgbm: 3.3.5
2023-06-17 12:49:43,518:INFO:               numba: 0.57.0
2023-06-17 12:49:43,518:INFO:            requests: 2.27.1
2023-06-17 12:49:43,518:INFO:          matplotlib: 3.5.1
2023-06-17 12:49:43,518:INFO:          scikitplot: 0.3.7
2023-06-17 12:49:43,518:INFO:         yellowbrick: 1.5
2023-06-17 12:49:43,518:INFO:              plotly: 5.10.0
2023-06-17 12:49:43,518:INFO:             kaleido: 0.2.1
2023-06-17 12:49:43,519:INFO:         statsmodels: 0.14.0
2023-06-17 12:49:43,519:INFO:              sktime: 0.17.0
2023-06-17 12:49:43,519:INFO:               tbats: 1.1.3
2023-06-17 12:49:43,519:INFO:            pmdarima: 2.0.3
2023-06-17 12:49:43,519:INFO:              psutil: 5.9.5
2023-06-17 12:49:43,519:INFO:PyCaret optional dependencies:
2023-06-17 12:49:43,519:INFO:                shap: Not installed
2023-06-17 12:49:43,519:INFO:           interpret: Not installed
2023-06-17 12:49:43,519:INFO:                umap: Not installed
2023-06-17 12:49:43,519:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:49:43,519:INFO:  explainerdashboard: Not installed
2023-06-17 12:49:43,519:INFO:             autoviz: Not installed
2023-06-17 12:49:43,519:INFO:           fairlearn: Not installed
2023-06-17 12:49:43,519:INFO:             xgboost: 1.7.4
2023-06-17 12:49:43,519:INFO:            catboost: Not installed
2023-06-17 12:49:43,519:INFO:              kmodes: Not installed
2023-06-17 12:49:43,519:INFO:             mlxtend: Not installed
2023-06-17 12:49:43,519:INFO:       statsforecast: Not installed
2023-06-17 12:49:43,519:INFO:        tune_sklearn: Not installed
2023-06-17 12:49:43,519:INFO:                 ray: Not installed
2023-06-17 12:49:43,519:INFO:            hyperopt: Not installed
2023-06-17 12:49:43,519:INFO:              optuna: Not installed
2023-06-17 12:49:43,519:INFO:               skopt: Not installed
2023-06-17 12:49:43,519:INFO:              mlflow: Not installed
2023-06-17 12:49:43,519:INFO:              gradio: Not installed
2023-06-17 12:49:43,519:INFO:             fastapi: Not installed
2023-06-17 12:49:43,519:INFO:             uvicorn: Not installed
2023-06-17 12:49:43,519:INFO:              m2cgen: Not installed
2023-06-17 12:49:43,519:INFO:           evidently: Not installed
2023-06-17 12:49:43,519:INFO:               fugue: Not installed
2023-06-17 12:49:43,519:INFO:           streamlit: 1.23.1
2023-06-17 12:49:43,519:INFO:             prophet: Not installed
2023-06-17 12:49:43,519:INFO:None
2023-06-17 12:49:43,520:INFO:Set up data.
2023-06-17 12:49:43,531:INFO:Set up train/test split.
2023-06-17 12:55:21,305:INFO:PyCaret ClassificationExperiment
2023-06-17 12:55:21,305:INFO:Logging name: clf-default-name
2023-06-17 12:55:21,305:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:55:21,305:INFO:version 3.0.2
2023-06-17 12:55:21,305:INFO:Initializing setup()
2023-06-17 12:55:21,305:INFO:self.USI: 5cdc
2023-06-17 12:55:21,305:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:55:21,305:INFO:Checking environment
2023-06-17 12:55:21,305:INFO:python_version: 3.9.5
2023-06-17 12:55:21,305:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:55:21,305:INFO:machine: AMD64
2023-06-17 12:55:21,305:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:55:21,309:INFO:Memory: svmem(total=17102532608, available=9377624064, percent=45.2, used=7724908544, free=9377624064)
2023-06-17 12:55:21,309:INFO:Physical Core: 8
2023-06-17 12:55:21,309:INFO:Logical Core: 16
2023-06-17 12:55:21,309:INFO:Checking libraries
2023-06-17 12:55:21,309:INFO:System:
2023-06-17 12:55:21,309:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:55:21,309:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:55:21,309:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:55:21,309:INFO:PyCaret required dependencies:
2023-06-17 12:55:21,309:INFO:                 pip: 23.1.2
2023-06-17 12:55:21,309:INFO:          setuptools: 56.0.0
2023-06-17 12:55:21,309:INFO:             pycaret: 3.0.2
2023-06-17 12:55:21,309:INFO:             IPython: 8.14.0
2023-06-17 12:55:21,309:INFO:          ipywidgets: 8.0.6
2023-06-17 12:55:21,310:INFO:                tqdm: 4.65.0
2023-06-17 12:55:21,310:INFO:               numpy: 1.22.3
2023-06-17 12:55:21,310:INFO:              pandas: 1.4.2
2023-06-17 12:55:21,310:INFO:              jinja2: 3.1.2
2023-06-17 12:55:21,310:INFO:               scipy: 1.8.0
2023-06-17 12:55:21,310:INFO:              joblib: 1.2.0
2023-06-17 12:55:21,310:INFO:             sklearn: 1.2.2
2023-06-17 12:55:21,310:INFO:                pyod: 1.0.9
2023-06-17 12:55:21,310:INFO:            imblearn: 0.10.1
2023-06-17 12:55:21,310:INFO:   category_encoders: 2.6.1
2023-06-17 12:55:21,310:INFO:            lightgbm: 3.3.5
2023-06-17 12:55:21,310:INFO:               numba: 0.57.0
2023-06-17 12:55:21,310:INFO:            requests: 2.27.1
2023-06-17 12:55:21,310:INFO:          matplotlib: 3.5.1
2023-06-17 12:55:21,310:INFO:          scikitplot: 0.3.7
2023-06-17 12:55:21,310:INFO:         yellowbrick: 1.5
2023-06-17 12:55:21,310:INFO:              plotly: 5.10.0
2023-06-17 12:55:21,310:INFO:             kaleido: 0.2.1
2023-06-17 12:55:21,310:INFO:         statsmodels: 0.14.0
2023-06-17 12:55:21,310:INFO:              sktime: 0.17.0
2023-06-17 12:55:21,310:INFO:               tbats: 1.1.3
2023-06-17 12:55:21,310:INFO:            pmdarima: 2.0.3
2023-06-17 12:55:21,310:INFO:              psutil: 5.9.5
2023-06-17 12:55:21,310:INFO:PyCaret optional dependencies:
2023-06-17 12:55:21,310:INFO:                shap: Not installed
2023-06-17 12:55:21,310:INFO:           interpret: Not installed
2023-06-17 12:55:21,310:INFO:                umap: Not installed
2023-06-17 12:55:21,310:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:55:21,310:INFO:  explainerdashboard: Not installed
2023-06-17 12:55:21,310:INFO:             autoviz: Not installed
2023-06-17 12:55:21,310:INFO:           fairlearn: Not installed
2023-06-17 12:55:21,310:INFO:             xgboost: 1.7.4
2023-06-17 12:55:21,311:INFO:            catboost: Not installed
2023-06-17 12:55:21,311:INFO:              kmodes: Not installed
2023-06-17 12:55:21,311:INFO:             mlxtend: Not installed
2023-06-17 12:55:21,311:INFO:       statsforecast: Not installed
2023-06-17 12:55:21,311:INFO:        tune_sklearn: Not installed
2023-06-17 12:55:21,311:INFO:                 ray: Not installed
2023-06-17 12:55:21,311:INFO:            hyperopt: Not installed
2023-06-17 12:55:21,311:INFO:              optuna: Not installed
2023-06-17 12:55:21,311:INFO:               skopt: Not installed
2023-06-17 12:55:21,311:INFO:              mlflow: Not installed
2023-06-17 12:55:21,311:INFO:              gradio: Not installed
2023-06-17 12:55:21,311:INFO:             fastapi: Not installed
2023-06-17 12:55:21,311:INFO:             uvicorn: Not installed
2023-06-17 12:55:21,311:INFO:              m2cgen: Not installed
2023-06-17 12:55:21,311:INFO:           evidently: Not installed
2023-06-17 12:55:21,311:INFO:               fugue: Not installed
2023-06-17 12:55:21,311:INFO:           streamlit: 1.23.1
2023-06-17 12:55:21,311:INFO:             prophet: Not installed
2023-06-17 12:55:21,311:INFO:None
2023-06-17 12:55:21,311:INFO:Set up data.
2023-06-17 12:55:21,332:INFO:Set up train/test split.
2023-06-17 12:55:21,361:INFO:Set up index.
2023-06-17 12:55:21,363:INFO:Set up folding strategy.
2023-06-17 12:55:21,363:INFO:Assigning column types.
2023-06-17 12:55:21,371:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:55:21,415:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,416:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,442:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,487:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,488:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,514:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,517:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:55:21,560:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,587:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,631:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,657:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,660:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:55:21,730:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,801:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,804:INFO:Preparing preprocessing pipeline...
2023-06-17 12:55:21,806:INFO:Set up simple imputation.
2023-06-17 12:55:21,812:INFO:Set up encoding of categorical features.
2023-06-17 12:55:21,946:INFO:Finished creating preprocessing pipeline.
2023-06-17 12:55:21,950:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'smoking_history'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-06-17 12:55:21,950:INFO:Creating final display dataframe.
2023-06-17 12:55:22,311:INFO:Setup _display_container:                     Description             Value
0                    Session id              7833
1                        Target          diabetes
2                   Target type            Binary
3           Original data shape       (100000, 9)
4        Transformed data shape      (100000, 16)
5   Transformed train set shape       (70000, 16)
6    Transformed test set shape       (30000, 16)
7              Numeric features                 6
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              5cdc
2023-06-17 12:55:22,386:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:22,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:22,461:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:22,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:22,464:INFO:setup() successfully completed in 1.22s...............
2023-06-17 12:55:22,466:INFO:Initializing compare_models()
2023-06-17 12:55:22,466:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 12:55:22,466:INFO:Checking exceptions
2023-06-17 12:55:22,475:INFO:Preparing display monitor
2023-06-17 12:55:22,477:INFO:Initializing Logistic Regression
2023-06-17 12:55:22,477:INFO:Total runtime is 0.0 minutes
2023-06-17 12:55:22,477:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:22,478:INFO:Initializing create_model()
2023-06-17 12:55:22,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:22,478:INFO:Checking exceptions
2023-06-17 12:55:22,478:INFO:Importing libraries
2023-06-17 12:55:22,478:INFO:Copying training dataset
2023-06-17 12:55:22,493:INFO:Defining folds
2023-06-17 12:55:22,493:INFO:Declaring metric variables
2023-06-17 12:55:22,494:INFO:Importing untrained model
2023-06-17 12:55:22,494:INFO:Logistic Regression Imported successfully
2023-06-17 12:55:22,494:INFO:Starting cross validation
2023-06-17 12:55:22,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:39,777:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,048:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,159:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,266:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,285:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,934:INFO:Calculating mean and std
2023-06-17 12:55:40,935:INFO:Creating metrics dataframe
2023-06-17 12:55:41,061:INFO:Uploading results into container
2023-06-17 12:55:41,062:INFO:Uploading model into container now
2023-06-17 12:55:41,062:INFO:_master_model_container: 1
2023-06-17 12:55:41,062:INFO:_display_container: 2
2023-06-17 12:55:41,062:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7833, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 12:55:41,062:INFO:create_model() successfully completed......................................
2023-06-17 12:55:41,184:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:41,184:INFO:Creating metrics dataframe
2023-06-17 12:55:41,187:INFO:Initializing K Neighbors Classifier
2023-06-17 12:55:41,187:INFO:Total runtime is 0.3118354280789693 minutes
2023-06-17 12:55:41,187:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:41,187:INFO:Initializing create_model()
2023-06-17 12:55:41,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:41,188:INFO:Checking exceptions
2023-06-17 12:55:41,188:INFO:Importing libraries
2023-06-17 12:55:41,188:INFO:Copying training dataset
2023-06-17 12:55:41,200:INFO:Defining folds
2023-06-17 12:55:41,200:INFO:Declaring metric variables
2023-06-17 12:55:41,200:INFO:Importing untrained model
2023-06-17 12:55:41,200:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:55:41,201:INFO:Starting cross validation
2023-06-17 12:55:41,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:44,928:INFO:Calculating mean and std
2023-06-17 12:55:44,929:INFO:Creating metrics dataframe
2023-06-17 12:55:45,063:INFO:Uploading results into container
2023-06-17 12:55:45,064:INFO:Uploading model into container now
2023-06-17 12:55:45,064:INFO:_master_model_container: 2
2023-06-17 12:55:45,064:INFO:_display_container: 2
2023-06-17 12:55:45,064:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:55:45,065:INFO:create_model() successfully completed......................................
2023-06-17 12:55:45,183:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:45,183:INFO:Creating metrics dataframe
2023-06-17 12:55:45,186:INFO:Initializing Naive Bayes
2023-06-17 12:55:45,186:INFO:Total runtime is 0.37848543326059975 minutes
2023-06-17 12:55:45,186:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:45,186:INFO:Initializing create_model()
2023-06-17 12:55:45,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:45,186:INFO:Checking exceptions
2023-06-17 12:55:45,186:INFO:Importing libraries
2023-06-17 12:55:45,186:INFO:Copying training dataset
2023-06-17 12:55:45,199:INFO:Defining folds
2023-06-17 12:55:45,199:INFO:Declaring metric variables
2023-06-17 12:55:45,199:INFO:Importing untrained model
2023-06-17 12:55:45,200:INFO:Naive Bayes Imported successfully
2023-06-17 12:55:45,200:INFO:Starting cross validation
2023-06-17 12:55:45,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:46,411:INFO:Calculating mean and std
2023-06-17 12:55:46,411:INFO:Creating metrics dataframe
2023-06-17 12:55:46,550:INFO:Uploading results into container
2023-06-17 12:55:46,551:INFO:Uploading model into container now
2023-06-17 12:55:46,551:INFO:_master_model_container: 3
2023-06-17 12:55:46,551:INFO:_display_container: 2
2023-06-17 12:55:46,552:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 12:55:46,552:INFO:create_model() successfully completed......................................
2023-06-17 12:55:46,673:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:46,673:INFO:Creating metrics dataframe
2023-06-17 12:55:46,676:INFO:Initializing Decision Tree Classifier
2023-06-17 12:55:46,676:INFO:Total runtime is 0.4033187707265218 minutes
2023-06-17 12:55:46,676:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:46,677:INFO:Initializing create_model()
2023-06-17 12:55:46,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:46,677:INFO:Checking exceptions
2023-06-17 12:55:46,677:INFO:Importing libraries
2023-06-17 12:55:46,677:INFO:Copying training dataset
2023-06-17 12:55:46,690:INFO:Defining folds
2023-06-17 12:55:46,690:INFO:Declaring metric variables
2023-06-17 12:55:46,690:INFO:Importing untrained model
2023-06-17 12:55:46,690:INFO:Decision Tree Classifier Imported successfully
2023-06-17 12:55:46,690:INFO:Starting cross validation
2023-06-17 12:55:46,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:48,036:INFO:Calculating mean and std
2023-06-17 12:55:48,036:INFO:Creating metrics dataframe
2023-06-17 12:55:48,184:INFO:Uploading results into container
2023-06-17 12:55:48,184:INFO:Uploading model into container now
2023-06-17 12:55:48,185:INFO:_master_model_container: 4
2023-06-17 12:55:48,185:INFO:_display_container: 2
2023-06-17 12:55:48,185:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7833, splitter='best')
2023-06-17 12:55:48,185:INFO:create_model() successfully completed......................................
2023-06-17 12:55:48,302:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:48,302:INFO:Creating metrics dataframe
2023-06-17 12:55:48,305:INFO:Initializing SVM - Linear Kernel
2023-06-17 12:55:48,305:INFO:Total runtime is 0.4304687658945719 minutes
2023-06-17 12:55:48,305:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:48,306:INFO:Initializing create_model()
2023-06-17 12:55:48,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:48,306:INFO:Checking exceptions
2023-06-17 12:55:48,306:INFO:Importing libraries
2023-06-17 12:55:48,306:INFO:Copying training dataset
2023-06-17 12:55:48,318:INFO:Defining folds
2023-06-17 12:55:48,319:INFO:Declaring metric variables
2023-06-17 12:55:48,319:INFO:Importing untrained model
2023-06-17 12:55:48,319:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:55:48,319:INFO:Starting cross validation
2023-06-17 12:55:48,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:49,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:49,762:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:49,796:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:49,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:49,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,076:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,097:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,100:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,145:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,171:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,528:INFO:Calculating mean and std
2023-06-17 12:55:50,529:INFO:Creating metrics dataframe
2023-06-17 12:55:50,677:INFO:Uploading results into container
2023-06-17 12:55:50,678:INFO:Uploading model into container now
2023-06-17 12:55:50,678:INFO:_master_model_container: 5
2023-06-17 12:55:50,678:INFO:_display_container: 2
2023-06-17 12:55:50,679:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7833, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 12:55:50,679:INFO:create_model() successfully completed......................................
2023-06-17 12:55:50,797:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:50,797:INFO:Creating metrics dataframe
2023-06-17 12:55:50,800:INFO:Initializing Ridge Classifier
2023-06-17 12:55:50,801:INFO:Total runtime is 0.47206879059473666 minutes
2023-06-17 12:55:50,801:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:50,801:INFO:Initializing create_model()
2023-06-17 12:55:50,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:50,801:INFO:Checking exceptions
2023-06-17 12:55:50,801:INFO:Importing libraries
2023-06-17 12:55:50,801:INFO:Copying training dataset
2023-06-17 12:55:50,816:INFO:Defining folds
2023-06-17 12:55:50,816:INFO:Declaring metric variables
2023-06-17 12:55:50,816:INFO:Importing untrained model
2023-06-17 12:55:50,816:INFO:Ridge Classifier Imported successfully
2023-06-17 12:55:50,816:INFO:Starting cross validation
2023-06-17 12:55:50,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:51,125:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,132:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,133:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,143:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,177:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,186:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,194:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,216:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,221:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,924:INFO:Calculating mean and std
2023-06-17 12:55:51,924:INFO:Creating metrics dataframe
2023-06-17 12:55:52,068:INFO:Uploading results into container
2023-06-17 12:55:52,068:INFO:Uploading model into container now
2023-06-17 12:55:52,069:INFO:_master_model_container: 6
2023-06-17 12:55:52,069:INFO:_display_container: 2
2023-06-17 12:55:52,069:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7833, solver='auto',
                tol=0.0001)
2023-06-17 12:55:52,069:INFO:create_model() successfully completed......................................
2023-06-17 12:55:52,189:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:52,190:INFO:Creating metrics dataframe
2023-06-17 12:55:52,193:INFO:Initializing Random Forest Classifier
2023-06-17 12:55:52,193:INFO:Total runtime is 0.49526876211166376 minutes
2023-06-17 12:55:52,193:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:52,193:INFO:Initializing create_model()
2023-06-17 12:55:52,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:52,193:INFO:Checking exceptions
2023-06-17 12:55:52,193:INFO:Importing libraries
2023-06-17 12:55:52,193:INFO:Copying training dataset
2023-06-17 12:55:52,208:INFO:Defining folds
2023-06-17 12:55:52,208:INFO:Declaring metric variables
2023-06-17 12:55:52,208:INFO:Importing untrained model
2023-06-17 12:55:52,208:INFO:Random Forest Classifier Imported successfully
2023-06-17 12:55:52,208:INFO:Starting cross validation
2023-06-17 12:55:52,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:55,028:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:55:55,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.12s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:55:55,362:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.12s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:55:56,875:INFO:Calculating mean and std
2023-06-17 12:55:56,875:INFO:Creating metrics dataframe
2023-06-17 12:55:57,027:INFO:Uploading results into container
2023-06-17 12:55:57,028:INFO:Uploading model into container now
2023-06-17 12:55:57,028:INFO:_master_model_container: 7
2023-06-17 12:55:57,028:INFO:_display_container: 2
2023-06-17 12:55:57,029:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7833, verbose=0, warm_start=False)
2023-06-17 12:55:57,029:INFO:create_model() successfully completed......................................
2023-06-17 12:55:57,152:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:57,152:INFO:Creating metrics dataframe
2023-06-17 12:55:57,155:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 12:55:57,155:INFO:Total runtime is 0.5779687444368997 minutes
2023-06-17 12:55:57,156:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:57,156:INFO:Initializing create_model()
2023-06-17 12:55:57,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:57,156:INFO:Checking exceptions
2023-06-17 12:55:57,156:INFO:Importing libraries
2023-06-17 12:55:57,156:INFO:Copying training dataset
2023-06-17 12:55:57,169:INFO:Defining folds
2023-06-17 12:55:57,169:INFO:Declaring metric variables
2023-06-17 12:55:57,169:INFO:Importing untrained model
2023-06-17 12:55:57,169:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:55:57,170:INFO:Starting cross validation
2023-06-17 12:55:57,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:57,405:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,407:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,431:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,436:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,467:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,479:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,495:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,539:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,553:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:58,384:INFO:Calculating mean and std
2023-06-17 12:55:58,385:INFO:Creating metrics dataframe
2023-06-17 12:55:58,537:INFO:Uploading results into container
2023-06-17 12:55:58,538:INFO:Uploading model into container now
2023-06-17 12:55:58,538:INFO:_master_model_container: 8
2023-06-17 12:55:58,538:INFO:_display_container: 2
2023-06-17 12:55:58,539:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-17 12:55:58,539:INFO:create_model() successfully completed......................................
2023-06-17 12:55:58,658:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:58,658:INFO:Creating metrics dataframe
2023-06-17 12:55:58,661:INFO:Initializing Ada Boost Classifier
2023-06-17 12:55:58,661:INFO:Total runtime is 0.6030687729517618 minutes
2023-06-17 12:55:58,661:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:58,661:INFO:Initializing create_model()
2023-06-17 12:55:58,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:58,662:INFO:Checking exceptions
2023-06-17 12:55:58,662:INFO:Importing libraries
2023-06-17 12:55:58,662:INFO:Copying training dataset
2023-06-17 12:55:58,676:INFO:Defining folds
2023-06-17 12:55:58,676:INFO:Declaring metric variables
2023-06-17 12:55:58,677:INFO:Importing untrained model
2023-06-17 12:55:58,677:INFO:Ada Boost Classifier Imported successfully
2023-06-17 12:55:58,677:INFO:Starting cross validation
2023-06-17 12:55:58,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:02,234:INFO:Calculating mean and std
2023-06-17 12:56:02,234:INFO:Creating metrics dataframe
2023-06-17 12:56:02,398:INFO:Uploading results into container
2023-06-17 12:56:02,399:INFO:Uploading model into container now
2023-06-17 12:56:02,400:INFO:_master_model_container: 9
2023-06-17 12:56:02,400:INFO:_display_container: 2
2023-06-17 12:56:02,400:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7833)
2023-06-17 12:56:02,400:INFO:create_model() successfully completed......................................
2023-06-17 12:56:02,518:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:02,518:INFO:Creating metrics dataframe
2023-06-17 12:56:02,521:INFO:Initializing Gradient Boosting Classifier
2023-06-17 12:56:02,521:INFO:Total runtime is 0.6674020806948343 minutes
2023-06-17 12:56:02,521:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:02,522:INFO:Initializing create_model()
2023-06-17 12:56:02,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:02,522:INFO:Checking exceptions
2023-06-17 12:56:02,522:INFO:Importing libraries
2023-06-17 12:56:02,522:INFO:Copying training dataset
2023-06-17 12:56:02,534:INFO:Defining folds
2023-06-17 12:56:02,535:INFO:Declaring metric variables
2023-06-17 12:56:02,535:INFO:Importing untrained model
2023-06-17 12:56:02,535:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:56:02,535:INFO:Starting cross validation
2023-06-17 12:56:02,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:09,334:INFO:Calculating mean and std
2023-06-17 12:56:09,334:INFO:Creating metrics dataframe
2023-06-17 12:56:09,496:INFO:Uploading results into container
2023-06-17 12:56:09,497:INFO:Uploading model into container now
2023-06-17 12:56:09,497:INFO:_master_model_container: 10
2023-06-17 12:56:09,497:INFO:_display_container: 2
2023-06-17 12:56:09,497:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:56:09,497:INFO:create_model() successfully completed......................................
2023-06-17 12:56:09,616:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:09,616:INFO:Creating metrics dataframe
2023-06-17 12:56:09,619:INFO:Initializing Linear Discriminant Analysis
2023-06-17 12:56:09,619:INFO:Total runtime is 0.785702085494995 minutes
2023-06-17 12:56:09,619:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:09,619:INFO:Initializing create_model()
2023-06-17 12:56:09,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:09,619:INFO:Checking exceptions
2023-06-17 12:56:09,619:INFO:Importing libraries
2023-06-17 12:56:09,619:INFO:Copying training dataset
2023-06-17 12:56:09,632:INFO:Defining folds
2023-06-17 12:56:09,632:INFO:Declaring metric variables
2023-06-17 12:56:09,632:INFO:Importing untrained model
2023-06-17 12:56:09,632:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 12:56:09,632:INFO:Starting cross validation
2023-06-17 12:56:09,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:11,018:INFO:Calculating mean and std
2023-06-17 12:56:11,019:INFO:Creating metrics dataframe
2023-06-17 12:56:11,183:INFO:Uploading results into container
2023-06-17 12:56:11,184:INFO:Uploading model into container now
2023-06-17 12:56:11,184:INFO:_master_model_container: 11
2023-06-17 12:56:11,184:INFO:_display_container: 2
2023-06-17 12:56:11,185:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 12:56:11,185:INFO:create_model() successfully completed......................................
2023-06-17 12:56:11,302:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:11,302:INFO:Creating metrics dataframe
2023-06-17 12:56:11,305:INFO:Initializing Extra Trees Classifier
2023-06-17 12:56:11,305:INFO:Total runtime is 0.8138020753860472 minutes
2023-06-17 12:56:11,306:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:11,306:INFO:Initializing create_model()
2023-06-17 12:56:11,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:11,306:INFO:Checking exceptions
2023-06-17 12:56:11,306:INFO:Importing libraries
2023-06-17 12:56:11,306:INFO:Copying training dataset
2023-06-17 12:56:11,319:INFO:Defining folds
2023-06-17 12:56:11,319:INFO:Declaring metric variables
2023-06-17 12:56:11,319:INFO:Importing untrained model
2023-06-17 12:56:11,319:INFO:Extra Trees Classifier Imported successfully
2023-06-17 12:56:11,320:INFO:Starting cross validation
2023-06-17 12:56:11,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:14,214:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:56:14,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:56:15,771:INFO:Calculating mean and std
2023-06-17 12:56:15,771:INFO:Creating metrics dataframe
2023-06-17 12:56:15,941:INFO:Uploading results into container
2023-06-17 12:56:15,942:INFO:Uploading model into container now
2023-06-17 12:56:15,942:INFO:_master_model_container: 12
2023-06-17 12:56:15,942:INFO:_display_container: 2
2023-06-17 12:56:15,942:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7833, verbose=0, warm_start=False)
2023-06-17 12:56:15,942:INFO:create_model() successfully completed......................................
2023-06-17 12:56:16,060:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:16,061:INFO:Creating metrics dataframe
2023-06-17 12:56:16,064:INFO:Initializing Extreme Gradient Boosting
2023-06-17 12:56:16,064:INFO:Total runtime is 0.8931187470753986 minutes
2023-06-17 12:56:16,064:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:16,064:INFO:Initializing create_model()
2023-06-17 12:56:16,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:16,064:INFO:Checking exceptions
2023-06-17 12:56:16,064:INFO:Importing libraries
2023-06-17 12:56:16,064:INFO:Copying training dataset
2023-06-17 12:56:16,077:INFO:Defining folds
2023-06-17 12:56:16,077:INFO:Declaring metric variables
2023-06-17 12:56:16,077:INFO:Importing untrained model
2023-06-17 12:56:16,078:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 12:56:16,078:INFO:Starting cross validation
2023-06-17 12:56:16,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:22,361:INFO:Calculating mean and std
2023-06-17 12:56:22,362:INFO:Creating metrics dataframe
2023-06-17 12:56:22,535:INFO:Uploading results into container
2023-06-17 12:56:22,535:INFO:Uploading model into container now
2023-06-17 12:56:22,536:INFO:_master_model_container: 13
2023-06-17 12:56:22,536:INFO:_display_container: 2
2023-06-17 12:56:22,536:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 12:56:22,536:INFO:create_model() successfully completed......................................
2023-06-17 12:56:22,655:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:22,656:INFO:Creating metrics dataframe
2023-06-17 12:56:22,659:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 12:56:22,659:INFO:Total runtime is 1.0030354261398313 minutes
2023-06-17 12:56:22,659:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:22,659:INFO:Initializing create_model()
2023-06-17 12:56:22,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:22,659:INFO:Checking exceptions
2023-06-17 12:56:22,659:INFO:Importing libraries
2023-06-17 12:56:22,659:INFO:Copying training dataset
2023-06-17 12:56:22,674:INFO:Defining folds
2023-06-17 12:56:22,674:INFO:Declaring metric variables
2023-06-17 12:56:22,674:INFO:Importing untrained model
2023-06-17 12:56:22,675:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 12:56:22,675:INFO:Starting cross validation
2023-06-17 12:56:22,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:24,570:INFO:Calculating mean and std
2023-06-17 12:56:24,571:INFO:Creating metrics dataframe
2023-06-17 12:56:24,751:INFO:Uploading results into container
2023-06-17 12:56:24,751:INFO:Uploading model into container now
2023-06-17 12:56:24,752:INFO:_master_model_container: 14
2023-06-17 12:56:24,752:INFO:_display_container: 2
2023-06-17 12:56:24,752:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7833, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 12:56:24,752:INFO:create_model() successfully completed......................................
2023-06-17 12:56:24,871:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:24,871:INFO:Creating metrics dataframe
2023-06-17 12:56:24,874:INFO:Initializing Dummy Classifier
2023-06-17 12:56:24,874:INFO:Total runtime is 1.0399518966674803 minutes
2023-06-17 12:56:24,874:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:24,874:INFO:Initializing create_model()
2023-06-17 12:56:24,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:24,874:INFO:Checking exceptions
2023-06-17 12:56:24,874:INFO:Importing libraries
2023-06-17 12:56:24,874:INFO:Copying training dataset
2023-06-17 12:56:24,887:INFO:Defining folds
2023-06-17 12:56:24,887:INFO:Declaring metric variables
2023-06-17 12:56:24,887:INFO:Importing untrained model
2023-06-17 12:56:24,887:INFO:Dummy Classifier Imported successfully
2023-06-17 12:56:24,887:INFO:Starting cross validation
2023-06-17 12:56:24,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:25,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,167:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,206:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,211:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,217:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,226:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,245:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,262:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,275:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:26,133:INFO:Calculating mean and std
2023-06-17 12:56:26,134:INFO:Creating metrics dataframe
2023-06-17 12:56:26,319:INFO:Uploading results into container
2023-06-17 12:56:26,320:INFO:Uploading model into container now
2023-06-17 12:56:26,320:INFO:_master_model_container: 15
2023-06-17 12:56:26,320:INFO:_display_container: 2
2023-06-17 12:56:26,321:INFO:DummyClassifier(constant=None, random_state=7833, strategy='prior')
2023-06-17 12:56:26,321:INFO:create_model() successfully completed......................................
2023-06-17 12:56:26,439:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:26,439:INFO:Creating metrics dataframe
2023-06-17 12:56:26,444:INFO:Initializing create_model()
2023-06-17 12:56:26,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:26,444:INFO:Checking exceptions
2023-06-17 12:56:26,445:INFO:Importing libraries
2023-06-17 12:56:26,445:INFO:Copying training dataset
2023-06-17 12:56:26,460:INFO:Defining folds
2023-06-17 12:56:26,460:INFO:Declaring metric variables
2023-06-17 12:56:26,460:INFO:Importing untrained model
2023-06-17 12:56:26,460:INFO:Declaring custom model
2023-06-17 12:56:26,460:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:56:26,461:INFO:Cross validation set to False
2023-06-17 12:56:26,461:INFO:Fitting Model
2023-06-17 12:56:31,066:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:56:31,066:INFO:create_model() successfully completed......................................
2023-06-17 12:56:31,197:INFO:_master_model_container: 15
2023-06-17 12:56:31,197:INFO:_display_container: 2
2023-06-17 12:56:31,198:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:56:31,198:INFO:compare_models() successfully completed......................................
2023-06-17 12:56:31,203:INFO:Initializing save_model()
2023-06-17 12:56:31,203:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'smoking_history'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 12:56:31,203:INFO:Adding model into prep_pipe
2023-06-17 12:56:31,212:INFO:best_model.pkl saved in current working directory
2023-06-17 12:56:31,217:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=7833, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-06-17 12:56:31,217:INFO:save_model() successfully completed......................................
2023-06-17 13:34:46,926:INFO:PyCaret ClassificationExperiment
2023-06-17 13:34:46,926:INFO:Logging name: clf-default-name
2023-06-17 13:34:46,926:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 13:34:46,926:INFO:version 3.0.2
2023-06-17 13:34:46,926:INFO:Initializing setup()
2023-06-17 13:34:46,926:INFO:self.USI: d886
2023-06-17 13:34:46,926:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 13:34:46,926:INFO:Checking environment
2023-06-17 13:34:46,927:INFO:python_version: 3.9.5
2023-06-17 13:34:46,927:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 13:34:46,927:INFO:machine: AMD64
2023-06-17 13:34:46,927:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 13:34:46,930:INFO:Memory: svmem(total=17102532608, available=9306193920, percent=45.6, used=7796338688, free=9306193920)
2023-06-17 13:34:46,930:INFO:Physical Core: 8
2023-06-17 13:34:46,930:INFO:Logical Core: 16
2023-06-17 13:34:46,930:INFO:Checking libraries
2023-06-17 13:34:46,930:INFO:System:
2023-06-17 13:34:46,930:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 13:34:46,930:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 13:34:46,930:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 13:34:46,930:INFO:PyCaret required dependencies:
2023-06-17 13:34:46,930:INFO:                 pip: 23.1.2
2023-06-17 13:34:46,930:INFO:          setuptools: 56.0.0
2023-06-17 13:34:46,930:INFO:             pycaret: 3.0.2
2023-06-17 13:34:46,930:INFO:             IPython: 8.14.0
2023-06-17 13:34:46,931:INFO:          ipywidgets: 8.0.6
2023-06-17 13:34:46,931:INFO:                tqdm: 4.65.0
2023-06-17 13:34:46,931:INFO:               numpy: 1.22.3
2023-06-17 13:34:46,931:INFO:              pandas: 1.4.2
2023-06-17 13:34:46,931:INFO:              jinja2: 3.1.2
2023-06-17 13:34:46,931:INFO:               scipy: 1.8.0
2023-06-17 13:34:46,931:INFO:              joblib: 1.2.0
2023-06-17 13:34:46,931:INFO:             sklearn: 1.2.2
2023-06-17 13:34:46,931:INFO:                pyod: 1.0.9
2023-06-17 13:34:46,931:INFO:            imblearn: 0.10.1
2023-06-17 13:34:46,931:INFO:   category_encoders: 2.6.1
2023-06-17 13:34:46,931:INFO:            lightgbm: 3.3.5
2023-06-17 13:34:46,931:INFO:               numba: 0.57.0
2023-06-17 13:34:46,931:INFO:            requests: 2.27.1
2023-06-17 13:34:46,931:INFO:          matplotlib: 3.5.1
2023-06-17 13:34:46,931:INFO:          scikitplot: 0.3.7
2023-06-17 13:34:46,931:INFO:         yellowbrick: 1.5
2023-06-17 13:34:46,931:INFO:              plotly: 5.10.0
2023-06-17 13:34:46,931:INFO:             kaleido: 0.2.1
2023-06-17 13:34:46,931:INFO:         statsmodels: 0.14.0
2023-06-17 13:34:46,931:INFO:              sktime: 0.17.0
2023-06-17 13:34:46,931:INFO:               tbats: 1.1.3
2023-06-17 13:34:46,931:INFO:            pmdarima: 2.0.3
2023-06-17 13:34:46,931:INFO:              psutil: 5.9.5
2023-06-17 13:34:46,931:INFO:PyCaret optional dependencies:
2023-06-17 13:34:46,931:INFO:                shap: Not installed
2023-06-17 13:34:46,931:INFO:           interpret: Not installed
2023-06-17 13:34:46,931:INFO:                umap: Not installed
2023-06-17 13:34:46,931:INFO:    pandas_profiling: 4.2.0
2023-06-17 13:34:46,931:INFO:  explainerdashboard: Not installed
2023-06-17 13:34:46,931:INFO:             autoviz: Not installed
2023-06-17 13:34:46,932:INFO:           fairlearn: Not installed
2023-06-17 13:34:46,932:INFO:             xgboost: 1.7.4
2023-06-17 13:34:46,932:INFO:            catboost: Not installed
2023-06-17 13:34:46,932:INFO:              kmodes: Not installed
2023-06-17 13:34:46,932:INFO:             mlxtend: Not installed
2023-06-17 13:34:46,932:INFO:       statsforecast: Not installed
2023-06-17 13:34:46,932:INFO:        tune_sklearn: Not installed
2023-06-17 13:34:46,932:INFO:                 ray: Not installed
2023-06-17 13:34:46,932:INFO:            hyperopt: Not installed
2023-06-17 13:34:46,932:INFO:              optuna: Not installed
2023-06-17 13:34:46,932:INFO:               skopt: Not installed
2023-06-17 13:34:46,932:INFO:              mlflow: Not installed
2023-06-17 13:34:46,932:INFO:              gradio: Not installed
2023-06-17 13:34:46,932:INFO:             fastapi: Not installed
2023-06-17 13:34:46,932:INFO:             uvicorn: Not installed
2023-06-17 13:34:46,932:INFO:              m2cgen: Not installed
2023-06-17 13:34:46,932:INFO:           evidently: Not installed
2023-06-17 13:34:46,932:INFO:               fugue: Not installed
2023-06-17 13:34:46,932:INFO:           streamlit: 1.23.1
2023-06-17 13:34:46,932:INFO:             prophet: Not installed
2023-06-17 13:34:46,932:INFO:None
2023-06-17 13:34:46,932:INFO:Set up data.
2023-06-17 13:34:46,954:INFO:Set up train/test split.
2023-06-17 13:34:47,009:INFO:Set up index.
2023-06-17 13:34:47,010:INFO:Set up folding strategy.
2023-06-17 13:34:47,011:INFO:Assigning column types.
2023-06-17 13:34:47,017:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 13:34:47,059:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:34:47,060:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 13:34:47,086:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:34:47,089:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:34:47,131:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:34:47,132:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 13:34:47,158:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:34:47,161:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:34:47,161:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 13:34:47,203:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 13:34:47,229:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:34:47,232:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:34:47,275:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 13:34:47,301:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:34:47,304:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:34:47,304:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 13:34:47,373:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:34:47,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:34:47,447:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:34:47,450:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:34:47,451:INFO:Preparing preprocessing pipeline...
2023-06-17 13:34:47,453:INFO:Set up label encoding.
2023-06-17 13:34:47,453:INFO:Set up simple imputation.
2023-06-17 13:34:47,459:INFO:Set up encoding of categorical features.
2023-06-17 13:34:47,565:INFO:Finished creating preprocessing pipeline.
2023-06-17 13:34:47,569:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level',
                                             'diabetes'],
                                    transform...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['smoking_history'],
                                    transformer=OneHotEncoder(cols=['smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-06-17 13:34:47,569:INFO:Creating final display dataframe.
2023-06-17 13:34:47,874:INFO:Setup _display_container:                     Description                         Value
0                    Session id                          2889
1                        Target                        gender
2                   Target type                    Multiclass
3                Target mapping  Female: 0, Male: 1, Other: 2
4           Original data shape                   (100000, 9)
5        Transformed data shape                  (100000, 14)
6   Transformed train set shape                   (70000, 14)
7    Transformed test set shape                   (30000, 14)
8              Numeric features                             7
9          Categorical features                             1
10                   Preprocess                          True
11              Imputation type                        simple
12           Numeric imputation                          mean
13       Categorical imputation                          mode
14     Maximum one-hot encoding                            25
15              Encoding method                          None
16               Fold Generator               StratifiedKFold
17                  Fold Number                            10
18                     CPU Jobs                            -1
19                      Use GPU                         False
20               Log Experiment                         False
21              Experiment Name              clf-default-name
22                          USI                          d886
2023-06-17 13:34:47,949:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:34:47,951:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:34:48,021:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:34:48,024:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:34:48,024:INFO:setup() successfully completed in 1.19s...............
2023-06-17 13:34:48,027:INFO:Initializing compare_models()
2023-06-17 13:34:48,027:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 13:34:48,027:INFO:Checking exceptions
2023-06-17 13:34:48,036:INFO:Preparing display monitor
2023-06-17 13:34:48,038:INFO:Initializing Logistic Regression
2023-06-17 13:34:48,038:INFO:Total runtime is 0.0 minutes
2023-06-17 13:34:48,038:INFO:SubProcess create_model() called ==================================
2023-06-17 13:34:48,038:INFO:Initializing create_model()
2023-06-17 13:34:48,038:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:34:48,038:INFO:Checking exceptions
2023-06-17 13:34:48,039:INFO:Importing libraries
2023-06-17 13:34:48,039:INFO:Copying training dataset
2023-06-17 13:34:48,056:INFO:Defining folds
2023-06-17 13:34:48,056:INFO:Declaring metric variables
2023-06-17 13:34:48,056:INFO:Importing untrained model
2023-06-17 13:34:48,057:INFO:Logistic Regression Imported successfully
2023-06-17 13:34:48,057:INFO:Starting cross validation
2023-06-17 13:34:48,058:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:34:55,067:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:55,105:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:55,123:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:55,139:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:55,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:55,761:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:55,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:55,792:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,056:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,093:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,114:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:56,128:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,407:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,431:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,443:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:56,454:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,556:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,578:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,596:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:56,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,760:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,781:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,793:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:56,804:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,952:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:56,988:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:57,000:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,203:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,225:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,236:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:57,246:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:57,360:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,397:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,418:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,431:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:57,442:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:57,514:INFO:Calculating mean and std
2023-06-17 13:34:57,515:INFO:Creating metrics dataframe
2023-06-17 13:34:57,695:INFO:Uploading results into container
2023-06-17 13:34:57,696:INFO:Uploading model into container now
2023-06-17 13:34:57,696:INFO:_master_model_container: 1
2023-06-17 13:34:57,696:INFO:_display_container: 2
2023-06-17 13:34:57,696:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2889, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 13:34:57,696:INFO:create_model() successfully completed......................................
2023-06-17 13:34:57,822:INFO:SubProcess create_model() end ==================================
2023-06-17 13:34:57,822:INFO:Creating metrics dataframe
2023-06-17 13:34:57,825:INFO:Initializing K Neighbors Classifier
2023-06-17 13:34:57,825:INFO:Total runtime is 0.16311664978663126 minutes
2023-06-17 13:34:57,825:INFO:SubProcess create_model() called ==================================
2023-06-17 13:34:57,825:INFO:Initializing create_model()
2023-06-17 13:34:57,825:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:34:57,825:INFO:Checking exceptions
2023-06-17 13:34:57,825:INFO:Importing libraries
2023-06-17 13:34:57,825:INFO:Copying training dataset
2023-06-17 13:34:57,838:INFO:Defining folds
2023-06-17 13:34:57,838:INFO:Declaring metric variables
2023-06-17 13:34:57,838:INFO:Importing untrained model
2023-06-17 13:34:57,838:INFO:K Neighbors Classifier Imported successfully
2023-06-17 13:34:57,838:INFO:Starting cross validation
2023-06-17 13:34:57,839:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:34:59,200:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,218:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,234:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,253:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,255:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:59,259:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,266:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:59,271:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,276:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,278:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,291:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,305:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:59,310:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:34:59,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:34:59,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,097:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,115:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,145:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,154:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:01,169:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:01,176:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,182:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,185:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,218:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,233:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:01,250:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,345:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,382:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:01,389:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,389:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,391:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,400:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:01,401:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:01,411:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,411:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:01,854:INFO:Calculating mean and std
2023-06-17 13:35:01,855:INFO:Creating metrics dataframe
2023-06-17 13:35:02,046:INFO:Uploading results into container
2023-06-17 13:35:02,046:INFO:Uploading model into container now
2023-06-17 13:35:02,047:INFO:_master_model_container: 2
2023-06-17 13:35:02,047:INFO:_display_container: 2
2023-06-17 13:35:02,047:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 13:35:02,047:INFO:create_model() successfully completed......................................
2023-06-17 13:35:02,168:INFO:SubProcess create_model() end ==================================
2023-06-17 13:35:02,168:INFO:Creating metrics dataframe
2023-06-17 13:35:02,171:INFO:Initializing Naive Bayes
2023-06-17 13:35:02,171:INFO:Total runtime is 0.2355499784151713 minutes
2023-06-17 13:35:02,172:INFO:SubProcess create_model() called ==================================
2023-06-17 13:35:02,172:INFO:Initializing create_model()
2023-06-17 13:35:02,172:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:35:02,172:INFO:Checking exceptions
2023-06-17 13:35:02,172:INFO:Importing libraries
2023-06-17 13:35:02,172:INFO:Copying training dataset
2023-06-17 13:35:02,189:INFO:Defining folds
2023-06-17 13:35:02,189:INFO:Declaring metric variables
2023-06-17 13:35:02,189:INFO:Importing untrained model
2023-06-17 13:35:02,190:INFO:Naive Bayes Imported successfully
2023-06-17 13:35:02,190:INFO:Starting cross validation
2023-06-17 13:35:02,190:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:35:02,634:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,666:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,686:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,702:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,712:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,715:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,721:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,722:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,749:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,749:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,754:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,757:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,759:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,781:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,783:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,787:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,787:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,788:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,792:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,804:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,821:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,823:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:02,827:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:03,804:INFO:Calculating mean and std
2023-06-17 13:35:03,805:INFO:Creating metrics dataframe
2023-06-17 13:35:03,994:INFO:Uploading results into container
2023-06-17 13:35:03,995:INFO:Uploading model into container now
2023-06-17 13:35:03,995:INFO:_master_model_container: 3
2023-06-17 13:35:03,995:INFO:_display_container: 2
2023-06-17 13:35:03,995:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 13:35:03,995:INFO:create_model() successfully completed......................................
2023-06-17 13:35:04,118:INFO:SubProcess create_model() end ==================================
2023-06-17 13:35:04,118:INFO:Creating metrics dataframe
2023-06-17 13:35:04,121:INFO:Initializing Decision Tree Classifier
2023-06-17 13:35:04,121:INFO:Total runtime is 0.2680499831835429 minutes
2023-06-17 13:35:04,121:INFO:SubProcess create_model() called ==================================
2023-06-17 13:35:04,121:INFO:Initializing create_model()
2023-06-17 13:35:04,121:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:35:04,121:INFO:Checking exceptions
2023-06-17 13:35:04,122:INFO:Importing libraries
2023-06-17 13:35:04,122:INFO:Copying training dataset
2023-06-17 13:35:04,135:INFO:Defining folds
2023-06-17 13:35:04,135:INFO:Declaring metric variables
2023-06-17 13:35:04,136:INFO:Importing untrained model
2023-06-17 13:35:04,136:INFO:Decision Tree Classifier Imported successfully
2023-06-17 13:35:04,136:INFO:Starting cross validation
2023-06-17 13:35:04,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:35:04,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:04,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:04,961:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:04,969:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:04,978:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:04,980:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:04,995:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,001:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,004:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,006:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,007:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,010:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,011:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,014:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,016:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,024:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:05,025:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,030:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,034:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,039:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,039:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,044:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,046:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,049:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:05,054:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:05,064:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,064:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:05,065:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,067:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,070:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,079:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,080:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:05,096:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:06,165:INFO:Calculating mean and std
2023-06-17 13:35:06,166:INFO:Creating metrics dataframe
2023-06-17 13:35:06,360:INFO:Uploading results into container
2023-06-17 13:35:06,361:INFO:Uploading model into container now
2023-06-17 13:35:06,361:INFO:_master_model_container: 4
2023-06-17 13:35:06,361:INFO:_display_container: 2
2023-06-17 13:35:06,361:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2889, splitter='best')
2023-06-17 13:35:06,361:INFO:create_model() successfully completed......................................
2023-06-17 13:35:06,487:INFO:SubProcess create_model() end ==================================
2023-06-17 13:35:06,487:INFO:Creating metrics dataframe
2023-06-17 13:35:06,490:INFO:Initializing SVM - Linear Kernel
2023-06-17 13:35:06,490:INFO:Total runtime is 0.30753386815389 minutes
2023-06-17 13:35:06,491:INFO:SubProcess create_model() called ==================================
2023-06-17 13:35:06,491:INFO:Initializing create_model()
2023-06-17 13:35:06,491:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:35:06,491:INFO:Checking exceptions
2023-06-17 13:35:06,491:INFO:Importing libraries
2023-06-17 13:35:06,491:INFO:Copying training dataset
2023-06-17 13:35:06,506:INFO:Defining folds
2023-06-17 13:35:06,506:INFO:Declaring metric variables
2023-06-17 13:35:06,506:INFO:Importing untrained model
2023-06-17 13:35:06,506:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 13:35:06,507:INFO:Starting cross validation
2023-06-17 13:35:06,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:35:12,094:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:12,111:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:12,148:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:12,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:12,183:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:12,705:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:12,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:12,754:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:12,772:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:12,786:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:14,290:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:14,306:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:14,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:14,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:14,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:14,445:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:14,459:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:14,489:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:14,505:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:14,518:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,085:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:15,094:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,117:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,133:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:15,143:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,207:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:15,221:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,250:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,264:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:15,276:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,652:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:15,662:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:15,706:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,780:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:15,790:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,818:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:15,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:15,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:16,064:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:16,073:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:16,094:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:16,106:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:16,116:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:16,644:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:35:16,653:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:16,673:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:16,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:16,694:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:16,724:INFO:Calculating mean and std
2023-06-17 13:35:16,724:INFO:Creating metrics dataframe
2023-06-17 13:35:16,910:INFO:Uploading results into container
2023-06-17 13:35:16,911:INFO:Uploading model into container now
2023-06-17 13:35:16,911:INFO:_master_model_container: 5
2023-06-17 13:35:16,911:INFO:_display_container: 2
2023-06-17 13:35:16,911:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2889, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 13:35:16,912:INFO:create_model() successfully completed......................................
2023-06-17 13:35:17,032:INFO:SubProcess create_model() end ==================================
2023-06-17 13:35:17,033:INFO:Creating metrics dataframe
2023-06-17 13:35:17,036:INFO:Initializing Ridge Classifier
2023-06-17 13:35:17,036:INFO:Total runtime is 0.48330308993657434 minutes
2023-06-17 13:35:17,036:INFO:SubProcess create_model() called ==================================
2023-06-17 13:35:17,036:INFO:Initializing create_model()
2023-06-17 13:35:17,036:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:35:17,036:INFO:Checking exceptions
2023-06-17 13:35:17,036:INFO:Importing libraries
2023-06-17 13:35:17,036:INFO:Copying training dataset
2023-06-17 13:35:17,050:INFO:Defining folds
2023-06-17 13:35:17,050:INFO:Declaring metric variables
2023-06-17 13:35:17,050:INFO:Importing untrained model
2023-06-17 13:35:17,050:INFO:Ridge Classifier Imported successfully
2023-06-17 13:35:17,050:INFO:Starting cross validation
2023-06-17 13:35:17,051:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:35:17,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,472:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,496:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,510:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,517:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,529:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,533:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,539:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,541:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,541:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,543:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,554:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,559:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,561:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,561:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,567:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,569:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,571:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,572:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,572:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,576:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,579:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,585:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,589:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,590:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,590:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,600:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,604:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,606:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:35:17,609:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,618:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,618:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,623:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,624:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,624:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,627:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,634:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,640:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,641:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,643:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,650:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,659:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:17,670:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:17,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:18,711:INFO:Calculating mean and std
2023-06-17 13:35:18,712:INFO:Creating metrics dataframe
2023-06-17 13:35:18,910:INFO:Uploading results into container
2023-06-17 13:35:18,910:INFO:Uploading model into container now
2023-06-17 13:35:18,911:INFO:_master_model_container: 6
2023-06-17 13:35:18,911:INFO:_display_container: 2
2023-06-17 13:35:18,911:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2889, solver='auto',
                tol=0.0001)
2023-06-17 13:35:18,911:INFO:create_model() successfully completed......................................
2023-06-17 13:35:19,042:INFO:SubProcess create_model() end ==================================
2023-06-17 13:35:19,042:INFO:Creating metrics dataframe
2023-06-17 13:35:19,046:INFO:Initializing Random Forest Classifier
2023-06-17 13:35:19,046:INFO:Total runtime is 0.5168030858039856 minutes
2023-06-17 13:35:19,047:INFO:SubProcess create_model() called ==================================
2023-06-17 13:35:19,047:INFO:Initializing create_model()
2023-06-17 13:35:19,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:35:19,047:INFO:Checking exceptions
2023-06-17 13:35:19,047:INFO:Importing libraries
2023-06-17 13:35:19,047:INFO:Copying training dataset
2023-06-17 13:35:19,064:INFO:Defining folds
2023-06-17 13:35:19,064:INFO:Declaring metric variables
2023-06-17 13:35:19,064:INFO:Importing untrained model
2023-06-17 13:35:19,064:INFO:Random Forest Classifier Imported successfully
2023-06-17 13:35:19,065:INFO:Starting cross validation
2023-06-17 13:35:19,065:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:35:25,190:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.80s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 13:35:26,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:26,413:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:26,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:26,450:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:26,997:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.62s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-17 13:35:27,100:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.71s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 13:35:27,125:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,199:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,201:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,224:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:27,241:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,243:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,283:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,461:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,499:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,519:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:27,537:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:27,670:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.67s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-17 13:35:28,833:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:28,878:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:28,897:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:28,912:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:28,945:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:28,956:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:28,979:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:29,008:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:29,008:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:29,021:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:29,023:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:29,773:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:29,805:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:29,822:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:29,832:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:29,898:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:29,921:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:29,933:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:29,943:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:30,018:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:30,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:30,056:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:30,066:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:30,206:INFO:Calculating mean and std
2023-06-17 13:35:30,206:INFO:Creating metrics dataframe
2023-06-17 13:35:30,412:INFO:Uploading results into container
2023-06-17 13:35:30,413:INFO:Uploading model into container now
2023-06-17 13:35:30,413:INFO:_master_model_container: 7
2023-06-17 13:35:30,413:INFO:_display_container: 2
2023-06-17 13:35:30,414:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2889, verbose=0, warm_start=False)
2023-06-17 13:35:30,414:INFO:create_model() successfully completed......................................
2023-06-17 13:35:30,556:INFO:SubProcess create_model() end ==================================
2023-06-17 13:35:30,557:INFO:Creating metrics dataframe
2023-06-17 13:35:30,561:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 13:35:30,561:INFO:Total runtime is 0.708728833993276 minutes
2023-06-17 13:35:30,561:INFO:SubProcess create_model() called ==================================
2023-06-17 13:35:30,561:INFO:Initializing create_model()
2023-06-17 13:35:30,561:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:35:30,561:INFO:Checking exceptions
2023-06-17 13:35:30,561:INFO:Importing libraries
2023-06-17 13:35:30,561:INFO:Copying training dataset
2023-06-17 13:35:30,577:INFO:Defining folds
2023-06-17 13:35:30,577:INFO:Declaring metric variables
2023-06-17 13:35:30,578:INFO:Importing untrained model
2023-06-17 13:35:30,578:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 13:35:30,578:INFO:Starting cross validation
2023-06-17 13:35:30,579:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:35:30,929:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:30,940:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:30,960:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:30,979:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:30,982:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:31,012:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:31,014:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:31,022:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:31,048:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:31,075:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:35:31,129:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,141:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,145:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,156:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,171:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,177:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,179:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,179:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,183:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,185:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,187:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,198:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,202:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,208:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,212:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,216:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,216:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,217:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,217:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,222:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,223:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,239:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,239:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,245:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,248:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,263:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,264:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:31,281:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:32,347:INFO:Calculating mean and std
2023-06-17 13:35:32,348:INFO:Creating metrics dataframe
2023-06-17 13:35:32,554:INFO:Uploading results into container
2023-06-17 13:35:32,555:INFO:Uploading model into container now
2023-06-17 13:35:32,555:INFO:_master_model_container: 8
2023-06-17 13:35:32,555:INFO:_display_container: 2
2023-06-17 13:35:32,555:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-17 13:35:32,555:INFO:create_model() successfully completed......................................
2023-06-17 13:35:32,679:INFO:SubProcess create_model() end ==================================
2023-06-17 13:35:32,679:INFO:Creating metrics dataframe
2023-06-17 13:35:32,682:INFO:Initializing Ada Boost Classifier
2023-06-17 13:35:32,682:INFO:Total runtime is 0.744078803062439 minutes
2023-06-17 13:35:32,682:INFO:SubProcess create_model() called ==================================
2023-06-17 13:35:32,682:INFO:Initializing create_model()
2023-06-17 13:35:32,682:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:35:32,682:INFO:Checking exceptions
2023-06-17 13:35:32,682:INFO:Importing libraries
2023-06-17 13:35:32,682:INFO:Copying training dataset
2023-06-17 13:35:32,697:INFO:Defining folds
2023-06-17 13:35:32,697:INFO:Declaring metric variables
2023-06-17 13:35:32,697:INFO:Importing untrained model
2023-06-17 13:35:32,698:INFO:Ada Boost Classifier Imported successfully
2023-06-17 13:35:32,698:INFO:Starting cross validation
2023-06-17 13:35:32,699:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:35:35,815:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,851:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,851:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,859:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:35,861:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,871:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,872:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,875:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,880:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,882:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,882:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,886:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,888:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,902:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,902:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,909:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,914:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:35,917:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,919:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,923:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,925:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,925:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,929:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:35,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,938:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,939:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:35,943:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,957:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,966:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,966:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,981:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:35,984:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:35,994:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:35,995:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:37,044:INFO:Calculating mean and std
2023-06-17 13:35:37,044:INFO:Creating metrics dataframe
2023-06-17 13:35:37,251:INFO:Uploading results into container
2023-06-17 13:35:37,251:INFO:Uploading model into container now
2023-06-17 13:35:37,252:INFO:_master_model_container: 9
2023-06-17 13:35:37,252:INFO:_display_container: 2
2023-06-17 13:35:37,252:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2889)
2023-06-17 13:35:37,252:INFO:create_model() successfully completed......................................
2023-06-17 13:35:37,374:INFO:SubProcess create_model() end ==================================
2023-06-17 13:35:37,374:INFO:Creating metrics dataframe
2023-06-17 13:35:37,378:INFO:Initializing Gradient Boosting Classifier
2023-06-17 13:35:37,379:INFO:Total runtime is 0.8223622242609661 minutes
2023-06-17 13:35:37,379:INFO:SubProcess create_model() called ==================================
2023-06-17 13:35:37,379:INFO:Initializing create_model()
2023-06-17 13:35:37,379:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:35:37,379:INFO:Checking exceptions
2023-06-17 13:35:37,379:INFO:Importing libraries
2023-06-17 13:35:37,379:INFO:Copying training dataset
2023-06-17 13:35:37,393:INFO:Defining folds
2023-06-17 13:35:37,393:INFO:Declaring metric variables
2023-06-17 13:35:37,394:INFO:Importing untrained model
2023-06-17 13:35:37,394:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 13:35:37,394:INFO:Starting cross validation
2023-06-17 13:35:37,395:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:35:58,925:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:58,953:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:58,966:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:58,979:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,072:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,092:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:59,102:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,108:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,149:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:59,168:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,184:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,211:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,272:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,283:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,302:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,314:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,345:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,382:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,402:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,411:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,441:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,447:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,468:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,471:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,486:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:59,486:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,496:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,509:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:35:59,523:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:35:59,534:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:00,343:INFO:Calculating mean and std
2023-06-17 13:36:00,343:INFO:Creating metrics dataframe
2023-06-17 13:36:00,565:INFO:Uploading results into container
2023-06-17 13:36:00,566:INFO:Uploading model into container now
2023-06-17 13:36:00,566:INFO:_master_model_container: 10
2023-06-17 13:36:00,566:INFO:_display_container: 2
2023-06-17 13:36:00,567:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2889, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 13:36:00,567:INFO:create_model() successfully completed......................................
2023-06-17 13:36:00,685:INFO:SubProcess create_model() end ==================================
2023-06-17 13:36:00,685:INFO:Creating metrics dataframe
2023-06-17 13:36:00,688:INFO:Initializing Linear Discriminant Analysis
2023-06-17 13:36:00,688:INFO:Total runtime is 1.2108468850453695 minutes
2023-06-17 13:36:00,688:INFO:SubProcess create_model() called ==================================
2023-06-17 13:36:00,688:INFO:Initializing create_model()
2023-06-17 13:36:00,688:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:36:00,688:INFO:Checking exceptions
2023-06-17 13:36:00,688:INFO:Importing libraries
2023-06-17 13:36:00,688:INFO:Copying training dataset
2023-06-17 13:36:00,701:INFO:Defining folds
2023-06-17 13:36:00,701:INFO:Declaring metric variables
2023-06-17 13:36:00,701:INFO:Importing untrained model
2023-06-17 13:36:00,701:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 13:36:00,701:INFO:Starting cross validation
2023-06-17 13:36:00,702:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:36:01,276:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,283:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,294:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,298:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,299:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,318:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,322:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,337:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,351:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,360:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,373:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,381:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,382:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,391:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,398:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,403:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,409:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,410:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,413:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,415:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:01,422:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:01,434:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:02,583:INFO:Calculating mean and std
2023-06-17 13:36:02,584:INFO:Creating metrics dataframe
2023-06-17 13:36:02,801:INFO:Uploading results into container
2023-06-17 13:36:02,801:INFO:Uploading model into container now
2023-06-17 13:36:02,802:INFO:_master_model_container: 11
2023-06-17 13:36:02,802:INFO:_display_container: 2
2023-06-17 13:36:02,802:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 13:36:02,802:INFO:create_model() successfully completed......................................
2023-06-17 13:36:02,922:INFO:SubProcess create_model() end ==================================
2023-06-17 13:36:02,922:INFO:Creating metrics dataframe
2023-06-17 13:36:02,925:INFO:Initializing Extra Trees Classifier
2023-06-17 13:36:02,925:INFO:Total runtime is 1.2481302539507548 minutes
2023-06-17 13:36:02,925:INFO:SubProcess create_model() called ==================================
2023-06-17 13:36:02,926:INFO:Initializing create_model()
2023-06-17 13:36:02,926:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:36:02,926:INFO:Checking exceptions
2023-06-17 13:36:02,926:INFO:Importing libraries
2023-06-17 13:36:02,926:INFO:Copying training dataset
2023-06-17 13:36:02,939:INFO:Defining folds
2023-06-17 13:36:02,939:INFO:Declaring metric variables
2023-06-17 13:36:02,939:INFO:Importing untrained model
2023-06-17 13:36:02,940:INFO:Extra Trees Classifier Imported successfully
2023-06-17 13:36:02,940:INFO:Starting cross validation
2023-06-17 13:36:02,940:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:36:09,816:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:09,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:09,882:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:09,901:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:10,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.19s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 13:36:10,809:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:10,846:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:10,867:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:10,884:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,081:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,116:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,169:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,545:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,584:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,603:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:11,629:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,703:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:11,778:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:12,105:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:12,146:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:12,159:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:12,172:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:12,690:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:12,713:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:12,727:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:12,738:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,098:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,132:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,151:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:13,166:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,183:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,199:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,206:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,225:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:13,229:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,235:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,250:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:13,372:INFO:Calculating mean and std
2023-06-17 13:36:13,373:INFO:Creating metrics dataframe
2023-06-17 13:36:13,516:INFO:Uploading results into container
2023-06-17 13:36:13,516:INFO:Uploading model into container now
2023-06-17 13:36:13,517:INFO:_master_model_container: 12
2023-06-17 13:36:13,517:INFO:_display_container: 2
2023-06-17 13:36:13,517:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2889, verbose=0, warm_start=False)
2023-06-17 13:36:13,517:INFO:create_model() successfully completed......................................
2023-06-17 13:36:13,650:INFO:SubProcess create_model() end ==================================
2023-06-17 13:36:13,650:INFO:Creating metrics dataframe
2023-06-17 13:36:13,653:INFO:Initializing Extreme Gradient Boosting
2023-06-17 13:36:13,653:INFO:Total runtime is 1.4269302169481914 minutes
2023-06-17 13:36:13,654:INFO:SubProcess create_model() called ==================================
2023-06-17 13:36:13,654:INFO:Initializing create_model()
2023-06-17 13:36:13,654:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:36:13,654:INFO:Checking exceptions
2023-06-17 13:36:13,654:INFO:Importing libraries
2023-06-17 13:36:13,654:INFO:Copying training dataset
2023-06-17 13:36:13,670:INFO:Defining folds
2023-06-17 13:36:13,670:INFO:Declaring metric variables
2023-06-17 13:36:13,670:INFO:Importing untrained model
2023-06-17 13:36:13,670:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 13:36:13,671:INFO:Starting cross validation
2023-06-17 13:36:13,671:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:36:26,648:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,688:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,697:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:26,703:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,715:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,721:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,737:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:26,746:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,752:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,766:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:26,772:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,788:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:26,803:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,867:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,875:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,887:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:26,897:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,899:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,915:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:26,927:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,951:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,973:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:26,986:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:26,996:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:27,112:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:27,123:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:27,133:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:27,144:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:27,145:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:27,155:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:27,155:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:27,164:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:27,519:INFO:Calculating mean and std
2023-06-17 13:36:27,520:INFO:Creating metrics dataframe
2023-06-17 13:36:27,664:INFO:Uploading results into container
2023-06-17 13:36:27,664:INFO:Uploading model into container now
2023-06-17 13:36:27,665:INFO:_master_model_container: 13
2023-06-17 13:36:27,665:INFO:_display_container: 2
2023-06-17 13:36:27,665:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 13:36:27,665:INFO:create_model() successfully completed......................................
2023-06-17 13:36:27,784:INFO:SubProcess create_model() end ==================================
2023-06-17 13:36:27,784:INFO:Creating metrics dataframe
2023-06-17 13:36:27,787:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 13:36:27,787:INFO:Total runtime is 1.6624968846638999 minutes
2023-06-17 13:36:27,787:INFO:SubProcess create_model() called ==================================
2023-06-17 13:36:27,788:INFO:Initializing create_model()
2023-06-17 13:36:27,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:36:27,788:INFO:Checking exceptions
2023-06-17 13:36:27,788:INFO:Importing libraries
2023-06-17 13:36:27,788:INFO:Copying training dataset
2023-06-17 13:36:27,801:INFO:Defining folds
2023-06-17 13:36:27,801:INFO:Declaring metric variables
2023-06-17 13:36:27,801:INFO:Importing untrained model
2023-06-17 13:36:27,801:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 13:36:27,801:INFO:Starting cross validation
2023-06-17 13:36:27,802:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:36:29,658:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,677:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,693:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,700:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,719:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,727:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,729:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,732:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,742:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,761:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,764:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,766:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,777:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,787:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,790:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,790:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,818:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,819:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,827:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,861:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,862:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,872:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,876:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,892:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,905:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,914:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:29,928:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:30,534:INFO:Calculating mean and std
2023-06-17 13:36:30,535:INFO:Creating metrics dataframe
2023-06-17 13:36:30,677:INFO:Uploading results into container
2023-06-17 13:36:30,677:INFO:Uploading model into container now
2023-06-17 13:36:30,678:INFO:_master_model_container: 14
2023-06-17 13:36:30,678:INFO:_display_container: 2
2023-06-17 13:36:30,678:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2889, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 13:36:30,678:INFO:create_model() successfully completed......................................
2023-06-17 13:36:30,796:INFO:SubProcess create_model() end ==================================
2023-06-17 13:36:30,796:INFO:Creating metrics dataframe
2023-06-17 13:36:30,799:INFO:Initializing Dummy Classifier
2023-06-17 13:36:30,799:INFO:Total runtime is 1.7126968860626222 minutes
2023-06-17 13:36:30,799:INFO:SubProcess create_model() called ==================================
2023-06-17 13:36:30,799:INFO:Initializing create_model()
2023-06-17 13:36:30,799:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D019B490>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:36:30,799:INFO:Checking exceptions
2023-06-17 13:36:30,799:INFO:Importing libraries
2023-06-17 13:36:30,799:INFO:Copying training dataset
2023-06-17 13:36:30,811:INFO:Defining folds
2023-06-17 13:36:30,812:INFO:Declaring metric variables
2023-06-17 13:36:30,812:INFO:Importing untrained model
2023-06-17 13:36:30,812:INFO:Dummy Classifier Imported successfully
2023-06-17 13:36:30,812:INFO:Starting cross validation
2023-06-17 13:36:30,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:36:31,232:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,241:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,245:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,249:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,253:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,258:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,269:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,269:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,274:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,274:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,280:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,281:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,282:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,286:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,286:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,287:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,290:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,290:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,291:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,292:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,294:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,301:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,305:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,305:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,306:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,306:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,311:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,311:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,324:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,327:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,334:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:36:31,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:31,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Other') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 13:36:32,100:INFO:Calculating mean and std
2023-06-17 13:36:32,100:INFO:Creating metrics dataframe
2023-06-17 13:36:32,245:INFO:Uploading results into container
2023-06-17 13:36:32,246:INFO:Uploading model into container now
2023-06-17 13:36:32,246:INFO:_master_model_container: 15
2023-06-17 13:36:32,246:INFO:_display_container: 2
2023-06-17 13:36:32,247:INFO:DummyClassifier(constant=None, random_state=2889, strategy='prior')
2023-06-17 13:36:32,247:INFO:create_model() successfully completed......................................
2023-06-17 13:36:32,367:INFO:SubProcess create_model() end ==================================
2023-06-17 13:36:32,367:INFO:Creating metrics dataframe
2023-06-17 13:36:32,371:INFO:Initializing create_model()
2023-06-17 13:36:32,372:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D17C9130>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2889, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:36:32,372:INFO:Checking exceptions
2023-06-17 13:36:32,372:INFO:Importing libraries
2023-06-17 13:36:32,372:INFO:Copying training dataset
2023-06-17 13:36:32,386:INFO:Defining folds
2023-06-17 13:36:32,386:INFO:Declaring metric variables
2023-06-17 13:36:32,386:INFO:Importing untrained model
2023-06-17 13:36:32,386:INFO:Declaring custom model
2023-06-17 13:36:32,387:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 13:36:32,387:INFO:Cross validation set to False
2023-06-17 13:36:32,387:INFO:Fitting Model
2023-06-17 13:36:47,257:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2889, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 13:36:47,257:INFO:create_model() successfully completed......................................
2023-06-17 13:36:47,397:INFO:_master_model_container: 15
2023-06-17 13:36:47,397:INFO:_display_container: 2
2023-06-17 13:36:47,398:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2889, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 13:36:47,398:INFO:compare_models() successfully completed......................................
2023-06-17 13:36:47,404:INFO:Initializing save_model()
2023-06-17 13:36:47,404:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2889, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level',
                                             'diabetes'],
                                    transform...
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None, include=['smoking_history'],
                                    transformer=OneHotEncoder(cols=['smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 13:36:47,404:INFO:Adding model into prep_pipe
2023-06-17 13:36:47,418:INFO:best_model.pkl saved in current working directory
2023-06-17 13:36:47,424:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level',
                                             'diabetes'],
                                    transform...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=2889, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-06-17 13:36:47,424:INFO:save_model() successfully completed......................................
2023-06-17 13:37:02,830:INFO:PyCaret ClassificationExperiment
2023-06-17 13:37:02,831:INFO:Logging name: clf-default-name
2023-06-17 13:37:02,831:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 13:37:02,831:INFO:version 3.0.2
2023-06-17 13:37:02,831:INFO:Initializing setup()
2023-06-17 13:37:02,831:INFO:self.USI: 9058
2023-06-17 13:37:02,831:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 13:37:02,831:INFO:Checking environment
2023-06-17 13:37:02,831:INFO:python_version: 3.9.5
2023-06-17 13:37:02,831:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 13:37:02,831:INFO:machine: AMD64
2023-06-17 13:37:02,831:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 13:37:02,834:INFO:Memory: svmem(total=17102532608, available=8218869760, percent=51.9, used=8883662848, free=8218869760)
2023-06-17 13:37:02,834:INFO:Physical Core: 8
2023-06-17 13:37:02,834:INFO:Logical Core: 16
2023-06-17 13:37:02,834:INFO:Checking libraries
2023-06-17 13:37:02,834:INFO:System:
2023-06-17 13:37:02,835:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 13:37:02,835:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 13:37:02,835:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 13:37:02,835:INFO:PyCaret required dependencies:
2023-06-17 13:37:02,835:INFO:                 pip: 23.1.2
2023-06-17 13:37:02,835:INFO:          setuptools: 56.0.0
2023-06-17 13:37:02,835:INFO:             pycaret: 3.0.2
2023-06-17 13:37:02,835:INFO:             IPython: 8.14.0
2023-06-17 13:37:02,835:INFO:          ipywidgets: 8.0.6
2023-06-17 13:37:02,835:INFO:                tqdm: 4.65.0
2023-06-17 13:37:02,835:INFO:               numpy: 1.22.3
2023-06-17 13:37:02,835:INFO:              pandas: 1.4.2
2023-06-17 13:37:02,835:INFO:              jinja2: 3.1.2
2023-06-17 13:37:02,835:INFO:               scipy: 1.8.0
2023-06-17 13:37:02,835:INFO:              joblib: 1.2.0
2023-06-17 13:37:02,835:INFO:             sklearn: 1.2.2
2023-06-17 13:37:02,835:INFO:                pyod: 1.0.9
2023-06-17 13:37:02,835:INFO:            imblearn: 0.10.1
2023-06-17 13:37:02,835:INFO:   category_encoders: 2.6.1
2023-06-17 13:37:02,835:INFO:            lightgbm: 3.3.5
2023-06-17 13:37:02,835:INFO:               numba: 0.57.0
2023-06-17 13:37:02,835:INFO:            requests: 2.27.1
2023-06-17 13:37:02,835:INFO:          matplotlib: 3.5.1
2023-06-17 13:37:02,835:INFO:          scikitplot: 0.3.7
2023-06-17 13:37:02,835:INFO:         yellowbrick: 1.5
2023-06-17 13:37:02,835:INFO:              plotly: 5.10.0
2023-06-17 13:37:02,835:INFO:             kaleido: 0.2.1
2023-06-17 13:37:02,835:INFO:         statsmodels: 0.14.0
2023-06-17 13:37:02,835:INFO:              sktime: 0.17.0
2023-06-17 13:37:02,836:INFO:               tbats: 1.1.3
2023-06-17 13:37:02,836:INFO:            pmdarima: 2.0.3
2023-06-17 13:37:02,836:INFO:              psutil: 5.9.5
2023-06-17 13:37:02,836:INFO:PyCaret optional dependencies:
2023-06-17 13:37:02,836:INFO:                shap: Not installed
2023-06-17 13:37:02,836:INFO:           interpret: Not installed
2023-06-17 13:37:02,836:INFO:                umap: Not installed
2023-06-17 13:37:02,836:INFO:    pandas_profiling: 4.2.0
2023-06-17 13:37:02,836:INFO:  explainerdashboard: Not installed
2023-06-17 13:37:02,836:INFO:             autoviz: Not installed
2023-06-17 13:37:02,836:INFO:           fairlearn: Not installed
2023-06-17 13:37:02,836:INFO:             xgboost: 1.7.4
2023-06-17 13:37:02,836:INFO:            catboost: Not installed
2023-06-17 13:37:02,836:INFO:              kmodes: Not installed
2023-06-17 13:37:02,836:INFO:             mlxtend: Not installed
2023-06-17 13:37:02,836:INFO:       statsforecast: Not installed
2023-06-17 13:37:02,836:INFO:        tune_sklearn: Not installed
2023-06-17 13:37:02,836:INFO:                 ray: Not installed
2023-06-17 13:37:02,836:INFO:            hyperopt: Not installed
2023-06-17 13:37:02,836:INFO:              optuna: Not installed
2023-06-17 13:37:02,836:INFO:               skopt: Not installed
2023-06-17 13:37:02,836:INFO:              mlflow: Not installed
2023-06-17 13:37:02,836:INFO:              gradio: Not installed
2023-06-17 13:37:02,836:INFO:             fastapi: Not installed
2023-06-17 13:37:02,836:INFO:             uvicorn: Not installed
2023-06-17 13:37:02,836:INFO:              m2cgen: Not installed
2023-06-17 13:37:02,836:INFO:           evidently: Not installed
2023-06-17 13:37:02,836:INFO:               fugue: Not installed
2023-06-17 13:37:02,836:INFO:           streamlit: 1.23.1
2023-06-17 13:37:02,836:INFO:             prophet: Not installed
2023-06-17 13:37:02,836:INFO:None
2023-06-17 13:37:02,836:INFO:Set up data.
2023-06-17 13:37:02,856:INFO:Set up train/test split.
2023-06-17 13:37:02,885:INFO:Set up index.
2023-06-17 13:37:02,887:INFO:Set up folding strategy.
2023-06-17 13:37:02,887:INFO:Assigning column types.
2023-06-17 13:37:02,893:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 13:37:02,937:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:37:02,938:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 13:37:02,965:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:37:02,968:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:37:03,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:37:03,012:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 13:37:03,040:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:37:03,042:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:37:03,043:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 13:37:03,087:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 13:37:03,114:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:37:03,116:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:37:03,161:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 13:37:03,188:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:37:03,190:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:37:03,190:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 13:37:03,261:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:37:03,264:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:37:03,334:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:37:03,337:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:37:03,338:INFO:Preparing preprocessing pipeline...
2023-06-17 13:37:03,339:INFO:Set up simple imputation.
2023-06-17 13:37:03,345:INFO:Set up encoding of categorical features.
2023-06-17 13:37:03,479:INFO:Finished creating preprocessing pipeline.
2023-06-17 13:37:03,483:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'smoking_history'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-06-17 13:37:03,483:INFO:Creating final display dataframe.
2023-06-17 13:37:03,834:INFO:Setup _display_container:                     Description             Value
0                    Session id              8580
1                        Target          diabetes
2                   Target type            Binary
3           Original data shape       (100000, 9)
4        Transformed data shape      (100000, 16)
5   Transformed train set shape       (70000, 16)
6    Transformed test set shape       (30000, 16)
7              Numeric features                 6
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              9058
2023-06-17 13:37:03,909:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:37:03,911:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:37:03,981:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:37:03,983:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:37:03,984:INFO:setup() successfully completed in 1.23s...............
2023-06-17 13:37:03,986:INFO:Initializing compare_models()
2023-06-17 13:37:03,986:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 13:37:03,986:INFO:Checking exceptions
2023-06-17 13:37:03,994:INFO:Preparing display monitor
2023-06-17 13:37:03,995:INFO:Initializing Logistic Regression
2023-06-17 13:37:03,995:INFO:Total runtime is 0.0 minutes
2023-06-17 13:37:03,996:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:03,996:INFO:Initializing create_model()
2023-06-17 13:37:03,996:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:03,996:INFO:Checking exceptions
2023-06-17 13:37:03,996:INFO:Importing libraries
2023-06-17 13:37:03,996:INFO:Copying training dataset
2023-06-17 13:37:04,010:INFO:Defining folds
2023-06-17 13:37:04,010:INFO:Declaring metric variables
2023-06-17 13:37:04,010:INFO:Importing untrained model
2023-06-17 13:37:04,010:INFO:Logistic Regression Imported successfully
2023-06-17 13:37:04,010:INFO:Starting cross validation
2023-06-17 13:37:04,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:19,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:19,886:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:19,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:20,008:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:20,098:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:20,113:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:20,123:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:20,137:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:20,196:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:20,242:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 13:37:20,886:INFO:Calculating mean and std
2023-06-17 13:37:20,886:INFO:Creating metrics dataframe
2023-06-17 13:37:21,044:INFO:Uploading results into container
2023-06-17 13:37:21,045:INFO:Uploading model into container now
2023-06-17 13:37:21,045:INFO:_master_model_container: 1
2023-06-17 13:37:21,045:INFO:_display_container: 2
2023-06-17 13:37:21,046:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=8580, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 13:37:21,046:INFO:create_model() successfully completed......................................
2023-06-17 13:37:21,168:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:21,168:INFO:Creating metrics dataframe
2023-06-17 13:37:21,170:INFO:Initializing K Neighbors Classifier
2023-06-17 13:37:21,170:INFO:Total runtime is 0.2862415353457133 minutes
2023-06-17 13:37:21,170:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:21,171:INFO:Initializing create_model()
2023-06-17 13:37:21,171:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:21,171:INFO:Checking exceptions
2023-06-17 13:37:21,171:INFO:Importing libraries
2023-06-17 13:37:21,171:INFO:Copying training dataset
2023-06-17 13:37:21,184:INFO:Defining folds
2023-06-17 13:37:21,184:INFO:Declaring metric variables
2023-06-17 13:37:21,184:INFO:Importing untrained model
2023-06-17 13:37:21,184:INFO:K Neighbors Classifier Imported successfully
2023-06-17 13:37:21,184:INFO:Starting cross validation
2023-06-17 13:37:21,185:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:23,599:INFO:Calculating mean and std
2023-06-17 13:37:23,600:INFO:Creating metrics dataframe
2023-06-17 13:37:23,750:INFO:Uploading results into container
2023-06-17 13:37:23,750:INFO:Uploading model into container now
2023-06-17 13:37:23,751:INFO:_master_model_container: 2
2023-06-17 13:37:23,751:INFO:_display_container: 2
2023-06-17 13:37:23,751:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 13:37:23,751:INFO:create_model() successfully completed......................................
2023-06-17 13:37:23,870:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:23,870:INFO:Creating metrics dataframe
2023-06-17 13:37:23,873:INFO:Initializing Naive Bayes
2023-06-17 13:37:23,873:INFO:Total runtime is 0.33129154443740844 minutes
2023-06-17 13:37:23,874:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:23,874:INFO:Initializing create_model()
2023-06-17 13:37:23,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:23,874:INFO:Checking exceptions
2023-06-17 13:37:23,874:INFO:Importing libraries
2023-06-17 13:37:23,874:INFO:Copying training dataset
2023-06-17 13:37:23,887:INFO:Defining folds
2023-06-17 13:37:23,887:INFO:Declaring metric variables
2023-06-17 13:37:23,888:INFO:Importing untrained model
2023-06-17 13:37:23,888:INFO:Naive Bayes Imported successfully
2023-06-17 13:37:23,888:INFO:Starting cross validation
2023-06-17 13:37:23,889:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:25,127:INFO:Calculating mean and std
2023-06-17 13:37:25,128:INFO:Creating metrics dataframe
2023-06-17 13:37:25,284:INFO:Uploading results into container
2023-06-17 13:37:25,284:INFO:Uploading model into container now
2023-06-17 13:37:25,284:INFO:_master_model_container: 3
2023-06-17 13:37:25,285:INFO:_display_container: 2
2023-06-17 13:37:25,285:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 13:37:25,285:INFO:create_model() successfully completed......................................
2023-06-17 13:37:25,404:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:25,404:INFO:Creating metrics dataframe
2023-06-17 13:37:25,407:INFO:Initializing Decision Tree Classifier
2023-06-17 13:37:25,407:INFO:Total runtime is 0.35685820182164507 minutes
2023-06-17 13:37:25,408:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:25,408:INFO:Initializing create_model()
2023-06-17 13:37:25,408:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:25,408:INFO:Checking exceptions
2023-06-17 13:37:25,408:INFO:Importing libraries
2023-06-17 13:37:25,408:INFO:Copying training dataset
2023-06-17 13:37:25,423:INFO:Defining folds
2023-06-17 13:37:25,423:INFO:Declaring metric variables
2023-06-17 13:37:25,423:INFO:Importing untrained model
2023-06-17 13:37:25,424:INFO:Decision Tree Classifier Imported successfully
2023-06-17 13:37:25,424:INFO:Starting cross validation
2023-06-17 13:37:25,425:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:26,843:INFO:Calculating mean and std
2023-06-17 13:37:26,844:INFO:Creating metrics dataframe
2023-06-17 13:37:27,002:INFO:Uploading results into container
2023-06-17 13:37:27,002:INFO:Uploading model into container now
2023-06-17 13:37:27,003:INFO:_master_model_container: 4
2023-06-17 13:37:27,003:INFO:_display_container: 2
2023-06-17 13:37:27,003:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=8580, splitter='best')
2023-06-17 13:37:27,003:INFO:create_model() successfully completed......................................
2023-06-17 13:37:27,131:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:27,131:INFO:Creating metrics dataframe
2023-06-17 13:37:27,135:INFO:Initializing SVM - Linear Kernel
2023-06-17 13:37:27,135:INFO:Total runtime is 0.3856732527414957 minutes
2023-06-17 13:37:27,135:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:27,135:INFO:Initializing create_model()
2023-06-17 13:37:27,135:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:27,135:INFO:Checking exceptions
2023-06-17 13:37:27,136:INFO:Importing libraries
2023-06-17 13:37:27,136:INFO:Copying training dataset
2023-06-17 13:37:27,151:INFO:Defining folds
2023-06-17 13:37:27,152:INFO:Declaring metric variables
2023-06-17 13:37:27,152:INFO:Importing untrained model
2023-06-17 13:37:27,152:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 13:37:27,152:INFO:Starting cross validation
2023-06-17 13:37:27,153:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:28,653:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:28,767:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:28,768:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:28,824:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:28,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:28,986:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:28,987:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:29,106:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:29,137:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:29,151:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 13:37:29,633:INFO:Calculating mean and std
2023-06-17 13:37:29,634:INFO:Creating metrics dataframe
2023-06-17 13:37:29,801:INFO:Uploading results into container
2023-06-17 13:37:29,801:INFO:Uploading model into container now
2023-06-17 13:37:29,801:INFO:_master_model_container: 5
2023-06-17 13:37:29,802:INFO:_display_container: 2
2023-06-17 13:37:29,802:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=8580, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 13:37:29,802:INFO:create_model() successfully completed......................................
2023-06-17 13:37:29,923:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:29,924:INFO:Creating metrics dataframe
2023-06-17 13:37:29,927:INFO:Initializing Ridge Classifier
2023-06-17 13:37:29,927:INFO:Total runtime is 0.4322065869967142 minutes
2023-06-17 13:37:29,927:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:29,927:INFO:Initializing create_model()
2023-06-17 13:37:29,927:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:29,927:INFO:Checking exceptions
2023-06-17 13:37:29,927:INFO:Importing libraries
2023-06-17 13:37:29,927:INFO:Copying training dataset
2023-06-17 13:37:29,941:INFO:Defining folds
2023-06-17 13:37:29,941:INFO:Declaring metric variables
2023-06-17 13:37:29,941:INFO:Importing untrained model
2023-06-17 13:37:29,942:INFO:Ridge Classifier Imported successfully
2023-06-17 13:37:29,942:INFO:Starting cross validation
2023-06-17 13:37:29,942:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:30,227:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,235:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,244:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,267:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,276:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,284:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,292:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:30,381:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 13:37:31,140:INFO:Calculating mean and std
2023-06-17 13:37:31,141:INFO:Creating metrics dataframe
2023-06-17 13:37:31,305:INFO:Uploading results into container
2023-06-17 13:37:31,306:INFO:Uploading model into container now
2023-06-17 13:37:31,306:INFO:_master_model_container: 6
2023-06-17 13:37:31,306:INFO:_display_container: 2
2023-06-17 13:37:31,306:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=8580, solver='auto',
                tol=0.0001)
2023-06-17 13:37:31,307:INFO:create_model() successfully completed......................................
2023-06-17 13:37:31,426:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:31,426:INFO:Creating metrics dataframe
2023-06-17 13:37:31,429:INFO:Initializing Random Forest Classifier
2023-06-17 13:37:31,430:INFO:Total runtime is 0.45725652376810705 minutes
2023-06-17 13:37:31,430:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:31,430:INFO:Initializing create_model()
2023-06-17 13:37:31,430:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:31,430:INFO:Checking exceptions
2023-06-17 13:37:31,430:INFO:Importing libraries
2023-06-17 13:37:31,430:INFO:Copying training dataset
2023-06-17 13:37:31,445:INFO:Defining folds
2023-06-17 13:37:31,445:INFO:Declaring metric variables
2023-06-17 13:37:31,445:INFO:Importing untrained model
2023-06-17 13:37:31,446:INFO:Random Forest Classifier Imported successfully
2023-06-17 13:37:31,446:INFO:Starting cross validation
2023-06-17 13:37:31,447:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:33,286:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.77s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 13:37:34,670:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.41s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 13:37:34,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.25s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 13:37:34,756:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:310: UserWarning: Persisting input arguments took 0.73s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  X, _ = self._memory_full_transform(self, X, None, with_final=False)

2023-06-17 13:37:36,348:INFO:Calculating mean and std
2023-06-17 13:37:36,349:INFO:Creating metrics dataframe
2023-06-17 13:37:36,511:INFO:Uploading results into container
2023-06-17 13:37:36,512:INFO:Uploading model into container now
2023-06-17 13:37:36,512:INFO:_master_model_container: 7
2023-06-17 13:37:36,513:INFO:_display_container: 2
2023-06-17 13:37:36,513:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=8580, verbose=0, warm_start=False)
2023-06-17 13:37:36,513:INFO:create_model() successfully completed......................................
2023-06-17 13:37:36,631:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:36,632:INFO:Creating metrics dataframe
2023-06-17 13:37:36,635:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 13:37:36,635:INFO:Total runtime is 0.5440065860748291 minutes
2023-06-17 13:37:36,635:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:36,635:INFO:Initializing create_model()
2023-06-17 13:37:36,635:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:36,635:INFO:Checking exceptions
2023-06-17 13:37:36,635:INFO:Importing libraries
2023-06-17 13:37:36,635:INFO:Copying training dataset
2023-06-17 13:37:36,648:INFO:Defining folds
2023-06-17 13:37:36,648:INFO:Declaring metric variables
2023-06-17 13:37:36,648:INFO:Importing untrained model
2023-06-17 13:37:36,648:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 13:37:36,648:INFO:Starting cross validation
2023-06-17 13:37:36,649:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:36,892:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:36,909:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:36,915:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:36,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:36,956:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:36,969:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:37,005:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:37,010:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:37,021:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:37,046:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 13:37:37,987:INFO:Calculating mean and std
2023-06-17 13:37:37,987:INFO:Creating metrics dataframe
2023-06-17 13:37:38,152:INFO:Uploading results into container
2023-06-17 13:37:38,153:INFO:Uploading model into container now
2023-06-17 13:37:38,153:INFO:_master_model_container: 8
2023-06-17 13:37:38,153:INFO:_display_container: 2
2023-06-17 13:37:38,154:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-17 13:37:38,154:INFO:create_model() successfully completed......................................
2023-06-17 13:37:38,275:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:38,275:INFO:Creating metrics dataframe
2023-06-17 13:37:38,278:INFO:Initializing Ada Boost Classifier
2023-06-17 13:37:38,278:INFO:Total runtime is 0.5713899175326029 minutes
2023-06-17 13:37:38,278:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:38,279:INFO:Initializing create_model()
2023-06-17 13:37:38,279:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:38,279:INFO:Checking exceptions
2023-06-17 13:37:38,279:INFO:Importing libraries
2023-06-17 13:37:38,279:INFO:Copying training dataset
2023-06-17 13:37:38,295:INFO:Defining folds
2023-06-17 13:37:38,295:INFO:Declaring metric variables
2023-06-17 13:37:38,295:INFO:Importing untrained model
2023-06-17 13:37:38,295:INFO:Ada Boost Classifier Imported successfully
2023-06-17 13:37:38,295:INFO:Starting cross validation
2023-06-17 13:37:38,296:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:41,872:INFO:Calculating mean and std
2023-06-17 13:37:41,873:INFO:Creating metrics dataframe
2023-06-17 13:37:42,038:INFO:Uploading results into container
2023-06-17 13:37:42,039:INFO:Uploading model into container now
2023-06-17 13:37:42,039:INFO:_master_model_container: 9
2023-06-17 13:37:42,039:INFO:_display_container: 2
2023-06-17 13:37:42,040:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=8580)
2023-06-17 13:37:42,040:INFO:create_model() successfully completed......................................
2023-06-17 13:37:42,159:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:42,159:INFO:Creating metrics dataframe
2023-06-17 13:37:42,162:INFO:Initializing Gradient Boosting Classifier
2023-06-17 13:37:42,162:INFO:Total runtime is 0.636123251914978 minutes
2023-06-17 13:37:42,163:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:42,163:INFO:Initializing create_model()
2023-06-17 13:37:42,163:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:42,163:INFO:Checking exceptions
2023-06-17 13:37:42,163:INFO:Importing libraries
2023-06-17 13:37:42,163:INFO:Copying training dataset
2023-06-17 13:37:42,176:INFO:Defining folds
2023-06-17 13:37:42,176:INFO:Declaring metric variables
2023-06-17 13:37:42,176:INFO:Importing untrained model
2023-06-17 13:37:42,176:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 13:37:42,176:INFO:Starting cross validation
2023-06-17 13:37:42,177:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:49,193:INFO:Calculating mean and std
2023-06-17 13:37:49,193:INFO:Creating metrics dataframe
2023-06-17 13:37:49,367:INFO:Uploading results into container
2023-06-17 13:37:49,368:INFO:Uploading model into container now
2023-06-17 13:37:49,368:INFO:_master_model_container: 10
2023-06-17 13:37:49,368:INFO:_display_container: 2
2023-06-17 13:37:49,369:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8580, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 13:37:49,369:INFO:create_model() successfully completed......................................
2023-06-17 13:37:49,488:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:49,488:INFO:Creating metrics dataframe
2023-06-17 13:37:49,492:INFO:Initializing Linear Discriminant Analysis
2023-06-17 13:37:49,492:INFO:Total runtime is 0.7582898736000061 minutes
2023-06-17 13:37:49,492:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:49,492:INFO:Initializing create_model()
2023-06-17 13:37:49,493:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:49,493:INFO:Checking exceptions
2023-06-17 13:37:49,493:INFO:Importing libraries
2023-06-17 13:37:49,493:INFO:Copying training dataset
2023-06-17 13:37:49,507:INFO:Defining folds
2023-06-17 13:37:49,507:INFO:Declaring metric variables
2023-06-17 13:37:49,507:INFO:Importing untrained model
2023-06-17 13:37:49,507:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 13:37:49,507:INFO:Starting cross validation
2023-06-17 13:37:49,508:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:51,020:INFO:Calculating mean and std
2023-06-17 13:37:51,021:INFO:Creating metrics dataframe
2023-06-17 13:37:51,199:INFO:Uploading results into container
2023-06-17 13:37:51,200:INFO:Uploading model into container now
2023-06-17 13:37:51,200:INFO:_master_model_container: 11
2023-06-17 13:37:51,200:INFO:_display_container: 2
2023-06-17 13:37:51,200:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 13:37:51,200:INFO:create_model() successfully completed......................................
2023-06-17 13:37:51,320:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:51,321:INFO:Creating metrics dataframe
2023-06-17 13:37:51,324:INFO:Initializing Extra Trees Classifier
2023-06-17 13:37:51,324:INFO:Total runtime is 0.7888232509295146 minutes
2023-06-17 13:37:51,324:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:51,324:INFO:Initializing create_model()
2023-06-17 13:37:51,324:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:51,324:INFO:Checking exceptions
2023-06-17 13:37:51,324:INFO:Importing libraries
2023-06-17 13:37:51,324:INFO:Copying training dataset
2023-06-17 13:37:51,338:INFO:Defining folds
2023-06-17 13:37:51,338:INFO:Declaring metric variables
2023-06-17 13:37:51,338:INFO:Importing untrained model
2023-06-17 13:37:51,339:INFO:Extra Trees Classifier Imported successfully
2023-06-17 13:37:51,339:INFO:Starting cross validation
2023-06-17 13:37:51,339:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:37:53,454:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.16s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 13:37:53,526:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.07s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 13:37:55,870:INFO:Calculating mean and std
2023-06-17 13:37:55,871:INFO:Creating metrics dataframe
2023-06-17 13:37:56,062:INFO:Uploading results into container
2023-06-17 13:37:56,063:INFO:Uploading model into container now
2023-06-17 13:37:56,063:INFO:_master_model_container: 12
2023-06-17 13:37:56,063:INFO:_display_container: 2
2023-06-17 13:37:56,064:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=8580, verbose=0, warm_start=False)
2023-06-17 13:37:56,064:INFO:create_model() successfully completed......................................
2023-06-17 13:37:56,185:INFO:SubProcess create_model() end ==================================
2023-06-17 13:37:56,185:INFO:Creating metrics dataframe
2023-06-17 13:37:56,188:INFO:Initializing Extreme Gradient Boosting
2023-06-17 13:37:56,188:INFO:Total runtime is 0.8698899229367574 minutes
2023-06-17 13:37:56,188:INFO:SubProcess create_model() called ==================================
2023-06-17 13:37:56,188:INFO:Initializing create_model()
2023-06-17 13:37:56,188:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:37:56,188:INFO:Checking exceptions
2023-06-17 13:37:56,188:INFO:Importing libraries
2023-06-17 13:37:56,188:INFO:Copying training dataset
2023-06-17 13:37:56,202:INFO:Defining folds
2023-06-17 13:37:56,202:INFO:Declaring metric variables
2023-06-17 13:37:56,202:INFO:Importing untrained model
2023-06-17 13:37:56,203:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 13:37:56,203:INFO:Starting cross validation
2023-06-17 13:37:56,204:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:02,625:INFO:Calculating mean and std
2023-06-17 13:38:02,625:INFO:Creating metrics dataframe
2023-06-17 13:38:02,813:INFO:Uploading results into container
2023-06-17 13:38:02,814:INFO:Uploading model into container now
2023-06-17 13:38:02,814:INFO:_master_model_container: 13
2023-06-17 13:38:02,815:INFO:_display_container: 2
2023-06-17 13:38:02,816:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 13:38:02,816:INFO:create_model() successfully completed......................................
2023-06-17 13:38:02,936:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:02,936:INFO:Creating metrics dataframe
2023-06-17 13:38:02,939:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 13:38:02,939:INFO:Total runtime is 0.9823985695838928 minutes
2023-06-17 13:38:02,940:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:02,940:INFO:Initializing create_model()
2023-06-17 13:38:02,940:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:02,940:INFO:Checking exceptions
2023-06-17 13:38:02,940:INFO:Importing libraries
2023-06-17 13:38:02,940:INFO:Copying training dataset
2023-06-17 13:38:02,953:INFO:Defining folds
2023-06-17 13:38:02,953:INFO:Declaring metric variables
2023-06-17 13:38:02,953:INFO:Importing untrained model
2023-06-17 13:38:02,954:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 13:38:02,954:INFO:Starting cross validation
2023-06-17 13:38:02,955:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:04,875:INFO:Calculating mean and std
2023-06-17 13:38:04,875:INFO:Creating metrics dataframe
2023-06-17 13:38:05,071:INFO:Uploading results into container
2023-06-17 13:38:05,072:INFO:Uploading model into container now
2023-06-17 13:38:05,072:INFO:_master_model_container: 14
2023-06-17 13:38:05,072:INFO:_display_container: 2
2023-06-17 13:38:05,073:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=8580, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 13:38:05,073:INFO:create_model() successfully completed......................................
2023-06-17 13:38:05,191:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:05,191:INFO:Creating metrics dataframe
2023-06-17 13:38:05,194:INFO:Initializing Dummy Classifier
2023-06-17 13:38:05,194:INFO:Total runtime is 1.0199819008509319 minutes
2023-06-17 13:38:05,194:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:05,194:INFO:Initializing create_model()
2023-06-17 13:38:05,194:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D72D2130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:05,194:INFO:Checking exceptions
2023-06-17 13:38:05,194:INFO:Importing libraries
2023-06-17 13:38:05,194:INFO:Copying training dataset
2023-06-17 13:38:05,206:INFO:Defining folds
2023-06-17 13:38:05,206:INFO:Declaring metric variables
2023-06-17 13:38:05,207:INFO:Importing untrained model
2023-06-17 13:38:05,207:INFO:Dummy Classifier Imported successfully
2023-06-17 13:38:05,207:INFO:Starting cross validation
2023-06-17 13:38:05,208:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:05,488:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,517:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,518:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,522:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,535:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,539:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,569:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,571:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,580:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:05,604:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 13:38:06,528:INFO:Calculating mean and std
2023-06-17 13:38:06,529:INFO:Creating metrics dataframe
2023-06-17 13:38:06,718:INFO:Uploading results into container
2023-06-17 13:38:06,719:INFO:Uploading model into container now
2023-06-17 13:38:06,719:INFO:_master_model_container: 15
2023-06-17 13:38:06,719:INFO:_display_container: 2
2023-06-17 13:38:06,719:INFO:DummyClassifier(constant=None, random_state=8580, strategy='prior')
2023-06-17 13:38:06,719:INFO:create_model() successfully completed......................................
2023-06-17 13:38:06,838:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:06,838:INFO:Creating metrics dataframe
2023-06-17 13:38:06,842:INFO:Initializing create_model()
2023-06-17 13:38:06,842:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0D42EB0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8580, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:06,842:INFO:Checking exceptions
2023-06-17 13:38:06,843:INFO:Importing libraries
2023-06-17 13:38:06,843:INFO:Copying training dataset
2023-06-17 13:38:06,856:INFO:Defining folds
2023-06-17 13:38:06,856:INFO:Declaring metric variables
2023-06-17 13:38:06,856:INFO:Importing untrained model
2023-06-17 13:38:06,856:INFO:Declaring custom model
2023-06-17 13:38:06,857:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 13:38:06,858:INFO:Cross validation set to False
2023-06-17 13:38:06,858:INFO:Fitting Model
2023-06-17 13:38:11,515:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8580, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 13:38:11,515:INFO:create_model() successfully completed......................................
2023-06-17 13:38:11,651:INFO:_master_model_container: 15
2023-06-17 13:38:11,651:INFO:_display_container: 2
2023-06-17 13:38:11,651:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8580, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 13:38:11,651:INFO:compare_models() successfully completed......................................
2023-06-17 13:38:11,657:INFO:Initializing save_model()
2023-06-17 13:38:11,657:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=8580, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'smoking_history'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 13:38:11,657:INFO:Adding model into prep_pipe
2023-06-17 13:38:11,668:INFO:best_model.pkl saved in current working directory
2023-06-17 13:38:11,673:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=8580, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-06-17 13:38:11,673:INFO:save_model() successfully completed......................................
2023-06-17 13:38:12,119:INFO:PyCaret RegressionExperiment
2023-06-17 13:38:12,119:INFO:Logging name: reg-default-name
2023-06-17 13:38:12,119:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 13:38:12,119:INFO:version 3.0.2
2023-06-17 13:38:12,119:INFO:Initializing setup()
2023-06-17 13:38:12,119:INFO:self.USI: 12a9
2023-06-17 13:38:12,119:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 13:38:12,119:INFO:Checking environment
2023-06-17 13:38:12,119:INFO:python_version: 3.9.5
2023-06-17 13:38:12,119:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 13:38:12,119:INFO:machine: AMD64
2023-06-17 13:38:12,119:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 13:38:12,123:INFO:Memory: svmem(total=17102532608, available=8102498304, percent=52.6, used=9000034304, free=8102498304)
2023-06-17 13:38:12,123:INFO:Physical Core: 8
2023-06-17 13:38:12,123:INFO:Logical Core: 16
2023-06-17 13:38:12,123:INFO:Checking libraries
2023-06-17 13:38:12,123:INFO:System:
2023-06-17 13:38:12,123:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 13:38:12,123:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 13:38:12,123:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 13:38:12,123:INFO:PyCaret required dependencies:
2023-06-17 13:38:12,123:INFO:                 pip: 23.1.2
2023-06-17 13:38:12,123:INFO:          setuptools: 56.0.0
2023-06-17 13:38:12,123:INFO:             pycaret: 3.0.2
2023-06-17 13:38:12,123:INFO:             IPython: 8.14.0
2023-06-17 13:38:12,123:INFO:          ipywidgets: 8.0.6
2023-06-17 13:38:12,123:INFO:                tqdm: 4.65.0
2023-06-17 13:38:12,123:INFO:               numpy: 1.22.3
2023-06-17 13:38:12,123:INFO:              pandas: 1.4.2
2023-06-17 13:38:12,123:INFO:              jinja2: 3.1.2
2023-06-17 13:38:12,123:INFO:               scipy: 1.8.0
2023-06-17 13:38:12,123:INFO:              joblib: 1.2.0
2023-06-17 13:38:12,123:INFO:             sklearn: 1.2.2
2023-06-17 13:38:12,123:INFO:                pyod: 1.0.9
2023-06-17 13:38:12,123:INFO:            imblearn: 0.10.1
2023-06-17 13:38:12,124:INFO:   category_encoders: 2.6.1
2023-06-17 13:38:12,124:INFO:            lightgbm: 3.3.5
2023-06-17 13:38:12,124:INFO:               numba: 0.57.0
2023-06-17 13:38:12,124:INFO:            requests: 2.27.1
2023-06-17 13:38:12,124:INFO:          matplotlib: 3.5.1
2023-06-17 13:38:12,124:INFO:          scikitplot: 0.3.7
2023-06-17 13:38:12,124:INFO:         yellowbrick: 1.5
2023-06-17 13:38:12,124:INFO:              plotly: 5.10.0
2023-06-17 13:38:12,124:INFO:             kaleido: 0.2.1
2023-06-17 13:38:12,124:INFO:         statsmodels: 0.14.0
2023-06-17 13:38:12,124:INFO:              sktime: 0.17.0
2023-06-17 13:38:12,124:INFO:               tbats: 1.1.3
2023-06-17 13:38:12,124:INFO:            pmdarima: 2.0.3
2023-06-17 13:38:12,124:INFO:              psutil: 5.9.5
2023-06-17 13:38:12,124:INFO:PyCaret optional dependencies:
2023-06-17 13:38:12,124:INFO:                shap: Not installed
2023-06-17 13:38:12,124:INFO:           interpret: Not installed
2023-06-17 13:38:12,124:INFO:                umap: Not installed
2023-06-17 13:38:12,124:INFO:    pandas_profiling: 4.2.0
2023-06-17 13:38:12,124:INFO:  explainerdashboard: Not installed
2023-06-17 13:38:12,124:INFO:             autoviz: Not installed
2023-06-17 13:38:12,124:INFO:           fairlearn: Not installed
2023-06-17 13:38:12,124:INFO:             xgboost: 1.7.4
2023-06-17 13:38:12,124:INFO:            catboost: Not installed
2023-06-17 13:38:12,124:INFO:              kmodes: Not installed
2023-06-17 13:38:12,124:INFO:             mlxtend: Not installed
2023-06-17 13:38:12,124:INFO:       statsforecast: Not installed
2023-06-17 13:38:12,124:INFO:        tune_sklearn: Not installed
2023-06-17 13:38:12,124:INFO:                 ray: Not installed
2023-06-17 13:38:12,124:INFO:            hyperopt: Not installed
2023-06-17 13:38:12,124:INFO:              optuna: Not installed
2023-06-17 13:38:12,124:INFO:               skopt: Not installed
2023-06-17 13:38:12,124:INFO:              mlflow: Not installed
2023-06-17 13:38:12,124:INFO:              gradio: Not installed
2023-06-17 13:38:12,125:INFO:             fastapi: Not installed
2023-06-17 13:38:12,125:INFO:             uvicorn: Not installed
2023-06-17 13:38:12,125:INFO:              m2cgen: Not installed
2023-06-17 13:38:12,125:INFO:           evidently: Not installed
2023-06-17 13:38:12,125:INFO:               fugue: Not installed
2023-06-17 13:38:12,125:INFO:           streamlit: 1.23.1
2023-06-17 13:38:12,125:INFO:             prophet: Not installed
2023-06-17 13:38:12,125:INFO:None
2023-06-17 13:38:12,125:INFO:Set up data.
2023-06-17 13:38:12,146:INFO:Set up train/test split.
2023-06-17 13:38:12,156:INFO:Set up index.
2023-06-17 13:38:12,158:INFO:Set up folding strategy.
2023-06-17 13:38:12,158:INFO:Assigning column types.
2023-06-17 13:38:12,165:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 13:38:12,165:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,169:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,174:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,240:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,284:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,285:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:12,288:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:12,288:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,293:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,297:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,403:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,404:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:12,406:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:12,407:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 13:38:12,411:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,416:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,478:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,523:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,523:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:12,526:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:12,531:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,535:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,643:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,644:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:12,647:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:12,647:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 13:38:12,656:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,721:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,765:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,765:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:12,768:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:12,777:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,839:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,883:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:38:12,883:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:12,885:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:12,886:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 13:38:12,957:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:13,001:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:38:13,002:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:13,004:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:13,075:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:13,119:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:38:13,120:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:13,122:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:13,122:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 13:38:13,194:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:13,238:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:13,241:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:13,314:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:38:13,361:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:13,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:13,364:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 13:38:13,479:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:13,482:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:13,598:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:13,600:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:13,601:INFO:Preparing preprocessing pipeline...
2023-06-17 13:38:13,601:INFO:Set up simple imputation.
2023-06-17 13:38:13,607:INFO:Set up encoding of categorical features.
2023-06-17 13:38:13,745:INFO:Finished creating preprocessing pipeline.
2023-06-17 13:38:13,749:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'smoking_history'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-06-17 13:38:13,749:INFO:Creating final display dataframe.
2023-06-17 13:38:14,120:INFO:Setup _display_container:                     Description             Value
0                    Session id              6918
1                        Target          diabetes
2                   Target type        Regression
3           Original data shape       (100000, 9)
4        Transformed data shape      (100000, 16)
5   Transformed train set shape       (70000, 16)
6    Transformed test set shape       (30000, 16)
7              Numeric features                 6
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator             KFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  reg-default-name
21                          USI              12a9
2023-06-17 13:38:14,244:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:14,247:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:14,363:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:38:14,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:38:14,366:INFO:setup() successfully completed in 2.35s...............
2023-06-17 13:38:14,369:INFO:Initializing compare_models()
2023-06-17 13:38:14,369:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-17 13:38:14,369:INFO:Checking exceptions
2023-06-17 13:38:14,375:INFO:Preparing display monitor
2023-06-17 13:38:14,378:INFO:Initializing Linear Regression
2023-06-17 13:38:14,378:INFO:Total runtime is 0.0 minutes
2023-06-17 13:38:14,378:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:14,378:INFO:Initializing create_model()
2023-06-17 13:38:14,378:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:14,378:INFO:Checking exceptions
2023-06-17 13:38:14,378:INFO:Importing libraries
2023-06-17 13:38:14,378:INFO:Copying training dataset
2023-06-17 13:38:14,394:INFO:Defining folds
2023-06-17 13:38:14,394:INFO:Declaring metric variables
2023-06-17 13:38:14,394:INFO:Importing untrained model
2023-06-17 13:38:14,394:INFO:Linear Regression Imported successfully
2023-06-17 13:38:14,394:INFO:Starting cross validation
2023-06-17 13:38:14,395:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:16,034:INFO:Calculating mean and std
2023-06-17 13:38:16,035:INFO:Creating metrics dataframe
2023-06-17 13:38:16,232:INFO:Uploading results into container
2023-06-17 13:38:16,233:INFO:Uploading model into container now
2023-06-17 13:38:16,233:INFO:_master_model_container: 1
2023-06-17 13:38:16,233:INFO:_display_container: 2
2023-06-17 13:38:16,233:INFO:LinearRegression(copy_X=True, fit_intercept=True, n_jobs=-1, positive=False)
2023-06-17 13:38:16,233:INFO:create_model() successfully completed......................................
2023-06-17 13:38:16,355:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:16,356:INFO:Creating metrics dataframe
2023-06-17 13:38:16,358:INFO:Initializing Lasso Regression
2023-06-17 13:38:16,358:INFO:Total runtime is 0.03300000429153442 minutes
2023-06-17 13:38:16,358:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:16,359:INFO:Initializing create_model()
2023-06-17 13:38:16,359:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:16,359:INFO:Checking exceptions
2023-06-17 13:38:16,359:INFO:Importing libraries
2023-06-17 13:38:16,359:INFO:Copying training dataset
2023-06-17 13:38:16,372:INFO:Defining folds
2023-06-17 13:38:16,372:INFO:Declaring metric variables
2023-06-17 13:38:16,372:INFO:Importing untrained model
2023-06-17 13:38:16,373:INFO:Lasso Regression Imported successfully
2023-06-17 13:38:16,373:INFO:Starting cross validation
2023-06-17 13:38:16,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:17,842:INFO:Calculating mean and std
2023-06-17 13:38:17,842:INFO:Creating metrics dataframe
2023-06-17 13:38:18,040:INFO:Uploading results into container
2023-06-17 13:38:18,040:INFO:Uploading model into container now
2023-06-17 13:38:18,041:INFO:_master_model_container: 2
2023-06-17 13:38:18,041:INFO:_display_container: 2
2023-06-17 13:38:18,041:INFO:Lasso(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=1000, positive=False,
      precompute=False, random_state=6918, selection='cyclic', tol=0.0001,
      warm_start=False)
2023-06-17 13:38:18,041:INFO:create_model() successfully completed......................................
2023-06-17 13:38:18,163:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:18,163:INFO:Creating metrics dataframe
2023-06-17 13:38:18,166:INFO:Initializing Ridge Regression
2023-06-17 13:38:18,166:INFO:Total runtime is 0.06313334703445433 minutes
2023-06-17 13:38:18,166:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:18,166:INFO:Initializing create_model()
2023-06-17 13:38:18,166:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:18,166:INFO:Checking exceptions
2023-06-17 13:38:18,166:INFO:Importing libraries
2023-06-17 13:38:18,166:INFO:Copying training dataset
2023-06-17 13:38:18,179:INFO:Defining folds
2023-06-17 13:38:18,179:INFO:Declaring metric variables
2023-06-17 13:38:18,179:INFO:Importing untrained model
2023-06-17 13:38:18,179:INFO:Ridge Regression Imported successfully
2023-06-17 13:38:18,179:INFO:Starting cross validation
2023-06-17 13:38:18,180:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:19,605:INFO:Calculating mean and std
2023-06-17 13:38:19,605:INFO:Creating metrics dataframe
2023-06-17 13:38:19,815:INFO:Uploading results into container
2023-06-17 13:38:19,816:INFO:Uploading model into container now
2023-06-17 13:38:19,816:INFO:_master_model_container: 3
2023-06-17 13:38:19,816:INFO:_display_container: 2
2023-06-17 13:38:19,817:INFO:Ridge(alpha=1.0, copy_X=True, fit_intercept=True, max_iter=None, positive=False,
      random_state=6918, solver='auto', tol=0.0001)
2023-06-17 13:38:19,817:INFO:create_model() successfully completed......................................
2023-06-17 13:38:19,936:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:19,936:INFO:Creating metrics dataframe
2023-06-17 13:38:19,939:INFO:Initializing Elastic Net
2023-06-17 13:38:19,939:INFO:Total runtime is 0.09268331925074258 minutes
2023-06-17 13:38:19,940:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:19,940:INFO:Initializing create_model()
2023-06-17 13:38:19,940:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:19,940:INFO:Checking exceptions
2023-06-17 13:38:19,940:INFO:Importing libraries
2023-06-17 13:38:19,940:INFO:Copying training dataset
2023-06-17 13:38:19,953:INFO:Defining folds
2023-06-17 13:38:19,953:INFO:Declaring metric variables
2023-06-17 13:38:19,953:INFO:Importing untrained model
2023-06-17 13:38:19,954:INFO:Elastic Net Imported successfully
2023-06-17 13:38:19,954:INFO:Starting cross validation
2023-06-17 13:38:19,955:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:21,398:INFO:Calculating mean and std
2023-06-17 13:38:21,399:INFO:Creating metrics dataframe
2023-06-17 13:38:21,600:INFO:Uploading results into container
2023-06-17 13:38:21,601:INFO:Uploading model into container now
2023-06-17 13:38:21,601:INFO:_master_model_container: 4
2023-06-17 13:38:21,601:INFO:_display_container: 2
2023-06-17 13:38:21,601:INFO:ElasticNet(alpha=1.0, copy_X=True, fit_intercept=True, l1_ratio=0.5,
           max_iter=1000, positive=False, precompute=False, random_state=6918,
           selection='cyclic', tol=0.0001, warm_start=False)
2023-06-17 13:38:21,602:INFO:create_model() successfully completed......................................
2023-06-17 13:38:21,724:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:21,724:INFO:Creating metrics dataframe
2023-06-17 13:38:21,727:INFO:Initializing Least Angle Regression
2023-06-17 13:38:21,727:INFO:Total runtime is 0.12247606118520099 minutes
2023-06-17 13:38:21,727:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:21,727:INFO:Initializing create_model()
2023-06-17 13:38:21,727:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:21,727:INFO:Checking exceptions
2023-06-17 13:38:21,727:INFO:Importing libraries
2023-06-17 13:38:21,727:INFO:Copying training dataset
2023-06-17 13:38:21,745:INFO:Defining folds
2023-06-17 13:38:21,745:INFO:Declaring metric variables
2023-06-17 13:38:21,745:INFO:Importing untrained model
2023-06-17 13:38:21,745:INFO:Least Angle Regression Imported successfully
2023-06-17 13:38:21,745:INFO:Starting cross validation
2023-06-17 13:38:21,746:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:23,102:INFO:Calculating mean and std
2023-06-17 13:38:23,103:INFO:Creating metrics dataframe
2023-06-17 13:38:23,301:INFO:Uploading results into container
2023-06-17 13:38:23,302:INFO:Uploading model into container now
2023-06-17 13:38:23,302:INFO:_master_model_container: 5
2023-06-17 13:38:23,303:INFO:_display_container: 2
2023-06-17 13:38:23,303:INFO:Lars(copy_X=True, eps=2.220446049250313e-16, fit_intercept=True, fit_path=True,
     jitter=None, n_nonzero_coefs=500, normalize='deprecated',
     precompute='auto', random_state=6918, verbose=False)
2023-06-17 13:38:23,303:INFO:create_model() successfully completed......................................
2023-06-17 13:38:23,422:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:23,423:INFO:Creating metrics dataframe
2023-06-17 13:38:23,427:INFO:Initializing Lasso Least Angle Regression
2023-06-17 13:38:23,427:INFO:Total runtime is 0.15080933968226112 minutes
2023-06-17 13:38:23,427:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:23,427:INFO:Initializing create_model()
2023-06-17 13:38:23,427:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:23,427:INFO:Checking exceptions
2023-06-17 13:38:23,427:INFO:Importing libraries
2023-06-17 13:38:23,427:INFO:Copying training dataset
2023-06-17 13:38:23,442:INFO:Defining folds
2023-06-17 13:38:23,442:INFO:Declaring metric variables
2023-06-17 13:38:23,442:INFO:Importing untrained model
2023-06-17 13:38:23,443:INFO:Lasso Least Angle Regression Imported successfully
2023-06-17 13:38:23,443:INFO:Starting cross validation
2023-06-17 13:38:23,444:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:24,814:INFO:Calculating mean and std
2023-06-17 13:38:24,815:INFO:Creating metrics dataframe
2023-06-17 13:38:25,021:INFO:Uploading results into container
2023-06-17 13:38:25,021:INFO:Uploading model into container now
2023-06-17 13:38:25,022:INFO:_master_model_container: 6
2023-06-17 13:38:25,022:INFO:_display_container: 2
2023-06-17 13:38:25,022:INFO:LassoLars(alpha=1.0, copy_X=True, eps=2.220446049250313e-16, fit_intercept=True,
          fit_path=True, jitter=None, max_iter=500, normalize='deprecated',
          positive=False, precompute='auto', random_state=6918, verbose=False)
2023-06-17 13:38:25,022:INFO:create_model() successfully completed......................................
2023-06-17 13:38:25,148:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:25,148:INFO:Creating metrics dataframe
2023-06-17 13:38:25,151:INFO:Initializing Orthogonal Matching Pursuit
2023-06-17 13:38:25,151:INFO:Total runtime is 0.1795418898264567 minutes
2023-06-17 13:38:25,152:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:25,152:INFO:Initializing create_model()
2023-06-17 13:38:25,152:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:25,152:INFO:Checking exceptions
2023-06-17 13:38:25,152:INFO:Importing libraries
2023-06-17 13:38:25,152:INFO:Copying training dataset
2023-06-17 13:38:25,166:INFO:Defining folds
2023-06-17 13:38:25,167:INFO:Declaring metric variables
2023-06-17 13:38:25,167:INFO:Importing untrained model
2023-06-17 13:38:25,167:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-17 13:38:25,167:INFO:Starting cross validation
2023-06-17 13:38:25,168:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:26,572:INFO:Calculating mean and std
2023-06-17 13:38:26,573:INFO:Creating metrics dataframe
2023-06-17 13:38:26,776:INFO:Uploading results into container
2023-06-17 13:38:26,777:INFO:Uploading model into container now
2023-06-17 13:38:26,777:INFO:_master_model_container: 7
2023-06-17 13:38:26,778:INFO:_display_container: 2
2023-06-17 13:38:26,778:INFO:OrthogonalMatchingPursuit(fit_intercept=True, n_nonzero_coefs=None,
                          normalize='deprecated', precompute='auto', tol=None)
2023-06-17 13:38:26,778:INFO:create_model() successfully completed......................................
2023-06-17 13:38:26,905:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:26,905:INFO:Creating metrics dataframe
2023-06-17 13:38:26,908:INFO:Initializing Bayesian Ridge
2023-06-17 13:38:26,908:INFO:Total runtime is 0.20883417526880899 minutes
2023-06-17 13:38:26,908:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:26,908:INFO:Initializing create_model()
2023-06-17 13:38:26,908:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:26,908:INFO:Checking exceptions
2023-06-17 13:38:26,908:INFO:Importing libraries
2023-06-17 13:38:26,908:INFO:Copying training dataset
2023-06-17 13:38:26,925:INFO:Defining folds
2023-06-17 13:38:26,925:INFO:Declaring metric variables
2023-06-17 13:38:26,925:INFO:Importing untrained model
2023-06-17 13:38:26,925:INFO:Bayesian Ridge Imported successfully
2023-06-17 13:38:26,926:INFO:Starting cross validation
2023-06-17 13:38:26,926:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:28,315:INFO:Calculating mean and std
2023-06-17 13:38:28,316:INFO:Creating metrics dataframe
2023-06-17 13:38:28,521:INFO:Uploading results into container
2023-06-17 13:38:28,522:INFO:Uploading model into container now
2023-06-17 13:38:28,522:INFO:_master_model_container: 8
2023-06-17 13:38:28,522:INFO:_display_container: 2
2023-06-17 13:38:28,523:INFO:BayesianRidge(alpha_1=1e-06, alpha_2=1e-06, alpha_init=None,
              compute_score=False, copy_X=True, fit_intercept=True,
              lambda_1=1e-06, lambda_2=1e-06, lambda_init=None, n_iter=300,
              tol=0.001, verbose=False)
2023-06-17 13:38:28,523:INFO:create_model() successfully completed......................................
2023-06-17 13:38:28,650:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:28,650:INFO:Creating metrics dataframe
2023-06-17 13:38:28,653:INFO:Initializing Passive Aggressive Regressor
2023-06-17 13:38:28,653:INFO:Total runtime is 0.23792342742284137 minutes
2023-06-17 13:38:28,653:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:28,653:INFO:Initializing create_model()
2023-06-17 13:38:28,653:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:28,653:INFO:Checking exceptions
2023-06-17 13:38:28,653:INFO:Importing libraries
2023-06-17 13:38:28,654:INFO:Copying training dataset
2023-06-17 13:38:28,669:INFO:Defining folds
2023-06-17 13:38:28,669:INFO:Declaring metric variables
2023-06-17 13:38:28,669:INFO:Importing untrained model
2023-06-17 13:38:28,669:INFO:Passive Aggressive Regressor Imported successfully
2023-06-17 13:38:28,670:INFO:Starting cross validation
2023-06-17 13:38:28,670:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:30,224:INFO:Calculating mean and std
2023-06-17 13:38:30,225:INFO:Creating metrics dataframe
2023-06-17 13:38:30,439:INFO:Uploading results into container
2023-06-17 13:38:30,439:INFO:Uploading model into container now
2023-06-17 13:38:30,440:INFO:_master_model_container: 9
2023-06-17 13:38:30,440:INFO:_display_container: 2
2023-06-17 13:38:30,440:INFO:PassiveAggressiveRegressor(C=1.0, average=False, early_stopping=False,
                           epsilon=0.1, fit_intercept=True,
                           loss='epsilon_insensitive', max_iter=1000,
                           n_iter_no_change=5, random_state=6918, shuffle=True,
                           tol=0.001, validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 13:38:30,440:INFO:create_model() successfully completed......................................
2023-06-17 13:38:30,562:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:30,562:INFO:Creating metrics dataframe
2023-06-17 13:38:30,565:INFO:Initializing Huber Regressor
2023-06-17 13:38:30,565:INFO:Total runtime is 0.2697892387708028 minutes
2023-06-17 13:38:30,565:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:30,565:INFO:Initializing create_model()
2023-06-17 13:38:30,565:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:30,565:INFO:Checking exceptions
2023-06-17 13:38:30,565:INFO:Importing libraries
2023-06-17 13:38:30,565:INFO:Copying training dataset
2023-06-17 13:38:30,579:INFO:Defining folds
2023-06-17 13:38:30,579:INFO:Declaring metric variables
2023-06-17 13:38:30,579:INFO:Importing untrained model
2023-06-17 13:38:30,579:INFO:Huber Regressor Imported successfully
2023-06-17 13:38:30,579:INFO:Starting cross validation
2023-06-17 13:38:30,580:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:35,247:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:35,381:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:35,675:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:35,780:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:35,790:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:35,792:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:35,826:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:35,921:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:35,953:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:38:37,079:INFO:Calculating mean and std
2023-06-17 13:38:37,079:INFO:Creating metrics dataframe
2023-06-17 13:38:37,300:INFO:Uploading results into container
2023-06-17 13:38:37,301:INFO:Uploading model into container now
2023-06-17 13:38:37,301:INFO:_master_model_container: 10
2023-06-17 13:38:37,301:INFO:_display_container: 2
2023-06-17 13:38:37,302:INFO:HuberRegressor(alpha=0.0001, epsilon=1.35, fit_intercept=True, max_iter=100,
               tol=1e-05, warm_start=False)
2023-06-17 13:38:37,302:INFO:create_model() successfully completed......................................
2023-06-17 13:38:37,431:INFO:SubProcess create_model() end ==================================
2023-06-17 13:38:37,431:INFO:Creating metrics dataframe
2023-06-17 13:38:37,434:INFO:Initializing K Neighbors Regressor
2023-06-17 13:38:37,434:INFO:Total runtime is 0.38426522016525266 minutes
2023-06-17 13:38:37,434:INFO:SubProcess create_model() called ==================================
2023-06-17 13:38:37,435:INFO:Initializing create_model()
2023-06-17 13:38:37,435:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:37,435:INFO:Checking exceptions
2023-06-17 13:38:37,435:INFO:Importing libraries
2023-06-17 13:38:37,435:INFO:Copying training dataset
2023-06-17 13:38:37,452:INFO:Defining folds
2023-06-17 13:38:37,452:INFO:Declaring metric variables
2023-06-17 13:38:37,452:INFO:Importing untrained model
2023-06-17 13:38:37,453:INFO:K Neighbors Regressor Imported successfully
2023-06-17 13:38:37,453:INFO:Starting cross validation
2023-06-17 13:38:37,454:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:38,393:INFO:  Stopping...
2023-06-17 13:38:39,830:INFO:  Stopping...
2023-06-17 13:38:39,830:WARNING:Exception ignored in: <module 'threading' from 'c:\\users\\brand\\appdata\\local\\programs\\python\\python39\\lib\\threading.py'>
2023-06-17 13:38:39,831:WARNING:Traceback (most recent call last):
2023-06-17 13:38:39,831:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\threading.py", line 1415, in _shutdown
2023-06-17 13:38:39,832:WARNING:    atexit_call()
2023-06-17 13:38:39,832:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 194, in _python_exit
2023-06-17 13:38:39,832:WARNING:    thread.join()
2023-06-17 13:38:39,832:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\threading.py", line 1033, in join
2023-06-17 13:38:39,833:WARNING:    self._wait_for_tstate_lock()
2023-06-17 13:38:39,833:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\threading.py", line 1049, in _wait_for_tstate_lock
2023-06-17 13:38:39,833:WARNING:    elif lock.acquire(block, timeout):
2023-06-17 13:38:39,833:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\streamlit\web\bootstrap.py", line 69, in signal_handler
2023-06-17 13:38:39,837:WARNING:create_model() for knn raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 13:38:39,841:WARNING:    server.stop()
2023-06-17 13:38:39,841:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\streamlit\web\server\server.py", line 395, in stop
2023-06-17 13:38:39,845:WARNING:joblib.externals.loky.process_executor._RemoteTraceback: 
"""
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\externals\loky\process_executor.py", line 391, in _process_worker
    call_item = call_queue.get(block=True, timeout=timeout)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\multiprocessing\queues.py", line 108, in get
    if not self._rlock.acquire(block, timeout):
KeyboardInterrupt
"""

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 266, in cross_validate
    results = parallel(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\parallel.py", line 63, in __call__
    return super().__call__(iterable_with_config)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 1098, in __call__
    self.retrieve()
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\parallel.py", line 975, in retrieve
    self._output.extend(job.get(timeout=self.timeout))
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\_parallel_backends.py", line 567, in wrap_future_result
    return future.result(timeout=timeout)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 445, in result
    return self.__get_result()
  File "c:\users\brand\appdata\local\programs\python\python39\lib\concurrent\futures\_base.py", line 390, in __get_result
    raise self._exception
joblib.externals.loky.process_executor.BrokenProcessPool: A task has failed to un-serialize. Please ensure that the arguments of the function are all picklable.

2023-06-17 13:38:39,845:INFO:Initializing create_model()
2023-06-17 13:38:39,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000214D1646640>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D5001A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:38:39,845:INFO:Checking exceptions
2023-06-17 13:38:39,845:INFO:Importing libraries
2023-06-17 13:38:39,845:INFO:Copying training dataset
2023-06-17 13:38:39,847:WARNING:    self._runtime.stop()
2023-06-17 13:38:39,847:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\streamlit\runtime\runtime.py", line 331, in stop
2023-06-17 13:38:39,854:WARNING:    async_objs.eventloop.call_soon_threadsafe(stop_on_eventloop)
2023-06-17 13:38:39,854:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\asyncio\base_events.py", line 791, in call_soon_threadsafe
2023-06-17 13:38:39,861:INFO:Defining folds
2023-06-17 13:38:39,861:INFO:Declaring metric variables
2023-06-17 13:38:39,861:INFO:Importing untrained model
2023-06-17 13:38:39,861:INFO:K Neighbors Regressor Imported successfully
2023-06-17 13:38:39,861:INFO:Starting cross validation
2023-06-17 13:38:39,862:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:38:39,863:WARNING:    self._check_closed()
2023-06-17 13:38:39,863:WARNING:  File "c:\users\brand\appdata\local\programs\python\python39\lib\asyncio\base_events.py", line 510, in _check_closed
2023-06-17 13:38:39,863:WARNING:    raise RuntimeError('Event loop is closed')
2023-06-17 13:38:39,864:WARNING:RuntimeError: Event loop is closed
2023-06-17 13:38:39,878:ERROR:create_model() for knn raised an exception or returned all 0.0:
2023-06-17 13:38:53,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 13:38:53,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 13:38:53,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 13:38:53,776:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 13:38:54,455:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-17 13:40:13,151:INFO:PyCaret RegressionExperiment
2023-06-17 13:40:13,151:INFO:Logging name: reg-default-name
2023-06-17 13:40:13,151:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 13:40:13,151:INFO:version 3.0.2
2023-06-17 13:40:13,151:INFO:Initializing setup()
2023-06-17 13:40:13,151:INFO:self.USI: d6bf
2023-06-17 13:40:13,151:INFO:self._variable_keys: {'X_test', 'fold_groups_param', 'exp_name_log', 'pipeline', 'html_param', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'target_param', 'transform_target_param', 'fold_generator', 'gpu_n_jobs_param', 'memory', 'seed', 'y_test', 'n_jobs_param', 'idx', 'log_plots_param', 'USI', 'data', 'X_train', '_ml_usecase', '_available_plots', 'logging_param', 'y_train', 'X', 'y'}
2023-06-17 13:40:13,151:INFO:Checking environment
2023-06-17 13:40:13,151:INFO:python_version: 3.9.5
2023-06-17 13:40:13,151:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 13:40:13,151:INFO:machine: AMD64
2023-06-17 13:40:13,161:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 13:40:13,164:INFO:Memory: svmem(total=17102532608, available=10090102784, percent=41.0, used=7012429824, free=10090102784)
2023-06-17 13:40:13,164:INFO:Physical Core: 8
2023-06-17 13:40:13,164:INFO:Logical Core: 16
2023-06-17 13:40:13,164:INFO:Checking libraries
2023-06-17 13:40:13,164:INFO:System:
2023-06-17 13:40:13,164:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 13:40:13,164:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 13:40:13,164:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 13:40:13,164:INFO:PyCaret required dependencies:
2023-06-17 13:40:13,164:INFO:                 pip: 23.1.2
2023-06-17 13:40:13,164:INFO:          setuptools: 56.0.0
2023-06-17 13:40:13,164:INFO:             pycaret: 3.0.2
2023-06-17 13:40:13,164:INFO:             IPython: 8.14.0
2023-06-17 13:40:13,164:INFO:          ipywidgets: 8.0.6
2023-06-17 13:40:13,165:INFO:                tqdm: 4.65.0
2023-06-17 13:40:13,165:INFO:               numpy: 1.22.3
2023-06-17 13:40:13,165:INFO:              pandas: 1.4.2
2023-06-17 13:40:13,165:INFO:              jinja2: 3.1.2
2023-06-17 13:40:13,165:INFO:               scipy: 1.8.0
2023-06-17 13:40:13,165:INFO:              joblib: 1.2.0
2023-06-17 13:40:13,165:INFO:             sklearn: 1.2.2
2023-06-17 13:40:13,165:INFO:                pyod: 1.0.9
2023-06-17 13:40:13,165:INFO:            imblearn: 0.10.1
2023-06-17 13:40:13,165:INFO:   category_encoders: 2.6.1
2023-06-17 13:40:13,165:INFO:            lightgbm: 3.3.5
2023-06-17 13:40:13,165:INFO:               numba: 0.57.0
2023-06-17 13:40:13,165:INFO:            requests: 2.27.1
2023-06-17 13:40:13,165:INFO:          matplotlib: 3.5.1
2023-06-17 13:40:13,165:INFO:          scikitplot: 0.3.7
2023-06-17 13:40:13,165:INFO:         yellowbrick: 1.5
2023-06-17 13:40:13,165:INFO:              plotly: 5.10.0
2023-06-17 13:40:13,165:INFO:             kaleido: 0.2.1
2023-06-17 13:40:13,165:INFO:         statsmodels: 0.14.0
2023-06-17 13:40:13,165:INFO:              sktime: 0.17.0
2023-06-17 13:40:13,165:INFO:               tbats: 1.1.3
2023-06-17 13:40:13,165:INFO:            pmdarima: 2.0.3
2023-06-17 13:40:13,165:INFO:              psutil: 5.9.5
2023-06-17 13:40:13,165:INFO:PyCaret optional dependencies:
2023-06-17 13:40:13,173:INFO:                shap: Not installed
2023-06-17 13:40:13,173:INFO:           interpret: Not installed
2023-06-17 13:40:13,173:INFO:                umap: Not installed
2023-06-17 13:40:13,173:INFO:    pandas_profiling: 4.2.0
2023-06-17 13:40:13,173:INFO:  explainerdashboard: Not installed
2023-06-17 13:40:13,173:INFO:             autoviz: Not installed
2023-06-17 13:40:13,173:INFO:           fairlearn: Not installed
2023-06-17 13:40:13,173:INFO:             xgboost: 1.7.4
2023-06-17 13:40:13,173:INFO:            catboost: Not installed
2023-06-17 13:40:13,173:INFO:              kmodes: Not installed
2023-06-17 13:40:13,173:INFO:             mlxtend: Not installed
2023-06-17 13:40:13,173:INFO:       statsforecast: Not installed
2023-06-17 13:40:13,173:INFO:        tune_sklearn: Not installed
2023-06-17 13:40:13,173:INFO:                 ray: Not installed
2023-06-17 13:40:13,173:INFO:            hyperopt: Not installed
2023-06-17 13:40:13,173:INFO:              optuna: Not installed
2023-06-17 13:40:13,173:INFO:               skopt: Not installed
2023-06-17 13:40:13,173:INFO:              mlflow: Not installed
2023-06-17 13:40:13,173:INFO:              gradio: Not installed
2023-06-17 13:40:13,173:INFO:             fastapi: Not installed
2023-06-17 13:40:13,173:INFO:             uvicorn: Not installed
2023-06-17 13:40:13,173:INFO:              m2cgen: Not installed
2023-06-17 13:40:13,173:INFO:           evidently: Not installed
2023-06-17 13:40:13,173:INFO:               fugue: Not installed
2023-06-17 13:40:13,173:INFO:           streamlit: 1.23.1
2023-06-17 13:40:13,173:INFO:             prophet: Not installed
2023-06-17 13:40:13,173:INFO:None
2023-06-17 13:40:13,173:INFO:Set up data.
2023-06-17 13:40:41,539:INFO:PyCaret ClassificationExperiment
2023-06-17 13:40:41,539:INFO:Logging name: clf-default-name
2023-06-17 13:40:41,539:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 13:40:41,539:INFO:version 3.0.2
2023-06-17 13:40:41,539:INFO:Initializing setup()
2023-06-17 13:40:41,539:INFO:self.USI: ccbd
2023-06-17 13:40:41,539:INFO:self._variable_keys: {'X_test', 'fold_groups_param', 'exp_name_log', 'pipeline', 'html_param', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'target_param', 'fold_generator', 'fix_imbalance', 'gpu_n_jobs_param', 'memory', 'seed', 'y_test', 'n_jobs_param', 'idx', 'log_plots_param', 'USI', 'data', 'X_train', '_ml_usecase', '_available_plots', 'is_multiclass', 'logging_param', 'y_train', 'X', 'y'}
2023-06-17 13:40:41,539:INFO:Checking environment
2023-06-17 13:40:41,539:INFO:python_version: 3.9.5
2023-06-17 13:40:41,539:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 13:40:41,539:INFO:machine: AMD64
2023-06-17 13:40:41,539:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 13:40:41,543:INFO:Memory: svmem(total=17102532608, available=10220605440, percent=40.2, used=6881927168, free=10220605440)
2023-06-17 13:40:41,543:INFO:Physical Core: 8
2023-06-17 13:40:41,543:INFO:Logical Core: 16
2023-06-17 13:40:41,543:INFO:Checking libraries
2023-06-17 13:40:41,543:INFO:System:
2023-06-17 13:40:41,543:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 13:40:41,543:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 13:40:41,543:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 13:40:41,543:INFO:PyCaret required dependencies:
2023-06-17 13:40:41,543:INFO:                 pip: 23.1.2
2023-06-17 13:40:41,543:INFO:          setuptools: 56.0.0
2023-06-17 13:40:41,543:INFO:             pycaret: 3.0.2
2023-06-17 13:40:41,543:INFO:             IPython: 8.14.0
2023-06-17 13:40:41,543:INFO:          ipywidgets: 8.0.6
2023-06-17 13:40:41,543:INFO:                tqdm: 4.65.0
2023-06-17 13:40:41,543:INFO:               numpy: 1.22.3
2023-06-17 13:40:41,543:INFO:              pandas: 1.4.2
2023-06-17 13:40:41,543:INFO:              jinja2: 3.1.2
2023-06-17 13:40:41,543:INFO:               scipy: 1.8.0
2023-06-17 13:40:41,543:INFO:              joblib: 1.2.0
2023-06-17 13:40:41,543:INFO:             sklearn: 1.2.2
2023-06-17 13:40:41,543:INFO:                pyod: 1.0.9
2023-06-17 13:40:41,543:INFO:            imblearn: 0.10.1
2023-06-17 13:40:41,544:INFO:   category_encoders: 2.6.1
2023-06-17 13:40:41,544:INFO:            lightgbm: 3.3.5
2023-06-17 13:40:41,544:INFO:               numba: 0.57.0
2023-06-17 13:40:41,544:INFO:            requests: 2.27.1
2023-06-17 13:40:41,544:INFO:          matplotlib: 3.5.1
2023-06-17 13:40:41,544:INFO:          scikitplot: 0.3.7
2023-06-17 13:40:41,544:INFO:         yellowbrick: 1.5
2023-06-17 13:40:41,544:INFO:              plotly: 5.10.0
2023-06-17 13:40:41,544:INFO:             kaleido: 0.2.1
2023-06-17 13:40:41,544:INFO:         statsmodels: 0.14.0
2023-06-17 13:40:41,544:INFO:              sktime: 0.17.0
2023-06-17 13:40:41,544:INFO:               tbats: 1.1.3
2023-06-17 13:40:41,544:INFO:            pmdarima: 2.0.3
2023-06-17 13:40:41,544:INFO:              psutil: 5.9.5
2023-06-17 13:40:41,544:INFO:PyCaret optional dependencies:
2023-06-17 13:40:41,544:INFO:                shap: Not installed
2023-06-17 13:40:41,544:INFO:           interpret: Not installed
2023-06-17 13:40:41,544:INFO:                umap: Not installed
2023-06-17 13:40:41,544:INFO:    pandas_profiling: 4.2.0
2023-06-17 13:40:41,544:INFO:  explainerdashboard: Not installed
2023-06-17 13:40:41,544:INFO:             autoviz: Not installed
2023-06-17 13:40:41,544:INFO:           fairlearn: Not installed
2023-06-17 13:40:41,544:INFO:             xgboost: 1.7.4
2023-06-17 13:40:41,544:INFO:            catboost: Not installed
2023-06-17 13:40:41,544:INFO:              kmodes: Not installed
2023-06-17 13:40:41,544:INFO:             mlxtend: Not installed
2023-06-17 13:40:41,544:INFO:       statsforecast: Not installed
2023-06-17 13:40:41,544:INFO:        tune_sklearn: Not installed
2023-06-17 13:40:41,544:INFO:                 ray: Not installed
2023-06-17 13:40:41,544:INFO:            hyperopt: Not installed
2023-06-17 13:40:41,544:INFO:              optuna: Not installed
2023-06-17 13:40:41,544:INFO:               skopt: Not installed
2023-06-17 13:40:41,544:INFO:              mlflow: Not installed
2023-06-17 13:40:41,545:INFO:              gradio: Not installed
2023-06-17 13:40:41,545:INFO:             fastapi: Not installed
2023-06-17 13:40:41,545:INFO:             uvicorn: Not installed
2023-06-17 13:40:41,545:INFO:              m2cgen: Not installed
2023-06-17 13:40:41,545:INFO:           evidently: Not installed
2023-06-17 13:40:41,545:INFO:               fugue: Not installed
2023-06-17 13:40:41,545:INFO:           streamlit: 1.23.1
2023-06-17 13:40:41,545:INFO:             prophet: Not installed
2023-06-17 13:40:41,545:INFO:None
2023-06-17 13:40:41,545:INFO:Set up data.
2023-06-17 13:40:44,006:INFO:PyCaret RegressionExperiment
2023-06-17 13:40:44,006:INFO:Logging name: reg-default-name
2023-06-17 13:40:44,006:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 13:40:44,006:INFO:version 3.0.2
2023-06-17 13:40:44,006:INFO:Initializing setup()
2023-06-17 13:40:44,006:INFO:self.USI: 523c
2023-06-17 13:40:44,006:INFO:self._variable_keys: {'X_test', 'fold_groups_param', 'exp_name_log', 'pipeline', 'html_param', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'target_param', 'transform_target_param', 'fold_generator', 'gpu_n_jobs_param', 'memory', 'seed', 'y_test', 'n_jobs_param', 'idx', 'log_plots_param', 'USI', 'data', 'X_train', '_ml_usecase', '_available_plots', 'logging_param', 'y_train', 'X', 'y'}
2023-06-17 13:40:44,006:INFO:Checking environment
2023-06-17 13:40:44,006:INFO:python_version: 3.9.5
2023-06-17 13:40:44,006:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 13:40:44,006:INFO:machine: AMD64
2023-06-17 13:40:44,006:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 13:40:44,009:INFO:Memory: svmem(total=17102532608, available=10225098752, percent=40.2, used=6877433856, free=10225098752)
2023-06-17 13:40:44,010:INFO:Physical Core: 8
2023-06-17 13:40:44,010:INFO:Logical Core: 16
2023-06-17 13:40:44,010:INFO:Checking libraries
2023-06-17 13:40:44,010:INFO:System:
2023-06-17 13:40:44,010:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 13:40:44,010:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 13:40:44,010:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 13:40:44,010:INFO:PyCaret required dependencies:
2023-06-17 13:40:44,010:INFO:                 pip: 23.1.2
2023-06-17 13:40:44,010:INFO:          setuptools: 56.0.0
2023-06-17 13:40:44,010:INFO:             pycaret: 3.0.2
2023-06-17 13:40:44,010:INFO:             IPython: 8.14.0
2023-06-17 13:40:44,010:INFO:          ipywidgets: 8.0.6
2023-06-17 13:40:44,010:INFO:                tqdm: 4.65.0
2023-06-17 13:40:44,010:INFO:               numpy: 1.22.3
2023-06-17 13:40:44,010:INFO:              pandas: 1.4.2
2023-06-17 13:40:44,010:INFO:              jinja2: 3.1.2
2023-06-17 13:40:44,010:INFO:               scipy: 1.8.0
2023-06-17 13:40:44,010:INFO:              joblib: 1.2.0
2023-06-17 13:40:44,010:INFO:             sklearn: 1.2.2
2023-06-17 13:40:44,010:INFO:                pyod: 1.0.9
2023-06-17 13:40:44,010:INFO:            imblearn: 0.10.1
2023-06-17 13:40:44,010:INFO:   category_encoders: 2.6.1
2023-06-17 13:40:44,010:INFO:            lightgbm: 3.3.5
2023-06-17 13:40:44,010:INFO:               numba: 0.57.0
2023-06-17 13:40:44,010:INFO:            requests: 2.27.1
2023-06-17 13:40:44,011:INFO:          matplotlib: 3.5.1
2023-06-17 13:40:44,011:INFO:          scikitplot: 0.3.7
2023-06-17 13:40:44,011:INFO:         yellowbrick: 1.5
2023-06-17 13:40:44,011:INFO:              plotly: 5.10.0
2023-06-17 13:40:44,011:INFO:             kaleido: 0.2.1
2023-06-17 13:40:44,011:INFO:         statsmodels: 0.14.0
2023-06-17 13:40:44,011:INFO:              sktime: 0.17.0
2023-06-17 13:40:44,011:INFO:               tbats: 1.1.3
2023-06-17 13:40:44,011:INFO:            pmdarima: 2.0.3
2023-06-17 13:40:44,011:INFO:              psutil: 5.9.5
2023-06-17 13:40:44,011:INFO:PyCaret optional dependencies:
2023-06-17 13:40:44,011:INFO:                shap: Not installed
2023-06-17 13:40:44,011:INFO:           interpret: Not installed
2023-06-17 13:40:44,011:INFO:                umap: Not installed
2023-06-17 13:40:44,011:INFO:    pandas_profiling: 4.2.0
2023-06-17 13:40:44,011:INFO:  explainerdashboard: Not installed
2023-06-17 13:40:44,011:INFO:             autoviz: Not installed
2023-06-17 13:40:44,011:INFO:           fairlearn: Not installed
2023-06-17 13:40:44,011:INFO:             xgboost: 1.7.4
2023-06-17 13:40:44,011:INFO:            catboost: Not installed
2023-06-17 13:40:44,011:INFO:              kmodes: Not installed
2023-06-17 13:40:44,011:INFO:             mlxtend: Not installed
2023-06-17 13:40:44,011:INFO:       statsforecast: Not installed
2023-06-17 13:40:44,011:INFO:        tune_sklearn: Not installed
2023-06-17 13:40:44,011:INFO:                 ray: Not installed
2023-06-17 13:40:44,011:INFO:            hyperopt: Not installed
2023-06-17 13:40:44,011:INFO:              optuna: Not installed
2023-06-17 13:40:44,011:INFO:               skopt: Not installed
2023-06-17 13:40:44,011:INFO:              mlflow: Not installed
2023-06-17 13:40:44,011:INFO:              gradio: Not installed
2023-06-17 13:40:44,011:INFO:             fastapi: Not installed
2023-06-17 13:40:44,012:INFO:             uvicorn: Not installed
2023-06-17 13:40:44,012:INFO:              m2cgen: Not installed
2023-06-17 13:40:44,012:INFO:           evidently: Not installed
2023-06-17 13:40:44,012:INFO:               fugue: Not installed
2023-06-17 13:40:44,012:INFO:           streamlit: 1.23.1
2023-06-17 13:40:44,012:INFO:             prophet: Not installed
2023-06-17 13:40:44,012:INFO:None
2023-06-17 13:40:44,012:INFO:Set up data.
2023-06-17 13:44:05,812:INFO:PyCaret RegressionExperiment
2023-06-17 13:44:05,813:INFO:Logging name: reg-default-name
2023-06-17 13:44:05,813:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 13:44:05,813:INFO:version 3.0.2
2023-06-17 13:44:05,813:INFO:Initializing setup()
2023-06-17 13:44:05,813:INFO:self.USI: 4766
2023-06-17 13:44:05,813:INFO:self._variable_keys: {'X_test', 'fold_groups_param', 'exp_name_log', 'pipeline', 'html_param', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'target_param', 'transform_target_param', 'fold_generator', 'gpu_n_jobs_param', 'memory', 'seed', 'y_test', 'n_jobs_param', 'idx', 'log_plots_param', 'USI', 'data', 'X_train', '_ml_usecase', '_available_plots', 'logging_param', 'y_train', 'X', 'y'}
2023-06-17 13:44:05,813:INFO:Checking environment
2023-06-17 13:44:05,813:INFO:python_version: 3.9.5
2023-06-17 13:44:05,813:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 13:44:05,813:INFO:machine: AMD64
2023-06-17 13:44:05,813:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 13:44:05,816:INFO:Memory: svmem(total=17102532608, available=9943564288, percent=41.9, used=7158968320, free=9943564288)
2023-06-17 13:44:05,817:INFO:Physical Core: 8
2023-06-17 13:44:05,817:INFO:Logical Core: 16
2023-06-17 13:44:05,817:INFO:Checking libraries
2023-06-17 13:44:05,817:INFO:System:
2023-06-17 13:44:05,817:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 13:44:05,817:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 13:44:05,817:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 13:44:05,817:INFO:PyCaret required dependencies:
2023-06-17 13:44:05,817:INFO:                 pip: 23.1.2
2023-06-17 13:44:05,817:INFO:          setuptools: 56.0.0
2023-06-17 13:44:05,817:INFO:             pycaret: 3.0.2
2023-06-17 13:44:05,817:INFO:             IPython: 8.14.0
2023-06-17 13:44:05,817:INFO:          ipywidgets: 8.0.6
2023-06-17 13:44:05,817:INFO:                tqdm: 4.65.0
2023-06-17 13:44:05,817:INFO:               numpy: 1.22.3
2023-06-17 13:44:05,817:INFO:              pandas: 1.4.2
2023-06-17 13:44:05,817:INFO:              jinja2: 3.1.2
2023-06-17 13:44:05,817:INFO:               scipy: 1.8.0
2023-06-17 13:44:05,817:INFO:              joblib: 1.2.0
2023-06-17 13:44:05,817:INFO:             sklearn: 1.2.2
2023-06-17 13:44:05,817:INFO:                pyod: 1.0.9
2023-06-17 13:44:05,817:INFO:            imblearn: 0.10.1
2023-06-17 13:44:05,817:INFO:   category_encoders: 2.6.1
2023-06-17 13:44:05,817:INFO:            lightgbm: 3.3.5
2023-06-17 13:44:05,817:INFO:               numba: 0.57.0
2023-06-17 13:44:05,817:INFO:            requests: 2.27.1
2023-06-17 13:44:05,817:INFO:          matplotlib: 3.5.1
2023-06-17 13:44:05,817:INFO:          scikitplot: 0.3.7
2023-06-17 13:44:05,817:INFO:         yellowbrick: 1.5
2023-06-17 13:44:05,818:INFO:              plotly: 5.10.0
2023-06-17 13:44:05,818:INFO:             kaleido: 0.2.1
2023-06-17 13:44:05,818:INFO:         statsmodels: 0.14.0
2023-06-17 13:44:05,818:INFO:              sktime: 0.17.0
2023-06-17 13:44:05,818:INFO:               tbats: 1.1.3
2023-06-17 13:44:05,818:INFO:            pmdarima: 2.0.3
2023-06-17 13:44:05,818:INFO:              psutil: 5.9.5
2023-06-17 13:44:05,818:INFO:PyCaret optional dependencies:
2023-06-17 13:44:05,818:INFO:                shap: Not installed
2023-06-17 13:44:05,818:INFO:           interpret: Not installed
2023-06-17 13:44:05,818:INFO:                umap: Not installed
2023-06-17 13:44:05,818:INFO:    pandas_profiling: 4.2.0
2023-06-17 13:44:05,818:INFO:  explainerdashboard: Not installed
2023-06-17 13:44:05,818:INFO:             autoviz: Not installed
2023-06-17 13:44:05,818:INFO:           fairlearn: Not installed
2023-06-17 13:44:05,818:INFO:             xgboost: 1.7.4
2023-06-17 13:44:05,818:INFO:            catboost: Not installed
2023-06-17 13:44:05,818:INFO:              kmodes: Not installed
2023-06-17 13:44:05,818:INFO:             mlxtend: Not installed
2023-06-17 13:44:05,818:INFO:       statsforecast: Not installed
2023-06-17 13:44:05,818:INFO:        tune_sklearn: Not installed
2023-06-17 13:44:05,818:INFO:                 ray: Not installed
2023-06-17 13:44:05,818:INFO:            hyperopt: Not installed
2023-06-17 13:44:05,818:INFO:              optuna: Not installed
2023-06-17 13:44:05,818:INFO:               skopt: Not installed
2023-06-17 13:44:05,818:INFO:              mlflow: Not installed
2023-06-17 13:44:05,818:INFO:              gradio: Not installed
2023-06-17 13:44:05,818:INFO:             fastapi: Not installed
2023-06-17 13:44:05,818:INFO:             uvicorn: Not installed
2023-06-17 13:44:05,818:INFO:              m2cgen: Not installed
2023-06-17 13:44:05,818:INFO:           evidently: Not installed
2023-06-17 13:44:05,818:INFO:               fugue: Not installed
2023-06-17 13:44:05,818:INFO:           streamlit: 1.23.1
2023-06-17 13:44:05,818:INFO:             prophet: Not installed
2023-06-17 13:44:05,819:INFO:None
2023-06-17 13:44:05,819:INFO:Set up data.
2023-06-17 13:44:05,825:INFO:Set up train/test split.
2023-06-17 13:44:05,830:INFO:Set up index.
2023-06-17 13:44:05,830:INFO:Set up folding strategy.
2023-06-17 13:44:05,830:INFO:Assigning column types.
2023-06-17 13:44:05,832:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 13:44:05,832:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 13:44:05,837:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 13:44:05,841:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:44:05,897:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:05,940:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:44:05,940:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:05,972:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:05,972:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 13:44:05,977:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 13:44:05,982:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,036:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,079:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,081:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 13:44:06,086:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,090:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,144:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,186:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,187:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,189:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,194:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,198:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,253:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,296:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,298:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,299:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 13:44:06,307:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,360:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,402:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,403:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,405:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,414:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,468:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,510:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,511:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,513:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,513:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 13:44:06,576:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,620:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,620:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,623:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,687:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,729:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,729:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,732:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 13:44:06,795:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,837:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,840:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,903:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 13:44:06,945:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:06,948:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:06,948:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 13:44:07,053:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:07,055:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:07,159:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:07,162:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:07,163:INFO:Preparing preprocessing pipeline...
2023-06-17 13:44:07,163:INFO:Set up simple imputation.
2023-06-17 13:44:07,169:INFO:Set up encoding of ordinal features.
2023-06-17 13:44:07,171:INFO:Set up encoding of categorical features.
2023-06-17 13:44:07,172:INFO:Set up column name cleaning.
2023-06-17 13:44:07,333:INFO:Finished creating preprocessing pipeline.
2023-06-17 13:44:07,371:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['brand', 'processor_brand',
                                             'processor_name',
                                             'processor_gnrtn', 'ram_gb',
                                             'ram_type', 'ssd', 'hdd', 'os',...
                                             'graphic_card_gb', 'weight',
                                             'warranty', 'rating'],
                                    transformer=OneHotEncoder(cols=['brand',
                                                                    'processor_brand',
                                                                    'processor_name',
                                                                    'processor_gnrtn',
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-06-17 13:44:07,371:INFO:Creating final display dataframe.
2023-06-17 13:44:07,730:INFO:Setup _display_container:                     Description             Value
0                    Session id              7320
1                        Target             Price
2                   Target type        Regression
3           Original data shape         (823, 19)
4        Transformed data shape         (823, 75)
5   Transformed train set shape         (576, 75)
6    Transformed test set shape         (247, 75)
7              Ordinal features                 3
8              Numeric features                 2
9          Categorical features                16
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              4766
2023-06-17 13:44:07,842:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:07,844:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:07,951:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 13:44:07,953:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 13:44:07,954:INFO:setup() successfully completed in 2.27s...............
2023-06-17 13:44:07,956:INFO:Initializing compare_models()
2023-06-17 13:44:07,956:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-17 13:44:07,957:INFO:Checking exceptions
2023-06-17 13:44:07,958:INFO:Preparing display monitor
2023-06-17 13:44:07,961:INFO:Initializing Linear Regression
2023-06-17 13:44:07,961:INFO:Total runtime is 0.0 minutes
2023-06-17 13:44:07,961:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:07,961:INFO:Initializing create_model()
2023-06-17 13:44:07,961:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:07,962:INFO:Checking exceptions
2023-06-17 13:44:07,962:INFO:Importing libraries
2023-06-17 13:44:07,962:INFO:Copying training dataset
2023-06-17 13:44:07,965:INFO:Defining folds
2023-06-17 13:44:07,965:INFO:Declaring metric variables
2023-06-17 13:44:07,965:INFO:Importing untrained model
2023-06-17 13:44:07,965:INFO:Linear Regression Imported successfully
2023-06-17 13:44:07,965:INFO:Starting cross validation
2023-06-17 13:44:07,972:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:12,373:INFO:Calculating mean and std
2023-06-17 13:44:12,373:INFO:Creating metrics dataframe
2023-06-17 13:44:12,594:INFO:Uploading results into container
2023-06-17 13:44:12,595:INFO:Uploading model into container now
2023-06-17 13:44:12,595:INFO:_master_model_container: 1
2023-06-17 13:44:12,595:INFO:_display_container: 2
2023-06-17 13:44:12,595:INFO:LinearRegression(n_jobs=-1)
2023-06-17 13:44:12,595:INFO:create_model() successfully completed......................................
2023-06-17 13:44:12,713:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:12,713:INFO:Creating metrics dataframe
2023-06-17 13:44:12,716:INFO:Initializing Lasso Regression
2023-06-17 13:44:12,716:INFO:Total runtime is 0.07924997409184774 minutes
2023-06-17 13:44:12,716:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:12,716:INFO:Initializing create_model()
2023-06-17 13:44:12,716:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:12,716:INFO:Checking exceptions
2023-06-17 13:44:12,716:INFO:Importing libraries
2023-06-17 13:44:12,716:INFO:Copying training dataset
2023-06-17 13:44:12,719:INFO:Defining folds
2023-06-17 13:44:12,719:INFO:Declaring metric variables
2023-06-17 13:44:12,720:INFO:Importing untrained model
2023-06-17 13:44:12,720:INFO:Lasso Regression Imported successfully
2023-06-17 13:44:12,720:INFO:Starting cross validation
2023-06-17 13:44:12,721:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:13,014:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.069e+10, tolerance: 1.042e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:13,014:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.560e+09, tolerance: 1.032e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:13,021:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.196e+10, tolerance: 1.068e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:13,153:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.515e+09, tolerance: 1.092e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:14,826:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.416e+09, tolerance: 1.012e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:14,865:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.062e+10, tolerance: 8.921e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:14,870:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.516e+10, tolerance: 1.096e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:14,874:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.128e+09, tolerance: 1.016e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:14,915:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 4.359e+09, tolerance: 1.079e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:14,933:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.629e+10, tolerance: 1.044e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-17 13:44:15,607:INFO:Calculating mean and std
2023-06-17 13:44:15,608:INFO:Creating metrics dataframe
2023-06-17 13:44:15,829:INFO:Uploading results into container
2023-06-17 13:44:15,830:INFO:Uploading model into container now
2023-06-17 13:44:15,830:INFO:_master_model_container: 2
2023-06-17 13:44:15,830:INFO:_display_container: 2
2023-06-17 13:44:15,830:INFO:Lasso(random_state=7320)
2023-06-17 13:44:15,830:INFO:create_model() successfully completed......................................
2023-06-17 13:44:15,944:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:15,944:INFO:Creating metrics dataframe
2023-06-17 13:44:15,947:INFO:Initializing Ridge Regression
2023-06-17 13:44:15,947:INFO:Total runtime is 0.13309996525446574 minutes
2023-06-17 13:44:15,947:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:15,947:INFO:Initializing create_model()
2023-06-17 13:44:15,947:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:15,947:INFO:Checking exceptions
2023-06-17 13:44:15,947:INFO:Importing libraries
2023-06-17 13:44:15,947:INFO:Copying training dataset
2023-06-17 13:44:15,950:INFO:Defining folds
2023-06-17 13:44:15,950:INFO:Declaring metric variables
2023-06-17 13:44:15,950:INFO:Importing untrained model
2023-06-17 13:44:15,951:INFO:Ridge Regression Imported successfully
2023-06-17 13:44:15,951:INFO:Starting cross validation
2023-06-17 13:44:15,952:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:17,467:INFO:Calculating mean and std
2023-06-17 13:44:17,468:INFO:Creating metrics dataframe
2023-06-17 13:44:17,692:INFO:Uploading results into container
2023-06-17 13:44:17,693:INFO:Uploading model into container now
2023-06-17 13:44:17,693:INFO:_master_model_container: 3
2023-06-17 13:44:17,693:INFO:_display_container: 2
2023-06-17 13:44:17,693:INFO:Ridge(random_state=7320)
2023-06-17 13:44:17,693:INFO:create_model() successfully completed......................................
2023-06-17 13:44:17,807:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:17,807:INFO:Creating metrics dataframe
2023-06-17 13:44:17,810:INFO:Initializing Elastic Net
2023-06-17 13:44:17,810:INFO:Total runtime is 0.1641499678293864 minutes
2023-06-17 13:44:17,810:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:17,810:INFO:Initializing create_model()
2023-06-17 13:44:17,810:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:17,810:INFO:Checking exceptions
2023-06-17 13:44:17,811:INFO:Importing libraries
2023-06-17 13:44:17,811:INFO:Copying training dataset
2023-06-17 13:44:17,814:INFO:Defining folds
2023-06-17 13:44:17,814:INFO:Declaring metric variables
2023-06-17 13:44:17,814:INFO:Importing untrained model
2023-06-17 13:44:17,814:INFO:Elastic Net Imported successfully
2023-06-17 13:44:17,814:INFO:Starting cross validation
2023-06-17 13:44:17,816:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:19,371:INFO:Calculating mean and std
2023-06-17 13:44:19,372:INFO:Creating metrics dataframe
2023-06-17 13:44:19,597:INFO:Uploading results into container
2023-06-17 13:44:19,598:INFO:Uploading model into container now
2023-06-17 13:44:19,598:INFO:_master_model_container: 4
2023-06-17 13:44:19,598:INFO:_display_container: 2
2023-06-17 13:44:19,598:INFO:ElasticNet(random_state=7320)
2023-06-17 13:44:19,598:INFO:create_model() successfully completed......................................
2023-06-17 13:44:19,711:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:19,712:INFO:Creating metrics dataframe
2023-06-17 13:44:19,714:INFO:Initializing Least Angle Regression
2023-06-17 13:44:19,714:INFO:Total runtime is 0.19588329792022707 minutes
2023-06-17 13:44:19,715:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:19,715:INFO:Initializing create_model()
2023-06-17 13:44:19,715:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:19,715:INFO:Checking exceptions
2023-06-17 13:44:19,715:INFO:Importing libraries
2023-06-17 13:44:19,715:INFO:Copying training dataset
2023-06-17 13:44:19,718:INFO:Defining folds
2023-06-17 13:44:19,718:INFO:Declaring metric variables
2023-06-17 13:44:19,718:INFO:Importing untrained model
2023-06-17 13:44:19,718:INFO:Least Angle Regression Imported successfully
2023-06-17 13:44:19,718:INFO:Starting cross validation
2023-06-17 13:44:19,720:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:19,915:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 28 iterations, i.e. alpha=7.942e+02, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,915:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 23 iterations, i.e. alpha=7.944e+02, with an active set of 22 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,915:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 38 iterations, i.e. alpha=5.983e+02, with an active set of 33 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=7.679e+02, with an active set of 23 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=4.169e+02, with an active set of 37 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,917:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=6.404e+02, with an active set of 29 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,918:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 36 iterations, i.e. alpha=4.831e+02, with an active set of 33 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,921:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=4.397e+02, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,922:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 96 iterations, i.e. alpha=1.072e+05, with an active set of 73 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,926:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 47 iterations, i.e. alpha=6.370e+02, with an active set of 38 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,926:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 48 iterations, i.e. alpha=6.361e+02, with an active set of 39 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,927:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 52 iterations, i.e. alpha=6.147e+02, with an active set of 42 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,929:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 94 iterations, i.e. alpha=3.777e+03, with an active set of 71 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,929:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 94 iterations, i.e. alpha=3.555e+03, with an active set of 71 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,929:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 94 iterations, i.e. alpha=3.425e+03, with an active set of 71 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 85 iterations, i.e. alpha=1.172e+03, with an active set of 67 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,933:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 92 iterations, i.e. alpha=4.752e+03, with an active set of 72 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,934:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 92 iterations, i.e. alpha=4.322e+03, with an active set of 72 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,934:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 97 iterations, i.e. alpha=1.770e+03, with an active set of 72 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,956:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 27 iterations, i.e. alpha=1.086e+03, with an active set of 22 regressors, and the smallest cholesky pivot element being 9.483e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,958:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 41 iterations, i.e. alpha=6.870e+02, with an active set of 34 regressors, and the smallest cholesky pivot element being 9.246e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,963:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 63 iterations, i.e. alpha=8.777e+02, with an active set of 49 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,966:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 95 iterations, i.e. alpha=1.248e+05, with an active set of 73 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,968:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 100 iterations, i.e. alpha=9.454e+05, with an active set of 73 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,968:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 91 iterations, i.e. alpha=4.871e+03, with an active set of 65 regressors, and the smallest cholesky pivot element being 7.300e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,971:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 102 iterations, i.e. alpha=1.045e+04, with an active set of 72 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:19,971:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 102 iterations, i.e. alpha=6.088e+03, with an active set of 72 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:20,004:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 65 iterations, i.e. alpha=4.644e+02, with an active set of 55 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:20,009:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 94 iterations, i.e. alpha=2.667e+04, with an active set of 73 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,291:INFO:Calculating mean and std
2023-06-17 13:44:21,291:INFO:Creating metrics dataframe
2023-06-17 13:44:21,515:INFO:Uploading results into container
2023-06-17 13:44:21,516:INFO:Uploading model into container now
2023-06-17 13:44:21,516:INFO:_master_model_container: 5
2023-06-17 13:44:21,516:INFO:_display_container: 2
2023-06-17 13:44:21,517:INFO:Lars(random_state=7320)
2023-06-17 13:44:21,517:INFO:create_model() successfully completed......................................
2023-06-17 13:44:21,630:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:21,630:INFO:Creating metrics dataframe
2023-06-17 13:44:21,634:INFO:Initializing Lasso Least Angle Regression
2023-06-17 13:44:21,634:INFO:Total runtime is 0.22788462241490684 minutes
2023-06-17 13:44:21,634:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:21,634:INFO:Initializing create_model()
2023-06-17 13:44:21,634:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:21,634:INFO:Checking exceptions
2023-06-17 13:44:21,634:INFO:Importing libraries
2023-06-17 13:44:21,634:INFO:Copying training dataset
2023-06-17 13:44:21,638:INFO:Defining folds
2023-06-17 13:44:21,638:INFO:Declaring metric variables
2023-06-17 13:44:21,638:INFO:Importing untrained model
2023-06-17 13:44:21,638:INFO:Lasso Least Angle Regression Imported successfully
2023-06-17 13:44:21,639:INFO:Starting cross validation
2023-06-17 13:44:21,640:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:21,812:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=2.023e+02, with an active set of 35 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,812:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 44 iterations, i.e. alpha=2.008e+02, with an active set of 36 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,813:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 53 iterations, i.e. alpha=1.305e+02, with an active set of 45 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,815:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 59 iterations, i.e. alpha=1.194e+02, with an active set of 47 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,816:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 70 iterations, alpha=6.754e+01, previous alpha=6.754e+01, with an active set of 51 regressors.
  warnings.warn(

2023-06-17 13:44:21,832:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 42 iterations, i.e. alpha=4.105e+02, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,833:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 47 iterations, i.e. alpha=2.725e+02, with an active set of 37 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,833:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 34 iterations, i.e. alpha=5.809e+02, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,835:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 61 iterations, i.e. alpha=1.421e+02, with an active set of 47 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,837:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=2.297e+02, with an active set of 37 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 53 iterations, alpha=1.884e+02, previous alpha=1.801e+02, with an active set of 42 regressors.
  warnings.warn(

2023-06-17 13:44:21,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 80 iterations, alpha=3.863e+01, previous alpha=3.863e+01, with an active set of 55 regressors.
  warnings.warn(

2023-06-17 13:44:21,841:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 70 iterations, alpha=7.093e+01, previous alpha=6.193e+01, with an active set of 53 regressors.
  warnings.warn(

2023-06-17 13:44:21,842:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 33 iterations, i.e. alpha=4.479e+02, with an active set of 31 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 36 iterations, i.e. alpha=3.984e+02, with an active set of 32 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,844:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 38 iterations, alpha=3.550e+02, previous alpha=3.533e+02, with an active set of 33 regressors.
  warnings.warn(

2023-06-17 13:44:21,901:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 24 iterations, i.e. alpha=7.972e+02, with an active set of 22 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,901:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 26 iterations, i.e. alpha=7.712e+02, with an active set of 22 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,902:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 26 iterations, i.e. alpha=7.704e+02, with an active set of 22 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,903:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 63 iterations, i.e. alpha=1.124e+02, with an active set of 47 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,904:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 64 iterations, i.e. alpha=1.122e+02, with an active set of 48 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,904:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 37 iterations, i.e. alpha=3.856e+02, with an active set of 31 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,905:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 38 iterations, i.e. alpha=3.704e+02, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,908:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 50 iterations, i.e. alpha=2.512e+02, with an active set of 38 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,909:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 83 iterations, i.e. alpha=3.547e+01, with an active set of 57 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,909:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 84 iterations, i.e. alpha=3.507e+01, with an active set of 58 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,910:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 64 iterations, alpha=1.538e+02, previous alpha=1.485e+02, with an active set of 47 regressors.
  warnings.warn(

2023-06-17 13:44:21,911:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 88 iterations, i.e. alpha=2.876e+01, with an active set of 56 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,912:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 91 iterations, alpha=2.511e+01, previous alpha=2.511e+01, with an active set of 56 regressors.
  warnings.warn(

2023-06-17 13:44:21,913:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 52 iterations, i.e. alpha=1.645e+02, with an active set of 42 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,914:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 53 iterations, i.e. alpha=1.626e+02, with an active set of 43 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,918:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 71 iterations, alpha=5.359e+01, previous alpha=5.359e+01, with an active set of 54 regressors.
  warnings.warn(

2023-06-17 13:44:21,993:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 47 iterations, i.e. alpha=2.028e+02, with an active set of 39 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,994:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 50 iterations, i.e. alpha=1.808e+02, with an active set of 42 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,996:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 60 iterations, i.e. alpha=8.744e+01, with an active set of 52 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-17 13:44:21,997:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 62 iterations, alpha=8.181e+01, previous alpha=7.999e+01, with an active set of 53 regressors.
  warnings.warn(

2023-06-17 13:44:23,192:INFO:Calculating mean and std
2023-06-17 13:44:23,193:INFO:Creating metrics dataframe
2023-06-17 13:44:23,418:INFO:Uploading results into container
2023-06-17 13:44:23,419:INFO:Uploading model into container now
2023-06-17 13:44:23,419:INFO:_master_model_container: 6
2023-06-17 13:44:23,419:INFO:_display_container: 2
2023-06-17 13:44:23,419:INFO:LassoLars(random_state=7320)
2023-06-17 13:44:23,419:INFO:create_model() successfully completed......................................
2023-06-17 13:44:23,533:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:23,533:INFO:Creating metrics dataframe
2023-06-17 13:44:23,536:INFO:Initializing Orthogonal Matching Pursuit
2023-06-17 13:44:23,536:INFO:Total runtime is 0.25958464940389 minutes
2023-06-17 13:44:23,536:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:23,536:INFO:Initializing create_model()
2023-06-17 13:44:23,536:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:23,536:INFO:Checking exceptions
2023-06-17 13:44:23,536:INFO:Importing libraries
2023-06-17 13:44:23,536:INFO:Copying training dataset
2023-06-17 13:44:23,539:INFO:Defining folds
2023-06-17 13:44:23,539:INFO:Declaring metric variables
2023-06-17 13:44:23,540:INFO:Importing untrained model
2023-06-17 13:44:23,540:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-17 13:44:23,540:INFO:Starting cross validation
2023-06-17 13:44:23,541:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:25,093:INFO:Calculating mean and std
2023-06-17 13:44:25,094:INFO:Creating metrics dataframe
2023-06-17 13:44:25,321:INFO:Uploading results into container
2023-06-17 13:44:25,321:INFO:Uploading model into container now
2023-06-17 13:44:25,321:INFO:_master_model_container: 7
2023-06-17 13:44:25,321:INFO:_display_container: 2
2023-06-17 13:44:25,322:INFO:OrthogonalMatchingPursuit()
2023-06-17 13:44:25,322:INFO:create_model() successfully completed......................................
2023-06-17 13:44:25,440:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:25,440:INFO:Creating metrics dataframe
2023-06-17 13:44:25,443:INFO:Initializing Bayesian Ridge
2023-06-17 13:44:25,443:INFO:Total runtime is 0.29136796792348224 minutes
2023-06-17 13:44:25,443:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:25,443:INFO:Initializing create_model()
2023-06-17 13:44:25,443:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:25,443:INFO:Checking exceptions
2023-06-17 13:44:25,443:INFO:Importing libraries
2023-06-17 13:44:25,443:INFO:Copying training dataset
2023-06-17 13:44:25,446:INFO:Defining folds
2023-06-17 13:44:25,447:INFO:Declaring metric variables
2023-06-17 13:44:25,447:INFO:Importing untrained model
2023-06-17 13:44:25,447:INFO:Bayesian Ridge Imported successfully
2023-06-17 13:44:25,447:INFO:Starting cross validation
2023-06-17 13:44:25,449:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:27,037:INFO:Calculating mean and std
2023-06-17 13:44:27,038:INFO:Creating metrics dataframe
2023-06-17 13:44:27,269:INFO:Uploading results into container
2023-06-17 13:44:27,270:INFO:Uploading model into container now
2023-06-17 13:44:27,271:INFO:_master_model_container: 8
2023-06-17 13:44:27,271:INFO:_display_container: 2
2023-06-17 13:44:27,271:INFO:BayesianRidge()
2023-06-17 13:44:27,271:INFO:create_model() successfully completed......................................
2023-06-17 13:44:27,385:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:27,386:INFO:Creating metrics dataframe
2023-06-17 13:44:27,389:INFO:Initializing Passive Aggressive Regressor
2023-06-17 13:44:27,389:INFO:Total runtime is 0.32380129893620807 minutes
2023-06-17 13:44:27,389:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:27,389:INFO:Initializing create_model()
2023-06-17 13:44:27,389:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:27,389:INFO:Checking exceptions
2023-06-17 13:44:27,389:INFO:Importing libraries
2023-06-17 13:44:27,389:INFO:Copying training dataset
2023-06-17 13:44:27,392:INFO:Defining folds
2023-06-17 13:44:27,392:INFO:Declaring metric variables
2023-06-17 13:44:27,392:INFO:Importing untrained model
2023-06-17 13:44:27,393:INFO:Passive Aggressive Regressor Imported successfully
2023-06-17 13:44:27,393:INFO:Starting cross validation
2023-06-17 13:44:27,394:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:28,984:INFO:Calculating mean and std
2023-06-17 13:44:28,985:INFO:Creating metrics dataframe
2023-06-17 13:44:29,220:INFO:Uploading results into container
2023-06-17 13:44:29,220:INFO:Uploading model into container now
2023-06-17 13:44:29,221:INFO:_master_model_container: 9
2023-06-17 13:44:29,221:INFO:_display_container: 2
2023-06-17 13:44:29,221:INFO:PassiveAggressiveRegressor(random_state=7320)
2023-06-17 13:44:29,221:INFO:create_model() successfully completed......................................
2023-06-17 13:44:29,335:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:29,335:INFO:Creating metrics dataframe
2023-06-17 13:44:29,338:INFO:Initializing Huber Regressor
2023-06-17 13:44:29,338:INFO:Total runtime is 0.3562846342722575 minutes
2023-06-17 13:44:29,338:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:29,338:INFO:Initializing create_model()
2023-06-17 13:44:29,338:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:29,338:INFO:Checking exceptions
2023-06-17 13:44:29,338:INFO:Importing libraries
2023-06-17 13:44:29,338:INFO:Copying training dataset
2023-06-17 13:44:29,341:INFO:Defining folds
2023-06-17 13:44:29,341:INFO:Declaring metric variables
2023-06-17 13:44:29,342:INFO:Importing untrained model
2023-06-17 13:44:29,342:INFO:Huber Regressor Imported successfully
2023-06-17 13:44:29,342:INFO:Starting cross validation
2023-06-17 13:44:29,343:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:29,553:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,557:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,562:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,566:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,571:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,600:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:29,632:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-17 13:44:30,954:INFO:Calculating mean and std
2023-06-17 13:44:30,955:INFO:Creating metrics dataframe
2023-06-17 13:44:31,195:INFO:Uploading results into container
2023-06-17 13:44:31,195:INFO:Uploading model into container now
2023-06-17 13:44:31,196:INFO:_master_model_container: 10
2023-06-17 13:44:31,196:INFO:_display_container: 2
2023-06-17 13:44:31,196:INFO:HuberRegressor()
2023-06-17 13:44:31,196:INFO:create_model() successfully completed......................................
2023-06-17 13:44:31,310:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:31,310:INFO:Creating metrics dataframe
2023-06-17 13:44:31,313:INFO:Initializing K Neighbors Regressor
2023-06-17 13:44:31,314:INFO:Total runtime is 0.38921796480814613 minutes
2023-06-17 13:44:31,314:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:31,314:INFO:Initializing create_model()
2023-06-17 13:44:31,314:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:31,314:INFO:Checking exceptions
2023-06-17 13:44:31,314:INFO:Importing libraries
2023-06-17 13:44:31,314:INFO:Copying training dataset
2023-06-17 13:44:31,319:INFO:Defining folds
2023-06-17 13:44:31,319:INFO:Declaring metric variables
2023-06-17 13:44:31,319:INFO:Importing untrained model
2023-06-17 13:44:31,319:INFO:K Neighbors Regressor Imported successfully
2023-06-17 13:44:31,319:INFO:Starting cross validation
2023-06-17 13:44:31,321:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:32,997:INFO:Calculating mean and std
2023-06-17 13:44:32,998:INFO:Creating metrics dataframe
2023-06-17 13:44:33,229:INFO:Uploading results into container
2023-06-17 13:44:33,230:INFO:Uploading model into container now
2023-06-17 13:44:33,230:INFO:_master_model_container: 11
2023-06-17 13:44:33,230:INFO:_display_container: 2
2023-06-17 13:44:33,231:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-17 13:44:33,231:INFO:create_model() successfully completed......................................
2023-06-17 13:44:33,344:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:33,344:INFO:Creating metrics dataframe
2023-06-17 13:44:33,347:INFO:Initializing Decision Tree Regressor
2023-06-17 13:44:33,347:INFO:Total runtime is 0.4231012940406799 minutes
2023-06-17 13:44:33,347:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:33,348:INFO:Initializing create_model()
2023-06-17 13:44:33,348:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:33,348:INFO:Checking exceptions
2023-06-17 13:44:33,348:INFO:Importing libraries
2023-06-17 13:44:33,348:INFO:Copying training dataset
2023-06-17 13:44:33,351:INFO:Defining folds
2023-06-17 13:44:33,351:INFO:Declaring metric variables
2023-06-17 13:44:33,351:INFO:Importing untrained model
2023-06-17 13:44:33,351:INFO:Decision Tree Regressor Imported successfully
2023-06-17 13:44:33,351:INFO:Starting cross validation
2023-06-17 13:44:33,353:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:34,955:INFO:Calculating mean and std
2023-06-17 13:44:34,956:INFO:Creating metrics dataframe
2023-06-17 13:44:35,193:INFO:Uploading results into container
2023-06-17 13:44:35,194:INFO:Uploading model into container now
2023-06-17 13:44:35,194:INFO:_master_model_container: 12
2023-06-17 13:44:35,194:INFO:_display_container: 2
2023-06-17 13:44:35,195:INFO:DecisionTreeRegressor(random_state=7320)
2023-06-17 13:44:35,195:INFO:create_model() successfully completed......................................
2023-06-17 13:44:35,308:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:35,308:INFO:Creating metrics dataframe
2023-06-17 13:44:35,311:INFO:Initializing Random Forest Regressor
2023-06-17 13:44:35,311:INFO:Total runtime is 0.45583463112513223 minutes
2023-06-17 13:44:35,311:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:35,311:INFO:Initializing create_model()
2023-06-17 13:44:35,311:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:35,311:INFO:Checking exceptions
2023-06-17 13:44:35,311:INFO:Importing libraries
2023-06-17 13:44:35,311:INFO:Copying training dataset
2023-06-17 13:44:35,314:INFO:Defining folds
2023-06-17 13:44:35,314:INFO:Declaring metric variables
2023-06-17 13:44:35,314:INFO:Importing untrained model
2023-06-17 13:44:35,315:INFO:Random Forest Regressor Imported successfully
2023-06-17 13:44:35,315:INFO:Starting cross validation
2023-06-17 13:44:35,316:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:37,465:INFO:Calculating mean and std
2023-06-17 13:44:37,466:INFO:Creating metrics dataframe
2023-06-17 13:44:37,707:INFO:Uploading results into container
2023-06-17 13:44:37,708:INFO:Uploading model into container now
2023-06-17 13:44:37,708:INFO:_master_model_container: 13
2023-06-17 13:44:37,708:INFO:_display_container: 2
2023-06-17 13:44:37,708:INFO:RandomForestRegressor(n_jobs=-1, random_state=7320)
2023-06-17 13:44:37,708:INFO:create_model() successfully completed......................................
2023-06-17 13:44:37,822:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:37,823:INFO:Creating metrics dataframe
2023-06-17 13:44:37,825:INFO:Initializing Extra Trees Regressor
2023-06-17 13:44:37,825:INFO:Total runtime is 0.49773462216059366 minutes
2023-06-17 13:44:37,826:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:37,826:INFO:Initializing create_model()
2023-06-17 13:44:37,826:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:37,826:INFO:Checking exceptions
2023-06-17 13:44:37,826:INFO:Importing libraries
2023-06-17 13:44:37,826:INFO:Copying training dataset
2023-06-17 13:44:37,829:INFO:Defining folds
2023-06-17 13:44:37,829:INFO:Declaring metric variables
2023-06-17 13:44:37,829:INFO:Importing untrained model
2023-06-17 13:44:37,829:INFO:Extra Trees Regressor Imported successfully
2023-06-17 13:44:37,830:INFO:Starting cross validation
2023-06-17 13:44:37,831:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:40,004:INFO:Calculating mean and std
2023-06-17 13:44:40,005:INFO:Creating metrics dataframe
2023-06-17 13:44:40,262:INFO:Uploading results into container
2023-06-17 13:44:40,262:INFO:Uploading model into container now
2023-06-17 13:44:40,263:INFO:_master_model_container: 14
2023-06-17 13:44:40,263:INFO:_display_container: 2
2023-06-17 13:44:40,263:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=7320)
2023-06-17 13:44:40,263:INFO:create_model() successfully completed......................................
2023-06-17 13:44:40,377:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:40,377:INFO:Creating metrics dataframe
2023-06-17 13:44:40,380:INFO:Initializing AdaBoost Regressor
2023-06-17 13:44:40,380:INFO:Total runtime is 0.54031796058019 minutes
2023-06-17 13:44:40,380:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:40,380:INFO:Initializing create_model()
2023-06-17 13:44:40,380:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:40,380:INFO:Checking exceptions
2023-06-17 13:44:40,380:INFO:Importing libraries
2023-06-17 13:44:40,380:INFO:Copying training dataset
2023-06-17 13:44:40,383:INFO:Defining folds
2023-06-17 13:44:40,383:INFO:Declaring metric variables
2023-06-17 13:44:40,383:INFO:Importing untrained model
2023-06-17 13:44:40,383:INFO:AdaBoost Regressor Imported successfully
2023-06-17 13:44:40,384:INFO:Starting cross validation
2023-06-17 13:44:40,385:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:42,162:INFO:Calculating mean and std
2023-06-17 13:44:42,163:INFO:Creating metrics dataframe
2023-06-17 13:44:42,417:INFO:Uploading results into container
2023-06-17 13:44:42,417:INFO:Uploading model into container now
2023-06-17 13:44:42,418:INFO:_master_model_container: 15
2023-06-17 13:44:42,418:INFO:_display_container: 2
2023-06-17 13:44:42,418:INFO:AdaBoostRegressor(random_state=7320)
2023-06-17 13:44:42,418:INFO:create_model() successfully completed......................................
2023-06-17 13:44:42,531:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:42,531:INFO:Creating metrics dataframe
2023-06-17 13:44:42,534:INFO:Initializing Gradient Boosting Regressor
2023-06-17 13:44:42,534:INFO:Total runtime is 0.5762180050214132 minutes
2023-06-17 13:44:42,535:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:42,535:INFO:Initializing create_model()
2023-06-17 13:44:42,535:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:42,535:INFO:Checking exceptions
2023-06-17 13:44:42,535:INFO:Importing libraries
2023-06-17 13:44:42,535:INFO:Copying training dataset
2023-06-17 13:44:42,538:INFO:Defining folds
2023-06-17 13:44:42,538:INFO:Declaring metric variables
2023-06-17 13:44:42,538:INFO:Importing untrained model
2023-06-17 13:44:42,538:INFO:Gradient Boosting Regressor Imported successfully
2023-06-17 13:44:42,539:INFO:Starting cross validation
2023-06-17 13:44:42,540:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:44,464:INFO:Calculating mean and std
2023-06-17 13:44:44,465:INFO:Creating metrics dataframe
2023-06-17 13:44:44,727:INFO:Uploading results into container
2023-06-17 13:44:44,728:INFO:Uploading model into container now
2023-06-17 13:44:44,728:INFO:_master_model_container: 16
2023-06-17 13:44:44,728:INFO:_display_container: 2
2023-06-17 13:44:44,728:INFO:GradientBoostingRegressor(random_state=7320)
2023-06-17 13:44:44,728:INFO:create_model() successfully completed......................................
2023-06-17 13:44:44,842:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:44,842:INFO:Creating metrics dataframe
2023-06-17 13:44:44,845:INFO:Initializing Extreme Gradient Boosting
2023-06-17 13:44:44,845:INFO:Total runtime is 0.6147346337636312 minutes
2023-06-17 13:44:44,845:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:44,845:INFO:Initializing create_model()
2023-06-17 13:44:44,845:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:44,846:INFO:Checking exceptions
2023-06-17 13:44:44,846:INFO:Importing libraries
2023-06-17 13:44:44,846:INFO:Copying training dataset
2023-06-17 13:44:44,849:INFO:Defining folds
2023-06-17 13:44:44,849:INFO:Declaring metric variables
2023-06-17 13:44:44,849:INFO:Importing untrained model
2023-06-17 13:44:44,849:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 13:44:44,850:INFO:Starting cross validation
2023-06-17 13:44:44,851:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:47,082:INFO:Calculating mean and std
2023-06-17 13:44:47,082:INFO:Creating metrics dataframe
2023-06-17 13:44:47,358:INFO:Uploading results into container
2023-06-17 13:44:47,358:INFO:Uploading model into container now
2023-06-17 13:44:47,358:INFO:_master_model_container: 17
2023-06-17 13:44:47,359:INFO:_display_container: 2
2023-06-17 13:44:47,359:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=7320, ...)
2023-06-17 13:44:47,359:INFO:create_model() successfully completed......................................
2023-06-17 13:44:47,473:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:47,473:INFO:Creating metrics dataframe
2023-06-17 13:44:47,476:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 13:44:47,476:INFO:Total runtime is 0.6585795481999716 minutes
2023-06-17 13:44:47,476:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:47,476:INFO:Initializing create_model()
2023-06-17 13:44:47,476:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:47,476:INFO:Checking exceptions
2023-06-17 13:44:47,476:INFO:Importing libraries
2023-06-17 13:44:47,476:INFO:Copying training dataset
2023-06-17 13:44:47,479:INFO:Defining folds
2023-06-17 13:44:47,480:INFO:Declaring metric variables
2023-06-17 13:44:47,480:INFO:Importing untrained model
2023-06-17 13:44:47,480:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 13:44:47,480:INFO:Starting cross validation
2023-06-17 13:44:47,482:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:49,328:INFO:Calculating mean and std
2023-06-17 13:44:49,329:INFO:Creating metrics dataframe
2023-06-17 13:44:49,546:INFO:Uploading results into container
2023-06-17 13:44:49,546:INFO:Uploading model into container now
2023-06-17 13:44:49,546:INFO:_master_model_container: 18
2023-06-17 13:44:49,546:INFO:_display_container: 2
2023-06-17 13:44:49,547:INFO:LGBMRegressor(random_state=7320)
2023-06-17 13:44:49,547:INFO:create_model() successfully completed......................................
2023-06-17 13:44:49,666:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:49,666:INFO:Creating metrics dataframe
2023-06-17 13:44:49,669:INFO:Initializing Dummy Regressor
2023-06-17 13:44:49,669:INFO:Total runtime is 0.6951295375823975 minutes
2023-06-17 13:44:49,669:INFO:SubProcess create_model() called ==================================
2023-06-17 13:44:49,670:INFO:Initializing create_model()
2023-06-17 13:44:49,670:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x0000027711928A30>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:49,670:INFO:Checking exceptions
2023-06-17 13:44:49,670:INFO:Importing libraries
2023-06-17 13:44:49,670:INFO:Copying training dataset
2023-06-17 13:44:49,673:INFO:Defining folds
2023-06-17 13:44:49,673:INFO:Declaring metric variables
2023-06-17 13:44:49,673:INFO:Importing untrained model
2023-06-17 13:44:49,673:INFO:Dummy Regressor Imported successfully
2023-06-17 13:44:49,673:INFO:Starting cross validation
2023-06-17 13:44:49,675:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 13:44:51,461:INFO:Calculating mean and std
2023-06-17 13:44:51,461:INFO:Creating metrics dataframe
2023-06-17 13:44:51,730:INFO:Uploading results into container
2023-06-17 13:44:51,731:INFO:Uploading model into container now
2023-06-17 13:44:51,731:INFO:_master_model_container: 19
2023-06-17 13:44:51,731:INFO:_display_container: 2
2023-06-17 13:44:51,731:INFO:DummyRegressor()
2023-06-17 13:44:51,731:INFO:create_model() successfully completed......................................
2023-06-17 13:44:51,845:INFO:SubProcess create_model() end ==================================
2023-06-17 13:44:51,845:INFO:Creating metrics dataframe
2023-06-17 13:44:51,849:INFO:Initializing create_model()
2023-06-17 13:44:51,849:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x00000277114EF400>, estimator=GradientBoostingRegressor(random_state=7320), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 13:44:51,849:INFO:Checking exceptions
2023-06-17 13:44:51,850:INFO:Importing libraries
2023-06-17 13:44:51,850:INFO:Copying training dataset
2023-06-17 13:44:51,853:INFO:Defining folds
2023-06-17 13:44:51,853:INFO:Declaring metric variables
2023-06-17 13:44:51,853:INFO:Importing untrained model
2023-06-17 13:44:51,853:INFO:Declaring custom model
2023-06-17 13:44:51,853:INFO:Gradient Boosting Regressor Imported successfully
2023-06-17 13:44:51,855:INFO:Cross validation set to False
2023-06-17 13:44:51,855:INFO:Fitting Model
2023-06-17 13:44:52,250:INFO:GradientBoostingRegressor(random_state=7320)
2023-06-17 13:44:52,250:INFO:create_model() successfully completed......................................
2023-06-17 13:44:52,379:INFO:_master_model_container: 19
2023-06-17 13:44:52,379:INFO:_display_container: 2
2023-06-17 13:44:52,379:INFO:GradientBoostingRegressor(random_state=7320)
2023-06-17 13:44:52,379:INFO:compare_models() successfully completed......................................
2023-06-17 13:44:52,418:INFO:Initializing save_model()
2023-06-17 13:44:52,418:INFO:save_model(model=GradientBoostingRegressor(random_state=7320), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['brand', 'processor_brand',
                                             'processor_name',
                                             'processor_gnrtn', 'ram_gb',
                                             'ram_type', 'ssd', 'hdd', 'os',...
                                             'graphic_card_gb', 'weight',
                                             'warranty', 'rating'],
                                    transformer=OneHotEncoder(cols=['brand',
                                                                    'processor_brand',
                                                                    'processor_name',
                                                                    'processor_gnrtn',
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-17 13:44:52,419:INFO:Adding model into prep_pipe
2023-06-17 13:44:52,436:INFO:best_model.pkl saved in current working directory
2023-06-17 13:44:52,476:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['brand', 'processor_brand',
                                             'processor_name',
                                             'processor_gnrtn', 'ram_gb',
                                             'ram_type', 'ssd', 'hdd', 'os',...
                                    transformer=OneHotEncoder(cols=['brand',
                                                                    'processor_brand',
                                                                    'processor_name',
                                                                    'processor_gnrtn',
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 GradientBoostingRegressor(random_state=7320))])
2023-06-17 13:44:52,477:INFO:save_model() successfully completed......................................
2023-06-18 15:08:56,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-18 15:08:56,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-18 15:08:56,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-18 15:08:56,825:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-18 15:08:58,005:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-18 15:10:00,914:INFO:PyCaret RegressionExperiment
2023-06-18 15:10:00,914:INFO:Logging name: reg-default-name
2023-06-18 15:10:00,914:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-18 15:10:00,914:INFO:version 3.0.2
2023-06-18 15:10:00,915:INFO:Initializing setup()
2023-06-18 15:10:00,915:INFO:self.USI: d052
2023-06-18 15:10:00,915:INFO:self._variable_keys: {'exp_name_log', 'transform_target_param', 'fold_generator', 'y_train', 'USI', 'y_test', 'memory', 'X_train', 'fold_shuffle_param', 'data', 'gpu_param', 'exp_id', '_ml_usecase', 'n_jobs_param', 'X_test', 'log_plots_param', 'y', 'fold_groups_param', '_available_plots', 'target_param', 'seed', 'logging_param', 'html_param', 'gpu_n_jobs_param', 'X', 'pipeline', 'idx'}
2023-06-18 15:10:00,915:INFO:Checking environment
2023-06-18 15:10:00,915:INFO:python_version: 3.9.5
2023-06-18 15:10:00,915:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-18 15:10:00,915:INFO:machine: AMD64
2023-06-18 15:10:00,925:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-18 15:10:00,929:INFO:Memory: svmem(total=17102532608, available=8203517952, percent=52.0, used=8899014656, free=8203517952)
2023-06-18 15:10:00,929:INFO:Physical Core: 8
2023-06-18 15:10:00,929:INFO:Logical Core: 16
2023-06-18 15:10:00,929:INFO:Checking libraries
2023-06-18 15:10:00,929:INFO:System:
2023-06-18 15:10:00,929:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-18 15:10:00,929:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-18 15:10:00,929:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-18 15:10:00,929:INFO:PyCaret required dependencies:
2023-06-18 15:10:00,929:INFO:                 pip: 23.1.2
2023-06-18 15:10:00,929:INFO:          setuptools: 56.0.0
2023-06-18 15:10:00,930:INFO:             pycaret: 3.0.2
2023-06-18 15:10:00,930:INFO:             IPython: 8.14.0
2023-06-18 15:10:00,930:INFO:          ipywidgets: 8.0.6
2023-06-18 15:10:00,930:INFO:                tqdm: 4.65.0
2023-06-18 15:10:00,930:INFO:               numpy: 1.22.3
2023-06-18 15:10:00,930:INFO:              pandas: 1.4.2
2023-06-18 15:10:00,930:INFO:              jinja2: 3.1.2
2023-06-18 15:10:00,930:INFO:               scipy: 1.8.0
2023-06-18 15:10:00,930:INFO:              joblib: 1.2.0
2023-06-18 15:10:00,930:INFO:             sklearn: 1.2.2
2023-06-18 15:10:00,930:INFO:                pyod: 1.0.9
2023-06-18 15:10:00,930:INFO:            imblearn: 0.10.1
2023-06-18 15:10:00,930:INFO:   category_encoders: 2.6.1
2023-06-18 15:10:00,930:INFO:            lightgbm: 3.3.5
2023-06-18 15:10:00,930:INFO:               numba: 0.57.0
2023-06-18 15:10:00,930:INFO:            requests: 2.27.1
2023-06-18 15:10:00,930:INFO:          matplotlib: 3.5.1
2023-06-18 15:10:00,930:INFO:          scikitplot: 0.3.7
2023-06-18 15:10:00,930:INFO:         yellowbrick: 1.5
2023-06-18 15:10:00,930:INFO:              plotly: 5.10.0
2023-06-18 15:10:00,930:INFO:             kaleido: 0.2.1
2023-06-18 15:10:00,930:INFO:         statsmodels: 0.14.0
2023-06-18 15:10:00,930:INFO:              sktime: 0.17.0
2023-06-18 15:10:00,930:INFO:               tbats: 1.1.3
2023-06-18 15:10:00,930:INFO:            pmdarima: 2.0.3
2023-06-18 15:10:00,930:INFO:              psutil: 5.9.5
2023-06-18 15:10:00,930:INFO:PyCaret optional dependencies:
2023-06-18 15:10:00,938:INFO:                shap: Not installed
2023-06-18 15:10:00,938:INFO:           interpret: Not installed
2023-06-18 15:10:00,938:INFO:                umap: Not installed
2023-06-18 15:10:00,938:INFO:    pandas_profiling: 4.2.0
2023-06-18 15:10:00,938:INFO:  explainerdashboard: Not installed
2023-06-18 15:10:00,938:INFO:             autoviz: Not installed
2023-06-18 15:10:00,938:INFO:           fairlearn: Not installed
2023-06-18 15:10:00,938:INFO:             xgboost: 1.7.4
2023-06-18 15:10:00,938:INFO:            catboost: Not installed
2023-06-18 15:10:00,938:INFO:              kmodes: Not installed
2023-06-18 15:10:00,938:INFO:             mlxtend: Not installed
2023-06-18 15:10:00,938:INFO:       statsforecast: Not installed
2023-06-18 15:10:00,938:INFO:        tune_sklearn: Not installed
2023-06-18 15:10:00,938:INFO:                 ray: Not installed
2023-06-18 15:10:00,938:INFO:            hyperopt: Not installed
2023-06-18 15:10:00,938:INFO:              optuna: Not installed
2023-06-18 15:10:00,938:INFO:               skopt: Not installed
2023-06-18 15:10:00,938:INFO:              mlflow: Not installed
2023-06-18 15:10:00,938:INFO:              gradio: Not installed
2023-06-18 15:10:00,938:INFO:             fastapi: Not installed
2023-06-18 15:10:00,938:INFO:             uvicorn: Not installed
2023-06-18 15:10:00,938:INFO:              m2cgen: Not installed
2023-06-18 15:10:00,938:INFO:           evidently: Not installed
2023-06-18 15:10:00,938:INFO:               fugue: Not installed
2023-06-18 15:10:00,938:INFO:           streamlit: 1.23.1
2023-06-18 15:10:00,938:INFO:             prophet: Not installed
2023-06-18 15:10:00,938:INFO:None
2023-06-18 15:10:00,939:INFO:Set up data.
2023-06-18 15:10:00,946:INFO:Set up train/test split.
2023-06-18 15:10:00,952:INFO:Set up index.
2023-06-18 15:10:00,952:INFO:Set up folding strategy.
2023-06-18 15:10:00,952:INFO:Assigning column types.
2023-06-18 15:10:00,955:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-18 15:10:00,955:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-18 15:10:00,960:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-18 15:10:00,965:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,024:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,069:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,070:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:01,216:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:01,216:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,221:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,225:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,280:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,324:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,324:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:01,327:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:01,327:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-18 15:10:01,331:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,336:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,392:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,436:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,436:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:01,439:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:01,444:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,449:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,505:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,550:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,551:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:01,553:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:01,553:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-18 15:10:01,563:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,621:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,671:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,672:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:01,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:01,685:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,745:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,789:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,789:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:01,792:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:01,793:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-18 15:10:01,860:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,906:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-18 15:10:01,906:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:01,909:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:01,975:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:02,018:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-18 15:10:02,019:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:02,022:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:02,022:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-18 15:10:02,089:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:02,134:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:02,137:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:02,205:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-18 15:10:02,252:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:02,254:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:02,255:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-18 15:10:02,364:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:02,366:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:02,476:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:02,478:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:02,488:INFO:Preparing preprocessing pipeline...
2023-06-18 15:10:02,488:INFO:Set up simple imputation.
2023-06-18 15:10:02,495:INFO:Set up encoding of ordinal features.
2023-06-18 15:10:02,498:INFO:Set up encoding of categorical features.
2023-06-18 15:10:02,498:INFO:Set up column name cleaning.
2023-06-18 15:10:02,690:INFO:Finished creating preprocessing pipeline.
2023-06-18 15:10:02,731:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['brand', 'processor_brand',
                                             'processor_name',
                                             'processor_gnrtn', 'ram_gb',
                                             'ram_type', 'ssd', 'hdd', 'os',...
                                             'graphic_card_gb', 'weight',
                                             'warranty', 'rating'],
                                    transformer=OneHotEncoder(cols=['brand',
                                                                    'processor_brand',
                                                                    'processor_name',
                                                                    'processor_gnrtn',
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))])
2023-06-18 15:10:02,731:INFO:Creating final display dataframe.
2023-06-18 15:10:03,120:INFO:Setup _display_container:                     Description             Value
0                    Session id              2599
1                        Target             Price
2                   Target type        Regression
3           Original data shape         (823, 19)
4        Transformed data shape         (823, 75)
5   Transformed train set shape         (576, 75)
6    Transformed test set shape         (247, 75)
7              Ordinal features                 3
8              Numeric features                 2
9          Categorical features                16
10                   Preprocess              True
11              Imputation type            simple
12           Numeric imputation              mean
13       Categorical imputation              mode
14     Maximum one-hot encoding                25
15              Encoding method              None
16               Fold Generator             KFold
17                  Fold Number                10
18                     CPU Jobs                -1
19                      Use GPU             False
20               Log Experiment             False
21              Experiment Name  reg-default-name
22                          USI              d052
2023-06-18 15:10:03,239:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:03,242:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:03,350:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-18 15:10:03,353:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-18 15:10:03,353:INFO:setup() successfully completed in 2.68s...............
2023-06-18 15:10:03,357:INFO:Initializing compare_models()
2023-06-18 15:10:03,357:INFO:compare_models(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, include=None, fold=None, round=4, cross_validation=True, sort=R2, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'R2', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.regression.oop.RegressionExperiment'>}, exclude=None)
2023-06-18 15:10:03,357:INFO:Checking exceptions
2023-06-18 15:10:03,359:INFO:Preparing display monitor
2023-06-18 15:10:03,361:INFO:Initializing Linear Regression
2023-06-18 15:10:03,361:INFO:Total runtime is 0.0 minutes
2023-06-18 15:10:03,361:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:03,362:INFO:Initializing create_model()
2023-06-18 15:10:03,362:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=lr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:03,362:INFO:Checking exceptions
2023-06-18 15:10:03,362:INFO:Importing libraries
2023-06-18 15:10:03,362:INFO:Copying training dataset
2023-06-18 15:10:03,366:INFO:Defining folds
2023-06-18 15:10:03,366:INFO:Declaring metric variables
2023-06-18 15:10:03,366:INFO:Importing untrained model
2023-06-18 15:10:03,366:INFO:Linear Regression Imported successfully
2023-06-18 15:10:03,366:INFO:Starting cross validation
2023-06-18 15:10:03,374:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:08,375:INFO:Calculating mean and std
2023-06-18 15:10:08,376:INFO:Creating metrics dataframe
2023-06-18 15:10:08,644:INFO:Uploading results into container
2023-06-18 15:10:08,644:INFO:Uploading model into container now
2023-06-18 15:10:08,645:INFO:_master_model_container: 1
2023-06-18 15:10:08,645:INFO:_display_container: 2
2023-06-18 15:10:08,645:INFO:LinearRegression(n_jobs=-1)
2023-06-18 15:10:08,645:INFO:create_model() successfully completed......................................
2023-06-18 15:10:08,762:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:08,762:INFO:Creating metrics dataframe
2023-06-18 15:10:08,765:INFO:Initializing Lasso Regression
2023-06-18 15:10:08,765:INFO:Total runtime is 0.09006741841634115 minutes
2023-06-18 15:10:08,765:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:08,765:INFO:Initializing create_model()
2023-06-18 15:10:08,765:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=lasso, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:08,765:INFO:Checking exceptions
2023-06-18 15:10:08,765:INFO:Importing libraries
2023-06-18 15:10:08,765:INFO:Copying training dataset
2023-06-18 15:10:08,768:INFO:Defining folds
2023-06-18 15:10:08,768:INFO:Declaring metric variables
2023-06-18 15:10:08,768:INFO:Importing untrained model
2023-06-18 15:10:08,769:INFO:Lasso Regression Imported successfully
2023-06-18 15:10:08,769:INFO:Starting cross validation
2023-06-18 15:10:08,771:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:09,072:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.832e+10, tolerance: 9.269e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:09,072:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 3.459e+10, tolerance: 9.241e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:09,076:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.615e+09, tolerance: 1.001e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:09,199:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 6.665e+10, tolerance: 9.924e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:11,012:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.947e+10, tolerance: 9.751e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:11,013:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.158e+10, tolerance: 9.467e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:11,013:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.672e+10, tolerance: 9.601e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:11,017:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.954e+09, tolerance: 1.019e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:11,031:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.482e+09, tolerance: 9.883e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:11,033:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.433e+10, tolerance: 1.001e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:11,945:INFO:Calculating mean and std
2023-06-18 15:10:11,945:INFO:Creating metrics dataframe
2023-06-18 15:10:12,218:INFO:Uploading results into container
2023-06-18 15:10:12,219:INFO:Uploading model into container now
2023-06-18 15:10:12,219:INFO:_master_model_container: 2
2023-06-18 15:10:12,219:INFO:_display_container: 2
2023-06-18 15:10:12,220:INFO:Lasso(random_state=2599)
2023-06-18 15:10:12,220:INFO:create_model() successfully completed......................................
2023-06-18 15:10:12,337:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:12,337:INFO:Creating metrics dataframe
2023-06-18 15:10:12,340:INFO:Initializing Ridge Regression
2023-06-18 15:10:12,340:INFO:Total runtime is 0.14965075651804607 minutes
2023-06-18 15:10:12,340:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:12,340:INFO:Initializing create_model()
2023-06-18 15:10:12,340:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=ridge, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:12,340:INFO:Checking exceptions
2023-06-18 15:10:12,340:INFO:Importing libraries
2023-06-18 15:10:12,340:INFO:Copying training dataset
2023-06-18 15:10:12,344:INFO:Defining folds
2023-06-18 15:10:12,344:INFO:Declaring metric variables
2023-06-18 15:10:12,344:INFO:Importing untrained model
2023-06-18 15:10:12,344:INFO:Ridge Regression Imported successfully
2023-06-18 15:10:12,344:INFO:Starting cross validation
2023-06-18 15:10:12,346:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:14,168:INFO:Calculating mean and std
2023-06-18 15:10:14,169:INFO:Creating metrics dataframe
2023-06-18 15:10:14,442:INFO:Uploading results into container
2023-06-18 15:10:14,443:INFO:Uploading model into container now
2023-06-18 15:10:14,444:INFO:_master_model_container: 3
2023-06-18 15:10:14,444:INFO:_display_container: 2
2023-06-18 15:10:14,444:INFO:Ridge(random_state=2599)
2023-06-18 15:10:14,444:INFO:create_model() successfully completed......................................
2023-06-18 15:10:14,558:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:14,559:INFO:Creating metrics dataframe
2023-06-18 15:10:14,562:INFO:Initializing Elastic Net
2023-06-18 15:10:14,562:INFO:Total runtime is 0.1866840918858846 minutes
2023-06-18 15:10:14,562:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:14,562:INFO:Initializing create_model()
2023-06-18 15:10:14,562:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=en, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:14,562:INFO:Checking exceptions
2023-06-18 15:10:14,562:INFO:Importing libraries
2023-06-18 15:10:14,562:INFO:Copying training dataset
2023-06-18 15:10:14,565:INFO:Defining folds
2023-06-18 15:10:14,565:INFO:Declaring metric variables
2023-06-18 15:10:14,565:INFO:Importing untrained model
2023-06-18 15:10:14,566:INFO:Elastic Net Imported successfully
2023-06-18 15:10:14,566:INFO:Starting cross validation
2023-06-18 15:10:14,567:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:14,773:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.639e+08, tolerance: 1.001e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:14,775:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.017e+09, tolerance: 9.467e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:14,775:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.846e+08, tolerance: 9.751e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:14,780:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.420e+08, tolerance: 1.019e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:14,822:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 1.091e+09, tolerance: 9.601e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:14,823:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 7.193e+09, tolerance: 9.269e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:14,823:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 8.547e+08, tolerance: 9.883e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:14,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 2.969e+10, tolerance: 9.241e+07
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:14,840:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_coordinate_descent.py:631: ConvergenceWarning: Objective did not converge. You might want to increase the number of iterations, check the scale of the features or consider increasing regularisation. Duality gap: 5.605e+08, tolerance: 1.001e+08
  model = cd_fast.enet_coordinate_descent(

2023-06-18 15:10:16,417:INFO:Calculating mean and std
2023-06-18 15:10:16,418:INFO:Creating metrics dataframe
2023-06-18 15:10:16,693:INFO:Uploading results into container
2023-06-18 15:10:16,694:INFO:Uploading model into container now
2023-06-18 15:10:16,694:INFO:_master_model_container: 4
2023-06-18 15:10:16,694:INFO:_display_container: 2
2023-06-18 15:10:16,694:INFO:ElasticNet(random_state=2599)
2023-06-18 15:10:16,694:INFO:create_model() successfully completed......................................
2023-06-18 15:10:16,810:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:16,810:INFO:Creating metrics dataframe
2023-06-18 15:10:16,814:INFO:Initializing Least Angle Regression
2023-06-18 15:10:16,814:INFO:Total runtime is 0.2242175857226054 minutes
2023-06-18 15:10:16,814:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:16,815:INFO:Initializing create_model()
2023-06-18 15:10:16,815:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=lar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:16,815:INFO:Checking exceptions
2023-06-18 15:10:16,815:INFO:Importing libraries
2023-06-18 15:10:16,815:INFO:Copying training dataset
2023-06-18 15:10:16,818:INFO:Defining folds
2023-06-18 15:10:16,818:INFO:Declaring metric variables
2023-06-18 15:10:16,818:INFO:Importing untrained model
2023-06-18 15:10:16,819:INFO:Least Angle Regression Imported successfully
2023-06-18 15:10:16,819:INFO:Starting cross validation
2023-06-18 15:10:16,821:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:17,022:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 59 iterations, i.e. alpha=2.415e+03, with an active set of 47 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,025:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 60 iterations, i.e. alpha=7.276e+02, with an active set of 49 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,026:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 63 iterations, i.e. alpha=6.692e+02, with an active set of 52 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,028:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=5.733e+02, with an active set of 28 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,029:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 74 iterations, i.e. alpha=6.672e+02, with an active set of 60 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,031:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 98 iterations, i.e. alpha=4.166e+04, with an active set of 72 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,032:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 98 iterations, i.e. alpha=1.965e+04, with an active set of 72 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,032:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 53 iterations, i.e. alpha=3.844e+02, with an active set of 44 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,033:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 88 iterations, i.e. alpha=8.579e+04, with an active set of 64 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,034:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 96 iterations, i.e. alpha=2.504e+05, with an active set of 71 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,034:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 98 iterations, i.e. alpha=2.564e+05, with an active set of 72 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,035:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 98 iterations, i.e. alpha=2.322e+05, with an active set of 72 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,040:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 92 iterations, i.e. alpha=1.118e+04, with an active set of 71 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,040:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 92 iterations, i.e. alpha=2.260e+03, with an active set of 71 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=5.953e+02, with an active set of 37 regressors, and the smallest cholesky pivot element being 9.483e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 47 iterations, i.e. alpha=6.125e+02, with an active set of 38 regressors, and the smallest cholesky pivot element being 9.483e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,044:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 54 iterations, i.e. alpha=3.999e+02, with an active set of 45 regressors, and the smallest cholesky pivot element being 9.483e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,044:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 58 iterations, i.e. alpha=3.135e+02, with an active set of 49 regressors, and the smallest cholesky pivot element being 9.365e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,059:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 85 iterations, i.e. alpha=4.365e+04, with an active set of 58 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,063:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 105 iterations, i.e. alpha=9.936e+04, with an active set of 70 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,063:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 105 iterations, i.e. alpha=6.327e+04, with an active set of 70 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,064:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 106 iterations, i.e. alpha=3.699e+04, with an active set of 71 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,064:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 106 iterations, i.e. alpha=2.432e+04, with an active set of 71 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,064:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 106 iterations, i.e. alpha=8.491e+02, with an active set of 71 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,073:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 66 iterations, i.e. alpha=1.786e+02, with an active set of 57 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,078:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 92 iterations, i.e. alpha=2.063e+03, with an active set of 72 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,079:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 92 iterations, i.e. alpha=1.880e+03, with an active set of 72 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,079:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 100 iterations, i.e. alpha=3.363e+09, with an active set of 73 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,104:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 88 iterations, i.e. alpha=2.632e+03, with an active set of 70 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,104:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 88 iterations, i.e. alpha=9.917e+02, with an active set of 70 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:17,105:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 90 iterations, i.e. alpha=5.918e+02, with an active set of 72 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:18,715:INFO:Calculating mean and std
2023-06-18 15:10:18,716:INFO:Creating metrics dataframe
2023-06-18 15:10:18,992:INFO:Uploading results into container
2023-06-18 15:10:18,993:INFO:Uploading model into container now
2023-06-18 15:10:18,993:INFO:_master_model_container: 5
2023-06-18 15:10:18,993:INFO:_display_container: 2
2023-06-18 15:10:18,993:INFO:Lars(random_state=2599)
2023-06-18 15:10:18,993:INFO:create_model() successfully completed......................................
2023-06-18 15:10:19,113:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:19,113:INFO:Creating metrics dataframe
2023-06-18 15:10:19,116:INFO:Initializing Lasso Least Angle Regression
2023-06-18 15:10:19,116:INFO:Total runtime is 0.26257675886154175 minutes
2023-06-18 15:10:19,116:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:19,116:INFO:Initializing create_model()
2023-06-18 15:10:19,116:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=llar, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:19,116:INFO:Checking exceptions
2023-06-18 15:10:19,116:INFO:Importing libraries
2023-06-18 15:10:19,116:INFO:Copying training dataset
2023-06-18 15:10:19,120:INFO:Defining folds
2023-06-18 15:10:19,120:INFO:Declaring metric variables
2023-06-18 15:10:19,120:INFO:Importing untrained model
2023-06-18 15:10:19,120:INFO:Lasso Least Angle Regression Imported successfully
2023-06-18 15:10:19,120:INFO:Starting cross validation
2023-06-18 15:10:19,122:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:19,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=5.441e+02, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 29 iterations, i.e. alpha=4.887e+02, with an active set of 25 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,330:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=2.315e+02, with an active set of 33 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,331:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 49 iterations, i.e. alpha=1.581e+02, with an active set of 39 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,331:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 56 iterations, i.e. alpha=7.364e+01, with an active set of 46 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 57 iterations, alpha=8.163e+01, previous alpha=6.875e+01, with an active set of 46 regressors.
  warnings.warn(

2023-06-18 15:10:19,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 57 iterations, i.e. alpha=1.083e+02, with an active set of 43 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 25 iterations, i.e. alpha=8.384e+02, with an active set of 21 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 71 iterations, i.e. alpha=2.564e+01, with an active set of 51 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 82 iterations, i.e. alpha=4.263e+01, with an active set of 54 regressors, and the smallest cholesky pivot element being 4.215e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 82 iterations, i.e. alpha=4.263e+01, with an active set of 54 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 90 iterations, alpha=3.465e+01, previous alpha=3.449e+01, with an active set of 55 regressors.
  warnings.warn(

2023-06-18 15:10:19,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 85 iterations, i.e. alpha=1.282e+01, with an active set of 57 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,344:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 88 iterations, alpha=1.140e+01, previous alpha=1.140e+01, with an active set of 57 regressors.
  warnings.warn(

2023-06-18 15:10:19,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 71 iterations, alpha=8.786e+01, previous alpha=8.786e+01, with an active set of 48 regressors.
  warnings.warn(

2023-06-18 15:10:19,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 30 iterations, i.e. alpha=5.130e+02, with an active set of 24 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 40 iterations, i.e. alpha=3.547e+02, with an active set of 32 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 43 iterations, i.e. alpha=2.005e+02, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 44 iterations, i.e. alpha=2.635e+02, with an active set of 34 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 45 iterations, alpha=1.974e+02, previous alpha=1.944e+02, with an active set of 36 regressors.
  warnings.warn(

2023-06-18 15:10:19,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 45 iterations, alpha=2.632e+02, previous alpha=2.252e+02, with an active set of 34 regressors.
  warnings.warn(

2023-06-18 15:10:19,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=5.336e+02, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=2.199e+02, with an active set of 35 regressors, and the smallest cholesky pivot element being 8.429e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,372:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 22 iterations, i.e. alpha=8.063e+02, with an active set of 20 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 73 iterations, i.e. alpha=3.691e+01, with an active set of 53 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,375:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 32 iterations, i.e. alpha=5.298e+02, with an active set of 26 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 77 iterations, alpha=2.998e+01, previous alpha=2.998e+01, with an active set of 56 regressors.
  warnings.warn(

2023-06-18 15:10:19,378:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 45 iterations, i.e. alpha=2.143e+02, with an active set of 35 regressors, and the smallest cholesky pivot element being 2.220e-16. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:648: ConvergenceWarning: Regressors in active set degenerate. Dropping a regressor, after 69 iterations, i.e. alpha=8.949e+01, with an active set of 47 regressors, and the smallest cholesky pivot element being 5.960e-08. Reduce max_iter or increase eps parameters.
  warnings.warn(

2023-06-18 15:10:19,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 52 iterations, alpha=1.561e+02, previous alpha=1.523e+02, with an active set of 41 regressors.
  warnings.warn(

2023-06-18 15:10:19,382:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_least_angle.py:678: ConvergenceWarning: Early stopping the lars path, as the residues are small and the current value of alpha is no longer well controlled. 74 iterations, alpha=8.245e+01, previous alpha=7.632e+01, with an active set of 47 regressors.
  warnings.warn(

2023-06-18 15:10:21,042:INFO:Calculating mean and std
2023-06-18 15:10:21,043:INFO:Creating metrics dataframe
2023-06-18 15:10:21,323:INFO:Uploading results into container
2023-06-18 15:10:21,324:INFO:Uploading model into container now
2023-06-18 15:10:21,324:INFO:_master_model_container: 6
2023-06-18 15:10:21,324:INFO:_display_container: 2
2023-06-18 15:10:21,324:INFO:LassoLars(random_state=2599)
2023-06-18 15:10:21,324:INFO:create_model() successfully completed......................................
2023-06-18 15:10:21,443:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:21,443:INFO:Creating metrics dataframe
2023-06-18 15:10:21,446:INFO:Initializing Orthogonal Matching Pursuit
2023-06-18 15:10:21,446:INFO:Total runtime is 0.30141006310780843 minutes
2023-06-18 15:10:21,446:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:21,446:INFO:Initializing create_model()
2023-06-18 15:10:21,446:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=omp, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:21,446:INFO:Checking exceptions
2023-06-18 15:10:21,446:INFO:Importing libraries
2023-06-18 15:10:21,446:INFO:Copying training dataset
2023-06-18 15:10:21,449:INFO:Defining folds
2023-06-18 15:10:21,449:INFO:Declaring metric variables
2023-06-18 15:10:21,450:INFO:Importing untrained model
2023-06-18 15:10:21,450:INFO:Orthogonal Matching Pursuit Imported successfully
2023-06-18 15:10:21,450:INFO:Starting cross validation
2023-06-18 15:10:21,452:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:23,356:INFO:Calculating mean and std
2023-06-18 15:10:23,357:INFO:Creating metrics dataframe
2023-06-18 15:10:23,639:INFO:Uploading results into container
2023-06-18 15:10:23,640:INFO:Uploading model into container now
2023-06-18 15:10:23,640:INFO:_master_model_container: 7
2023-06-18 15:10:23,640:INFO:_display_container: 2
2023-06-18 15:10:23,640:INFO:OrthogonalMatchingPursuit()
2023-06-18 15:10:23,640:INFO:create_model() successfully completed......................................
2023-06-18 15:10:23,769:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:23,770:INFO:Creating metrics dataframe
2023-06-18 15:10:23,773:INFO:Initializing Bayesian Ridge
2023-06-18 15:10:23,773:INFO:Total runtime is 0.34019339084625244 minutes
2023-06-18 15:10:23,773:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:23,773:INFO:Initializing create_model()
2023-06-18 15:10:23,773:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=br, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:23,773:INFO:Checking exceptions
2023-06-18 15:10:23,773:INFO:Importing libraries
2023-06-18 15:10:23,773:INFO:Copying training dataset
2023-06-18 15:10:23,777:INFO:Defining folds
2023-06-18 15:10:23,778:INFO:Declaring metric variables
2023-06-18 15:10:23,778:INFO:Importing untrained model
2023-06-18 15:10:23,778:INFO:Bayesian Ridge Imported successfully
2023-06-18 15:10:23,778:INFO:Starting cross validation
2023-06-18 15:10:23,780:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:25,752:INFO:Calculating mean and std
2023-06-18 15:10:25,753:INFO:Creating metrics dataframe
2023-06-18 15:10:26,036:INFO:Uploading results into container
2023-06-18 15:10:26,036:INFO:Uploading model into container now
2023-06-18 15:10:26,037:INFO:_master_model_container: 8
2023-06-18 15:10:26,037:INFO:_display_container: 2
2023-06-18 15:10:26,037:INFO:BayesianRidge()
2023-06-18 15:10:26,037:INFO:create_model() successfully completed......................................
2023-06-18 15:10:26,155:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:26,155:INFO:Creating metrics dataframe
2023-06-18 15:10:26,158:INFO:Initializing Passive Aggressive Regressor
2023-06-18 15:10:26,158:INFO:Total runtime is 0.37994342247645063 minutes
2023-06-18 15:10:26,158:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:26,158:INFO:Initializing create_model()
2023-06-18 15:10:26,158:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=par, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:26,158:INFO:Checking exceptions
2023-06-18 15:10:26,158:INFO:Importing libraries
2023-06-18 15:10:26,158:INFO:Copying training dataset
2023-06-18 15:10:26,161:INFO:Defining folds
2023-06-18 15:10:26,161:INFO:Declaring metric variables
2023-06-18 15:10:26,161:INFO:Importing untrained model
2023-06-18 15:10:26,162:INFO:Passive Aggressive Regressor Imported successfully
2023-06-18 15:10:26,162:INFO:Starting cross validation
2023-06-18 15:10:26,164:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:28,066:INFO:Calculating mean and std
2023-06-18 15:10:28,067:INFO:Creating metrics dataframe
2023-06-18 15:10:28,345:INFO:Uploading results into container
2023-06-18 15:10:28,346:INFO:Uploading model into container now
2023-06-18 15:10:28,346:INFO:_master_model_container: 9
2023-06-18 15:10:28,346:INFO:_display_container: 2
2023-06-18 15:10:28,347:INFO:PassiveAggressiveRegressor(random_state=2599)
2023-06-18 15:10:28,347:INFO:create_model() successfully completed......................................
2023-06-18 15:10:28,465:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:28,465:INFO:Creating metrics dataframe
2023-06-18 15:10:28,468:INFO:Initializing Huber Regressor
2023-06-18 15:10:28,468:INFO:Total runtime is 0.4184562563896179 minutes
2023-06-18 15:10:28,468:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:28,468:INFO:Initializing create_model()
2023-06-18 15:10:28,468:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=huber, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:28,468:INFO:Checking exceptions
2023-06-18 15:10:28,468:INFO:Importing libraries
2023-06-18 15:10:28,468:INFO:Copying training dataset
2023-06-18 15:10:28,471:INFO:Defining folds
2023-06-18 15:10:28,472:INFO:Declaring metric variables
2023-06-18 15:10:28,472:INFO:Importing untrained model
2023-06-18 15:10:28,472:INFO:Huber Regressor Imported successfully
2023-06-18 15:10:28,472:INFO:Starting cross validation
2023-06-18 15:10:28,474:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:28,691:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,704:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,715:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,718:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,719:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,726:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,735:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:28,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_huber.py:342: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
  self.n_iter_ = _check_optimize_result("lbfgs", opt_res, self.max_iter)

2023-06-18 15:10:30,399:INFO:Calculating mean and std
2023-06-18 15:10:30,400:INFO:Creating metrics dataframe
2023-06-18 15:10:30,682:INFO:Uploading results into container
2023-06-18 15:10:30,683:INFO:Uploading model into container now
2023-06-18 15:10:30,683:INFO:_master_model_container: 10
2023-06-18 15:10:30,683:INFO:_display_container: 2
2023-06-18 15:10:30,684:INFO:HuberRegressor()
2023-06-18 15:10:30,684:INFO:create_model() successfully completed......................................
2023-06-18 15:10:30,801:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:30,801:INFO:Creating metrics dataframe
2023-06-18 15:10:30,805:INFO:Initializing K Neighbors Regressor
2023-06-18 15:10:30,805:INFO:Total runtime is 0.4574083964029948 minutes
2023-06-18 15:10:30,805:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:30,805:INFO:Initializing create_model()
2023-06-18 15:10:30,805:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=knn, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:30,805:INFO:Checking exceptions
2023-06-18 15:10:30,805:INFO:Importing libraries
2023-06-18 15:10:30,805:INFO:Copying training dataset
2023-06-18 15:10:30,809:INFO:Defining folds
2023-06-18 15:10:30,809:INFO:Declaring metric variables
2023-06-18 15:10:30,810:INFO:Importing untrained model
2023-06-18 15:10:30,810:INFO:K Neighbors Regressor Imported successfully
2023-06-18 15:10:30,810:INFO:Starting cross validation
2023-06-18 15:10:30,812:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:32,810:INFO:Calculating mean and std
2023-06-18 15:10:32,810:INFO:Creating metrics dataframe
2023-06-18 15:10:33,097:INFO:Uploading results into container
2023-06-18 15:10:33,097:INFO:Uploading model into container now
2023-06-18 15:10:33,098:INFO:_master_model_container: 11
2023-06-18 15:10:33,098:INFO:_display_container: 2
2023-06-18 15:10:33,098:INFO:KNeighborsRegressor(n_jobs=-1)
2023-06-18 15:10:33,098:INFO:create_model() successfully completed......................................
2023-06-18 15:10:33,216:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:33,216:INFO:Creating metrics dataframe
2023-06-18 15:10:33,219:INFO:Initializing Decision Tree Regressor
2023-06-18 15:10:33,219:INFO:Total runtime is 0.49764100313186643 minutes
2023-06-18 15:10:33,219:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:33,219:INFO:Initializing create_model()
2023-06-18 15:10:33,219:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=dt, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:33,219:INFO:Checking exceptions
2023-06-18 15:10:33,219:INFO:Importing libraries
2023-06-18 15:10:33,220:INFO:Copying training dataset
2023-06-18 15:10:33,223:INFO:Defining folds
2023-06-18 15:10:33,223:INFO:Declaring metric variables
2023-06-18 15:10:33,223:INFO:Importing untrained model
2023-06-18 15:10:33,223:INFO:Decision Tree Regressor Imported successfully
2023-06-18 15:10:33,223:INFO:Starting cross validation
2023-06-18 15:10:33,225:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:35,144:INFO:Calculating mean and std
2023-06-18 15:10:35,145:INFO:Creating metrics dataframe
2023-06-18 15:10:35,432:INFO:Uploading results into container
2023-06-18 15:10:35,433:INFO:Uploading model into container now
2023-06-18 15:10:35,433:INFO:_master_model_container: 12
2023-06-18 15:10:35,433:INFO:_display_container: 2
2023-06-18 15:10:35,434:INFO:DecisionTreeRegressor(random_state=2599)
2023-06-18 15:10:35,434:INFO:create_model() successfully completed......................................
2023-06-18 15:10:35,552:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:35,552:INFO:Creating metrics dataframe
2023-06-18 15:10:35,555:INFO:Initializing Random Forest Regressor
2023-06-18 15:10:35,555:INFO:Total runtime is 0.5365745147069295 minutes
2023-06-18 15:10:35,555:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:35,555:INFO:Initializing create_model()
2023-06-18 15:10:35,555:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=rf, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:35,555:INFO:Checking exceptions
2023-06-18 15:10:35,555:INFO:Importing libraries
2023-06-18 15:10:35,555:INFO:Copying training dataset
2023-06-18 15:10:35,559:INFO:Defining folds
2023-06-18 15:10:35,559:INFO:Declaring metric variables
2023-06-18 15:10:35,559:INFO:Importing untrained model
2023-06-18 15:10:35,559:INFO:Random Forest Regressor Imported successfully
2023-06-18 15:10:35,559:INFO:Starting cross validation
2023-06-18 15:10:35,561:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:38,036:INFO:Calculating mean and std
2023-06-18 15:10:38,037:INFO:Creating metrics dataframe
2023-06-18 15:10:38,331:INFO:Uploading results into container
2023-06-18 15:10:38,332:INFO:Uploading model into container now
2023-06-18 15:10:38,332:INFO:_master_model_container: 13
2023-06-18 15:10:38,332:INFO:_display_container: 2
2023-06-18 15:10:38,332:INFO:RandomForestRegressor(n_jobs=-1, random_state=2599)
2023-06-18 15:10:38,332:INFO:create_model() successfully completed......................................
2023-06-18 15:10:38,450:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:38,450:INFO:Creating metrics dataframe
2023-06-18 15:10:38,453:INFO:Initializing Extra Trees Regressor
2023-06-18 15:10:38,453:INFO:Total runtime is 0.5848729173342386 minutes
2023-06-18 15:10:38,453:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:38,454:INFO:Initializing create_model()
2023-06-18 15:10:38,454:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=et, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:38,454:INFO:Checking exceptions
2023-06-18 15:10:38,454:INFO:Importing libraries
2023-06-18 15:10:38,454:INFO:Copying training dataset
2023-06-18 15:10:38,457:INFO:Defining folds
2023-06-18 15:10:38,457:INFO:Declaring metric variables
2023-06-18 15:10:38,457:INFO:Importing untrained model
2023-06-18 15:10:38,457:INFO:Extra Trees Regressor Imported successfully
2023-06-18 15:10:38,458:INFO:Starting cross validation
2023-06-18 15:10:38,459:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:40,950:INFO:Calculating mean and std
2023-06-18 15:10:40,951:INFO:Creating metrics dataframe
2023-06-18 15:10:41,250:INFO:Uploading results into container
2023-06-18 15:10:41,251:INFO:Uploading model into container now
2023-06-18 15:10:41,251:INFO:_master_model_container: 14
2023-06-18 15:10:41,251:INFO:_display_container: 2
2023-06-18 15:10:41,251:INFO:ExtraTreesRegressor(n_jobs=-1, random_state=2599)
2023-06-18 15:10:41,251:INFO:create_model() successfully completed......................................
2023-06-18 15:10:41,367:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:41,368:INFO:Creating metrics dataframe
2023-06-18 15:10:41,370:INFO:Initializing AdaBoost Regressor
2023-06-18 15:10:41,371:INFO:Total runtime is 0.6335012276967366 minutes
2023-06-18 15:10:41,371:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:41,371:INFO:Initializing create_model()
2023-06-18 15:10:41,371:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=ada, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:41,371:INFO:Checking exceptions
2023-06-18 15:10:41,371:INFO:Importing libraries
2023-06-18 15:10:41,371:INFO:Copying training dataset
2023-06-18 15:10:41,374:INFO:Defining folds
2023-06-18 15:10:41,374:INFO:Declaring metric variables
2023-06-18 15:10:41,374:INFO:Importing untrained model
2023-06-18 15:10:41,374:INFO:AdaBoost Regressor Imported successfully
2023-06-18 15:10:41,375:INFO:Starting cross validation
2023-06-18 15:10:41,376:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:43,633:INFO:Calculating mean and std
2023-06-18 15:10:43,633:INFO:Creating metrics dataframe
2023-06-18 15:10:43,938:INFO:Uploading results into container
2023-06-18 15:10:43,939:INFO:Uploading model into container now
2023-06-18 15:10:43,939:INFO:_master_model_container: 15
2023-06-18 15:10:43,939:INFO:_display_container: 2
2023-06-18 15:10:43,939:INFO:AdaBoostRegressor(random_state=2599)
2023-06-18 15:10:43,939:INFO:create_model() successfully completed......................................
2023-06-18 15:10:44,057:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:44,057:INFO:Creating metrics dataframe
2023-06-18 15:10:44,060:INFO:Initializing Gradient Boosting Regressor
2023-06-18 15:10:44,060:INFO:Total runtime is 0.6783179402351378 minutes
2023-06-18 15:10:44,060:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:44,061:INFO:Initializing create_model()
2023-06-18 15:10:44,061:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=gbr, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:44,061:INFO:Checking exceptions
2023-06-18 15:10:44,061:INFO:Importing libraries
2023-06-18 15:10:44,061:INFO:Copying training dataset
2023-06-18 15:10:44,064:INFO:Defining folds
2023-06-18 15:10:44,064:INFO:Declaring metric variables
2023-06-18 15:10:44,064:INFO:Importing untrained model
2023-06-18 15:10:44,064:INFO:Gradient Boosting Regressor Imported successfully
2023-06-18 15:10:44,065:INFO:Starting cross validation
2023-06-18 15:10:44,066:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:46,325:INFO:Calculating mean and std
2023-06-18 15:10:46,326:INFO:Creating metrics dataframe
2023-06-18 15:10:46,644:INFO:Uploading results into container
2023-06-18 15:10:46,645:INFO:Uploading model into container now
2023-06-18 15:10:46,645:INFO:_master_model_container: 16
2023-06-18 15:10:46,645:INFO:_display_container: 2
2023-06-18 15:10:46,645:INFO:GradientBoostingRegressor(random_state=2599)
2023-06-18 15:10:46,645:INFO:create_model() successfully completed......................................
2023-06-18 15:10:46,763:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:46,763:INFO:Creating metrics dataframe
2023-06-18 15:10:46,766:INFO:Initializing Extreme Gradient Boosting
2023-06-18 15:10:46,767:INFO:Total runtime is 0.7234345674514769 minutes
2023-06-18 15:10:46,767:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:46,767:INFO:Initializing create_model()
2023-06-18 15:10:46,767:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=xgboost, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:46,767:INFO:Checking exceptions
2023-06-18 15:10:46,767:INFO:Importing libraries
2023-06-18 15:10:46,767:INFO:Copying training dataset
2023-06-18 15:10:46,771:INFO:Defining folds
2023-06-18 15:10:46,771:INFO:Declaring metric variables
2023-06-18 15:10:46,772:INFO:Importing untrained model
2023-06-18 15:10:46,772:INFO:Extreme Gradient Boosting Imported successfully
2023-06-18 15:10:46,772:INFO:Starting cross validation
2023-06-18 15:10:46,774:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:49,270:INFO:Calculating mean and std
2023-06-18 15:10:49,271:INFO:Creating metrics dataframe
2023-06-18 15:10:49,590:INFO:Uploading results into container
2023-06-18 15:10:49,590:INFO:Uploading model into container now
2023-06-18 15:10:49,591:INFO:_master_model_container: 17
2023-06-18 15:10:49,591:INFO:_display_container: 2
2023-06-18 15:10:49,591:INFO:XGBRegressor(base_score=None, booster='gbtree', callbacks=None,
             colsample_bylevel=None, colsample_bynode=None,
             colsample_bytree=None, early_stopping_rounds=None,
             enable_categorical=False, eval_metric=None, feature_types=None,
             gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
             interaction_constraints=None, learning_rate=None, max_bin=None,
             max_cat_threshold=None, max_cat_to_onehot=None,
             max_delta_step=None, max_depth=None, max_leaves=None,
             min_child_weight=None, missing=nan, monotone_constraints=None,
             n_estimators=100, n_jobs=-1, num_parallel_tree=None,
             predictor=None, random_state=2599, ...)
2023-06-18 15:10:49,592:INFO:create_model() successfully completed......................................
2023-06-18 15:10:49,707:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:49,707:INFO:Creating metrics dataframe
2023-06-18 15:10:49,710:INFO:Initializing Light Gradient Boosting Machine
2023-06-18 15:10:49,710:INFO:Total runtime is 0.7724845568339029 minutes
2023-06-18 15:10:49,710:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:49,711:INFO:Initializing create_model()
2023-06-18 15:10:49,711:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=lightgbm, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:49,711:INFO:Checking exceptions
2023-06-18 15:10:49,711:INFO:Importing libraries
2023-06-18 15:10:49,711:INFO:Copying training dataset
2023-06-18 15:10:49,714:INFO:Defining folds
2023-06-18 15:10:49,714:INFO:Declaring metric variables
2023-06-18 15:10:49,714:INFO:Importing untrained model
2023-06-18 15:10:49,714:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-18 15:10:49,715:INFO:Starting cross validation
2023-06-18 15:10:49,716:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:51,855:INFO:Calculating mean and std
2023-06-18 15:10:51,856:INFO:Creating metrics dataframe
2023-06-18 15:10:52,177:INFO:Uploading results into container
2023-06-18 15:10:52,178:INFO:Uploading model into container now
2023-06-18 15:10:52,178:INFO:_master_model_container: 18
2023-06-18 15:10:52,178:INFO:_display_container: 2
2023-06-18 15:10:52,178:INFO:LGBMRegressor(random_state=2599)
2023-06-18 15:10:52,178:INFO:create_model() successfully completed......................................
2023-06-18 15:10:52,293:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:52,293:INFO:Creating metrics dataframe
2023-06-18 15:10:52,296:INFO:Initializing Dummy Regressor
2023-06-18 15:10:52,296:INFO:Total runtime is 0.8155791004498799 minutes
2023-06-18 15:10:52,296:INFO:SubProcess create_model() called ==================================
2023-06-18 15:10:52,297:INFO:Initializing create_model()
2023-06-18 15:10:52,297:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=dummy, fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001F321C23CD0>, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:52,297:INFO:Checking exceptions
2023-06-18 15:10:52,297:INFO:Importing libraries
2023-06-18 15:10:52,297:INFO:Copying training dataset
2023-06-18 15:10:52,300:INFO:Defining folds
2023-06-18 15:10:52,300:INFO:Declaring metric variables
2023-06-18 15:10:52,300:INFO:Importing untrained model
2023-06-18 15:10:52,300:INFO:Dummy Regressor Imported successfully
2023-06-18 15:10:52,300:INFO:Starting cross validation
2023-06-18 15:10:52,302:INFO:Cross validating with KFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-18 15:10:54,398:INFO:Calculating mean and std
2023-06-18 15:10:54,398:INFO:Creating metrics dataframe
2023-06-18 15:10:54,725:INFO:Uploading results into container
2023-06-18 15:10:54,725:INFO:Uploading model into container now
2023-06-18 15:10:54,726:INFO:_master_model_container: 19
2023-06-18 15:10:54,726:INFO:_display_container: 2
2023-06-18 15:10:54,726:INFO:DummyRegressor()
2023-06-18 15:10:54,726:INFO:create_model() successfully completed......................................
2023-06-18 15:10:54,844:INFO:SubProcess create_model() end ==================================
2023-06-18 15:10:54,845:INFO:Creating metrics dataframe
2023-06-18 15:10:54,849:INFO:Initializing create_model()
2023-06-18 15:10:54,850:INFO:create_model(self=<pycaret.regression.oop.RegressionExperiment object at 0x000001F321FE5220>, estimator=GradientBoostingRegressor(random_state=2599), fold=KFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-18 15:10:54,850:INFO:Checking exceptions
2023-06-18 15:10:54,851:INFO:Importing libraries
2023-06-18 15:10:54,851:INFO:Copying training dataset
2023-06-18 15:10:54,854:INFO:Defining folds
2023-06-18 15:10:54,854:INFO:Declaring metric variables
2023-06-18 15:10:54,854:INFO:Importing untrained model
2023-06-18 15:10:54,854:INFO:Declaring custom model
2023-06-18 15:10:54,854:INFO:Gradient Boosting Regressor Imported successfully
2023-06-18 15:10:54,856:INFO:Cross validation set to False
2023-06-18 15:10:54,856:INFO:Fitting Model
2023-06-18 15:10:55,295:INFO:GradientBoostingRegressor(random_state=2599)
2023-06-18 15:10:55,295:INFO:create_model() successfully completed......................................
2023-06-18 15:10:55,427:INFO:_master_model_container: 19
2023-06-18 15:10:55,427:INFO:_display_container: 2
2023-06-18 15:10:55,428:INFO:GradientBoostingRegressor(random_state=2599)
2023-06-18 15:10:55,428:INFO:compare_models() successfully completed......................................
2023-06-18 15:10:55,469:INFO:Initializing save_model()
2023-06-18 15:10:55,469:INFO:save_model(model=GradientBoostingRegressor(random_state=2599), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['brand', 'processor_brand',
                                             'processor_name',
                                             'processor_gnrtn', 'ram_gb',
                                             'ram_type', 'ssd', 'hdd', 'os',...
                                             'graphic_card_gb', 'weight',
                                             'warranty', 'rating'],
                                    transformer=OneHotEncoder(cols=['brand',
                                                                    'processor_brand',
                                                                    'processor_name',
                                                                    'processor_gnrtn',
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames()))]), verbose=True, use_case=MLUsecase.REGRESSION, kwargs={})
2023-06-18 15:10:55,469:INFO:Adding model into prep_pipe
2023-06-18 15:10:55,488:INFO:best_model.pkl saved in current working directory
2023-06-18 15:10:55,529:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(include=['Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer())),
                ('categorical_imputer',
                 TransformerWrapper(include=['brand', 'processor_brand',
                                             'processor_name',
                                             'processor_gnrtn', 'ram_gb',
                                             'ram_type', 'ssd', 'hdd', 'os',...
                                    transformer=OneHotEncoder(cols=['brand',
                                                                    'processor_brand',
                                                                    'processor_name',
                                                                    'processor_gnrtn',
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              handle_missing='return_nan',
                                                              use_cat_names=True))),
                ('clean_column_names',
                 TransformerWrapper(transformer=CleanColumnNames())),
                ('trained_model',
                 GradientBoostingRegressor(random_state=2599))])
2023-06-18 15:10:55,529:INFO:save_model() successfully completed......................................
2023-06-23 11:20:33,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 11:20:33,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 11:20:33,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 11:20:33,384:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-23 11:20:34,540:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-23 11:24:02,057:INFO:PyCaret ClassificationExperiment
2023-06-23 11:24:02,057:INFO:Logging name: clf-default-name
2023-06-23 11:24:02,058:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 11:24:02,058:INFO:version 3.0.2
2023-06-23 11:24:02,058:INFO:Initializing setup()
2023-06-23 11:24:02,058:INFO:self.USI: f9ea
2023-06-23 11:24:02,058:INFO:self._variable_keys: {'exp_name_log', 'X_test', 'USI', 'y', 'pipeline', 'gpu_param', 'idx', 'is_multiclass', 'y_test', 'logging_param', 'fold_shuffle_param', 'X_train', 'html_param', 'gpu_n_jobs_param', 'memory', 'y_train', 'fold_generator', 'X', 'fix_imbalance', 'log_plots_param', 'data', 'target_param', '_ml_usecase', 'n_jobs_param', 'seed', 'fold_groups_param', '_available_plots', 'exp_id'}
2023-06-23 11:24:02,058:INFO:Checking environment
2023-06-23 11:24:02,058:INFO:python_version: 3.9.5
2023-06-23 11:24:02,058:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-23 11:24:02,058:INFO:machine: AMD64
2023-06-23 11:24:02,067:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-23 11:24:02,071:INFO:Memory: svmem(total=17102532608, available=10259226624, percent=40.0, used=6843305984, free=10259226624)
2023-06-23 11:24:02,071:INFO:Physical Core: 8
2023-06-23 11:24:02,071:INFO:Logical Core: 16
2023-06-23 11:24:02,071:INFO:Checking libraries
2023-06-23 11:24:02,071:INFO:System:
2023-06-23 11:24:02,071:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-23 11:24:02,071:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-23 11:24:02,071:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-23 11:24:02,071:INFO:PyCaret required dependencies:
2023-06-23 11:24:02,071:INFO:                 pip: 23.1.2
2023-06-23 11:24:02,071:INFO:          setuptools: 56.0.0
2023-06-23 11:24:02,071:INFO:             pycaret: 3.0.2
2023-06-23 11:24:02,071:INFO:             IPython: 8.14.0
2023-06-23 11:24:02,071:INFO:          ipywidgets: 8.0.6
2023-06-23 11:24:02,071:INFO:                tqdm: 4.65.0
2023-06-23 11:24:02,071:INFO:               numpy: 1.22.3
2023-06-23 11:24:02,071:INFO:              pandas: 1.4.2
2023-06-23 11:24:02,071:INFO:              jinja2: 3.1.2
2023-06-23 11:24:02,071:INFO:               scipy: 1.8.0
2023-06-23 11:24:02,071:INFO:              joblib: 1.2.0
2023-06-23 11:24:02,072:INFO:             sklearn: 1.2.2
2023-06-23 11:24:02,072:INFO:                pyod: 1.0.9
2023-06-23 11:24:02,072:INFO:            imblearn: 0.10.1
2023-06-23 11:24:02,072:INFO:   category_encoders: 2.6.1
2023-06-23 11:24:02,072:INFO:            lightgbm: 3.3.5
2023-06-23 11:24:02,072:INFO:               numba: 0.57.0
2023-06-23 11:24:02,072:INFO:            requests: 2.27.1
2023-06-23 11:24:02,072:INFO:          matplotlib: 3.5.1
2023-06-23 11:24:02,072:INFO:          scikitplot: 0.3.7
2023-06-23 11:24:02,072:INFO:         yellowbrick: 1.5
2023-06-23 11:24:02,072:INFO:              plotly: 5.10.0
2023-06-23 11:24:02,072:INFO:             kaleido: 0.2.1
2023-06-23 11:24:02,072:INFO:         statsmodels: 0.14.0
2023-06-23 11:24:02,072:INFO:              sktime: 0.17.0
2023-06-23 11:24:02,072:INFO:               tbats: 1.1.3
2023-06-23 11:24:02,072:INFO:            pmdarima: 2.0.3
2023-06-23 11:24:02,072:INFO:              psutil: 5.9.5
2023-06-23 11:24:02,072:INFO:PyCaret optional dependencies:
2023-06-23 11:24:02,079:INFO:                shap: Not installed
2023-06-23 11:24:02,080:INFO:           interpret: Not installed
2023-06-23 11:24:02,080:INFO:                umap: Not installed
2023-06-23 11:24:02,080:INFO:    pandas_profiling: 4.2.0
2023-06-23 11:24:02,080:INFO:  explainerdashboard: Not installed
2023-06-23 11:24:02,080:INFO:             autoviz: Not installed
2023-06-23 11:24:02,080:INFO:           fairlearn: Not installed
2023-06-23 11:24:02,080:INFO:             xgboost: 1.7.4
2023-06-23 11:24:02,080:INFO:            catboost: Not installed
2023-06-23 11:24:02,080:INFO:              kmodes: Not installed
2023-06-23 11:24:02,080:INFO:             mlxtend: Not installed
2023-06-23 11:24:02,080:INFO:       statsforecast: Not installed
2023-06-23 11:24:02,080:INFO:        tune_sklearn: Not installed
2023-06-23 11:24:02,080:INFO:                 ray: Not installed
2023-06-23 11:24:02,080:INFO:            hyperopt: Not installed
2023-06-23 11:24:02,080:INFO:              optuna: Not installed
2023-06-23 11:24:02,080:INFO:               skopt: Not installed
2023-06-23 11:24:02,080:INFO:              mlflow: Not installed
2023-06-23 11:24:02,080:INFO:              gradio: Not installed
2023-06-23 11:24:02,080:INFO:             fastapi: Not installed
2023-06-23 11:24:02,080:INFO:             uvicorn: Not installed
2023-06-23 11:24:02,080:INFO:              m2cgen: Not installed
2023-06-23 11:24:02,080:INFO:           evidently: Not installed
2023-06-23 11:24:02,080:INFO:               fugue: Not installed
2023-06-23 11:24:02,080:INFO:           streamlit: 1.23.1
2023-06-23 11:24:02,080:INFO:             prophet: Not installed
2023-06-23 11:24:02,080:INFO:None
2023-06-23 11:24:02,080:INFO:Set up data.
2023-06-23 11:24:02,088:INFO:Set up train/test split.
2023-06-23 11:24:02,095:INFO:Set up index.
2023-06-23 11:24:02,095:INFO:Set up folding strategy.
2023-06-23 11:24:02,095:INFO:Assigning column types.
2023-06-23 11:24:02,098:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 11:24:02,143:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 11:24:02,146:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:24:02,179:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:24:02,312:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:24:02,355:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 11:24:02,356:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:24:02,383:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:24:02,386:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:24:02,386:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 11:24:02,431:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:24:02,458:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:24:02,461:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:24:02,504:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:24:02,531:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:24:02,534:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:24:02,534:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-23 11:24:02,605:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:24:02,607:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:24:02,679:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:24:02,681:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:24:02,690:INFO:Preparing preprocessing pipeline...
2023-06-23 11:24:02,691:INFO:Set up label encoding.
2023-06-23 11:24:02,691:INFO:Set up simple imputation.
2023-06-23 11:24:02,694:INFO:Set up encoding of ordinal features.
2023-06-23 11:24:02,696:INFO:Set up encoding of categorical features.
2023-06-23 11:24:02,697:INFO:Set up column name cleaning.
2023-06-23 11:24:02,877:INFO:Finished creating preprocessing pipeline.
2023-06-23 11:24:02,906:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Price', 'Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True...
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-23 11:24:02,907:INFO:Creating final display dataframe.
2023-06-23 11:24:03,294:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               3958
1                        Target                                              brand
2                   Target type                                         Multiclass
3                Target mapping  APPLE: 0, ASUS: 1, Avita: 2, DELL: 3, HP: 4, L...
4           Original data shape                                          (823, 19)
5        Transformed data shape                                          (823, 68)
6   Transformed train set shape                                          (576, 68)
7    Transformed test set shape                                          (247, 68)
8              Ordinal features                                                  3
9              Numeric features                                                  3
10         Categorical features                                                 15
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               f9ea
2023-06-23 11:24:03,372:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:24:03,375:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:24:03,446:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:24:03,448:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:24:03,449:INFO:setup() successfully completed in 1.65s...............
2023-06-23 11:24:03,466:INFO:Initializing compare_models()
2023-06-23 11:24:03,466:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-23 11:24:03,466:INFO:Checking exceptions
2023-06-23 11:24:03,469:INFO:Preparing display monitor
2023-06-23 11:24:03,471:INFO:Initializing Logistic Regression
2023-06-23 11:24:03,471:INFO:Total runtime is 0.0 minutes
2023-06-23 11:24:03,471:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:03,471:INFO:Initializing create_model()
2023-06-23 11:24:03,471:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:03,471:INFO:Checking exceptions
2023-06-23 11:24:03,471:INFO:Importing libraries
2023-06-23 11:24:03,471:INFO:Copying training dataset
2023-06-23 11:24:03,474:INFO:Defining folds
2023-06-23 11:24:03,474:INFO:Declaring metric variables
2023-06-23 11:24:03,475:INFO:Importing untrained model
2023-06-23 11:24:03,475:INFO:Logistic Regression Imported successfully
2023-06-23 11:24:03,475:INFO:Starting cross validation
2023-06-23 11:24:03,476:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:12,428:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:24:12,461:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:24:12,475:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:24:12,485:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:24:12,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:24:12,521:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:24:12,641:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:24:12,704:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,707:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,709:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,710:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,740:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,742:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,745:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,749:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,818:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,820:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,822:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,823:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,872:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,873:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,874:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,875:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,875:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,876:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,876:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,877:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,890:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,892:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,894:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,895:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,938:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,939:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,939:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,940:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,941:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:12,942:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:12,943:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:13,009:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:13,011:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:13,012:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:13,013:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:14,532:INFO:Calculating mean and std
2023-06-23 11:24:14,533:INFO:Creating metrics dataframe
2023-06-23 11:24:14,776:INFO:Uploading results into container
2023-06-23 11:24:14,777:INFO:Uploading model into container now
2023-06-23 11:24:14,777:INFO:_master_model_container: 1
2023-06-23 11:24:14,778:INFO:_display_container: 2
2023-06-23 11:24:14,778:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3958, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 11:24:14,778:INFO:create_model() successfully completed......................................
2023-06-23 11:24:14,899:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:14,899:INFO:Creating metrics dataframe
2023-06-23 11:24:14,901:INFO:Initializing K Neighbors Classifier
2023-06-23 11:24:14,901:INFO:Total runtime is 0.19049069086710613 minutes
2023-06-23 11:24:14,902:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:14,902:INFO:Initializing create_model()
2023-06-23 11:24:14,902:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:14,902:INFO:Checking exceptions
2023-06-23 11:24:14,902:INFO:Importing libraries
2023-06-23 11:24:14,902:INFO:Copying training dataset
2023-06-23 11:24:14,905:INFO:Defining folds
2023-06-23 11:24:14,905:INFO:Declaring metric variables
2023-06-23 11:24:14,905:INFO:Importing untrained model
2023-06-23 11:24:14,905:INFO:K Neighbors Classifier Imported successfully
2023-06-23 11:24:14,906:INFO:Starting cross validation
2023-06-23 11:24:14,907:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:15,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,612:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,688:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,690:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,691:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:15,693:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,742:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,744:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,746:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:15,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,752:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:15,753:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:15,754:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,521:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,522:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,523:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:17,524:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,528:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,586:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,588:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,588:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:17,589:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,593:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,595:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,596:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,606:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:17,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,703:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,705:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:17,706:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:17,706:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:18,588:INFO:Calculating mean and std
2023-06-23 11:24:18,588:INFO:Creating metrics dataframe
2023-06-23 11:24:18,837:INFO:Uploading results into container
2023-06-23 11:24:18,837:INFO:Uploading model into container now
2023-06-23 11:24:18,837:INFO:_master_model_container: 2
2023-06-23 11:24:18,838:INFO:_display_container: 2
2023-06-23 11:24:18,838:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-23 11:24:18,838:INFO:create_model() successfully completed......................................
2023-06-23 11:24:18,963:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:18,963:INFO:Creating metrics dataframe
2023-06-23 11:24:18,966:INFO:Initializing Naive Bayes
2023-06-23 11:24:18,966:INFO:Total runtime is 0.2582407315572103 minutes
2023-06-23 11:24:18,966:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:18,967:INFO:Initializing create_model()
2023-06-23 11:24:18,967:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:18,967:INFO:Checking exceptions
2023-06-23 11:24:18,967:INFO:Importing libraries
2023-06-23 11:24:18,967:INFO:Copying training dataset
2023-06-23 11:24:18,971:INFO:Defining folds
2023-06-23 11:24:18,971:INFO:Declaring metric variables
2023-06-23 11:24:18,971:INFO:Importing untrained model
2023-06-23 11:24:18,971:INFO:Naive Bayes Imported successfully
2023-06-23 11:24:18,971:INFO:Starting cross validation
2023-06-23 11:24:18,973:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:19,480:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,482:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,484:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,485:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,505:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,507:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,508:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,553:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,556:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,556:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,558:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,558:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,559:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,559:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,560:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,560:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,561:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,561:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,563:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,564:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,565:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,578:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,579:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,580:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,581:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,581:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,582:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,582:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,583:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,635:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,637:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,639:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,708:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,710:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:19,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:19,712:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:21,369:INFO:Calculating mean and std
2023-06-23 11:24:21,369:INFO:Creating metrics dataframe
2023-06-23 11:24:21,628:INFO:Uploading results into container
2023-06-23 11:24:21,629:INFO:Uploading model into container now
2023-06-23 11:24:21,629:INFO:_master_model_container: 3
2023-06-23 11:24:21,629:INFO:_display_container: 2
2023-06-23 11:24:21,629:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-23 11:24:21,629:INFO:create_model() successfully completed......................................
2023-06-23 11:24:21,744:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:21,744:INFO:Creating metrics dataframe
2023-06-23 11:24:21,747:INFO:Initializing Decision Tree Classifier
2023-06-23 11:24:21,747:INFO:Total runtime is 0.30459068616231283 minutes
2023-06-23 11:24:21,748:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:21,748:INFO:Initializing create_model()
2023-06-23 11:24:21,748:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:21,748:INFO:Checking exceptions
2023-06-23 11:24:21,748:INFO:Importing libraries
2023-06-23 11:24:21,748:INFO:Copying training dataset
2023-06-23 11:24:21,751:INFO:Defining folds
2023-06-23 11:24:21,751:INFO:Declaring metric variables
2023-06-23 11:24:21,751:INFO:Importing untrained model
2023-06-23 11:24:21,751:INFO:Decision Tree Classifier Imported successfully
2023-06-23 11:24:21,752:INFO:Starting cross validation
2023-06-23 11:24:21,753:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:22,220:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,222:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,225:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,237:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,239:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,240:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,256:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,257:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:22,258:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,259:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,261:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,262:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,289:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,292:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,294:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,294:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,296:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,299:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,413:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,415:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,416:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:22,417:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,437:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,439:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:22,440:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,106:INFO:Calculating mean and std
2023-06-23 11:24:24,107:INFO:Creating metrics dataframe
2023-06-23 11:24:24,361:INFO:Uploading results into container
2023-06-23 11:24:24,362:INFO:Uploading model into container now
2023-06-23 11:24:24,362:INFO:_master_model_container: 4
2023-06-23 11:24:24,362:INFO:_display_container: 2
2023-06-23 11:24:24,362:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3958, splitter='best')
2023-06-23 11:24:24,362:INFO:create_model() successfully completed......................................
2023-06-23 11:24:24,478:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:24,478:INFO:Creating metrics dataframe
2023-06-23 11:24:24,481:INFO:Initializing SVM - Linear Kernel
2023-06-23 11:24:24,481:INFO:Total runtime is 0.3501629630724589 minutes
2023-06-23 11:24:24,481:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:24,481:INFO:Initializing create_model()
2023-06-23 11:24:24,481:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:24,482:INFO:Checking exceptions
2023-06-23 11:24:24,482:INFO:Importing libraries
2023-06-23 11:24:24,482:INFO:Copying training dataset
2023-06-23 11:24:24,485:INFO:Defining folds
2023-06-23 11:24:24,485:INFO:Declaring metric variables
2023-06-23 11:24:24,485:INFO:Importing untrained model
2023-06-23 11:24:24,485:INFO:SVM - Linear Kernel Imported successfully
2023-06-23 11:24:24,485:INFO:Starting cross validation
2023-06-23 11:24:24,487:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:24,931:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:24,931:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,933:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,934:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:24,934:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:24,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:24,947:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,947:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,949:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,950:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,951:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:24,951:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:24,952:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,952:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,970:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:24,971:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,974:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:24,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,983:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:24,984:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,985:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:24,986:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,986:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,987:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:24,988:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,989:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:24,990:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:24,991:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,002:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:25,003:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,004:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:25,005:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,006:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,007:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:25,008:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,008:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,009:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:25,009:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:25,009:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,010:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,011:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,012:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:25,012:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,037:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:24:25,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,040:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:25,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:25,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:26,789:INFO:Calculating mean and std
2023-06-23 11:24:26,790:INFO:Creating metrics dataframe
2023-06-23 11:24:27,048:INFO:Uploading results into container
2023-06-23 11:24:27,048:INFO:Uploading model into container now
2023-06-23 11:24:27,049:INFO:_master_model_container: 5
2023-06-23 11:24:27,049:INFO:_display_container: 2
2023-06-23 11:24:27,049:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3958, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-23 11:24:27,049:INFO:create_model() successfully completed......................................
2023-06-23 11:24:27,164:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:27,164:INFO:Creating metrics dataframe
2023-06-23 11:24:27,167:INFO:Initializing Ridge Classifier
2023-06-23 11:24:27,167:INFO:Total runtime is 0.39492964347203574 minutes
2023-06-23 11:24:27,167:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:27,168:INFO:Initializing create_model()
2023-06-23 11:24:27,168:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:27,168:INFO:Checking exceptions
2023-06-23 11:24:27,168:INFO:Importing libraries
2023-06-23 11:24:27,168:INFO:Copying training dataset
2023-06-23 11:24:27,171:INFO:Defining folds
2023-06-23 11:24:27,171:INFO:Declaring metric variables
2023-06-23 11:24:27,171:INFO:Importing untrained model
2023-06-23 11:24:27,172:INFO:Ridge Classifier Imported successfully
2023-06-23 11:24:27,172:INFO:Starting cross validation
2023-06-23 11:24:27,174:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:27,475:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,476:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,478:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,479:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:27,481:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,521:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,522:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,548:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,548:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,550:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,607:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,607:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,609:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:27,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,625:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,626:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,628:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,631:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,658:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,659:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,661:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,664:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,674:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,675:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,681:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,687:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,698:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,699:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,701:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,703:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,709:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:24:27,710:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:27,712:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:27,713:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:29,450:INFO:Calculating mean and std
2023-06-23 11:24:29,451:INFO:Creating metrics dataframe
2023-06-23 11:24:29,706:INFO:Uploading results into container
2023-06-23 11:24:29,707:INFO:Uploading model into container now
2023-06-23 11:24:29,707:INFO:_master_model_container: 6
2023-06-23 11:24:29,707:INFO:_display_container: 2
2023-06-23 11:24:29,707:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3958, solver='auto',
                tol=0.0001)
2023-06-23 11:24:29,708:INFO:create_model() successfully completed......................................
2023-06-23 11:24:29,824:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:29,824:INFO:Creating metrics dataframe
2023-06-23 11:24:29,828:INFO:Initializing Random Forest Classifier
2023-06-23 11:24:29,828:INFO:Total runtime is 0.4392796794573466 minutes
2023-06-23 11:24:29,828:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:29,828:INFO:Initializing create_model()
2023-06-23 11:24:29,828:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:29,828:INFO:Checking exceptions
2023-06-23 11:24:29,828:INFO:Importing libraries
2023-06-23 11:24:29,828:INFO:Copying training dataset
2023-06-23 11:24:29,832:INFO:Defining folds
2023-06-23 11:24:29,832:INFO:Declaring metric variables
2023-06-23 11:24:29,832:INFO:Importing untrained model
2023-06-23 11:24:29,832:INFO:Random Forest Classifier Imported successfully
2023-06-23 11:24:29,832:INFO:Starting cross validation
2023-06-23 11:24:29,834:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:30,799:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,800:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,802:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,883:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,884:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,886:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,923:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,925:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,926:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,928:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,929:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,930:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,931:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:30,931:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,931:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,933:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,945:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,948:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,993:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,996:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,998:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:30,998:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:31,001:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:31,001:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:31,002:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:31,002:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:31,004:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:31,170:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:31,172:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:31,174:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:31,175:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:32,743:INFO:Calculating mean and std
2023-06-23 11:24:32,744:INFO:Creating metrics dataframe
2023-06-23 11:24:33,002:INFO:Uploading results into container
2023-06-23 11:24:33,003:INFO:Uploading model into container now
2023-06-23 11:24:33,003:INFO:_master_model_container: 7
2023-06-23 11:24:33,003:INFO:_display_container: 2
2023-06-23 11:24:33,003:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3958, verbose=0, warm_start=False)
2023-06-23 11:24:33,003:INFO:create_model() successfully completed......................................
2023-06-23 11:24:33,126:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:33,126:INFO:Creating metrics dataframe
2023-06-23 11:24:33,131:INFO:Initializing Quadratic Discriminant Analysis
2023-06-23 11:24:33,131:INFO:Total runtime is 0.4943254868189494 minutes
2023-06-23 11:24:33,131:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:33,132:INFO:Initializing create_model()
2023-06-23 11:24:33,132:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:33,132:INFO:Checking exceptions
2023-06-23 11:24:33,132:INFO:Importing libraries
2023-06-23 11:24:33,132:INFO:Copying training dataset
2023-06-23 11:24:33,135:INFO:Defining folds
2023-06-23 11:24:33,135:INFO:Declaring metric variables
2023-06-23 11:24:33,135:INFO:Importing untrained model
2023-06-23 11:24:33,136:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-23 11:24:33,136:INFO:Starting cross validation
2023-06-23 11:24:33,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:33,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,351:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,389:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,393:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,394:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,419:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:24:33,488:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,488:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,489:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,533:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,534:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,534:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,612:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,612:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,613:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,629:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,629:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,629:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,635:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,636:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,636:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,650:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,650:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,653:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,653:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,653:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,654:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,654:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,654:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,655:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,655:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,655:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,655:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,656:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,656:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,656:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,656:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,656:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,656:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,668:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,668:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,669:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,674:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,674:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,675:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,675:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,675:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,675:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-23 11:24:33,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-23 11:24:33,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-23 11:24:33,681:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,681:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,681:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,702:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,702:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,703:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,706:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-23 11:24:33,707:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,708:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,709:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,710:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,710:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,712:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,748:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,748:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:24:33,749:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:24:33,751:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-23 11:24:33,752:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,753:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:33,754:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:33,755:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:35,566:INFO:Calculating mean and std
2023-06-23 11:24:35,567:INFO:Creating metrics dataframe
2023-06-23 11:24:35,830:INFO:Uploading results into container
2023-06-23 11:24:35,831:INFO:Uploading model into container now
2023-06-23 11:24:35,831:INFO:_master_model_container: 8
2023-06-23 11:24:35,831:INFO:_display_container: 2
2023-06-23 11:24:35,831:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 11:24:35,831:INFO:create_model() successfully completed......................................
2023-06-23 11:24:35,949:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:35,949:INFO:Creating metrics dataframe
2023-06-23 11:24:35,953:INFO:Initializing Ada Boost Classifier
2023-06-23 11:24:35,953:INFO:Total runtime is 0.5413613637288411 minutes
2023-06-23 11:24:35,953:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:35,953:INFO:Initializing create_model()
2023-06-23 11:24:35,953:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:35,953:INFO:Checking exceptions
2023-06-23 11:24:35,953:INFO:Importing libraries
2023-06-23 11:24:35,953:INFO:Copying training dataset
2023-06-23 11:24:35,956:INFO:Defining folds
2023-06-23 11:24:35,957:INFO:Declaring metric variables
2023-06-23 11:24:35,957:INFO:Importing untrained model
2023-06-23 11:24:35,957:INFO:Ada Boost Classifier Imported successfully
2023-06-23 11:24:35,957:INFO:Starting cross validation
2023-06-23 11:24:35,959:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:36,634:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,637:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,638:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:36,639:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,669:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,672:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,674:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,674:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,676:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,677:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:36,679:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,679:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:36,681:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,798:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,800:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,802:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:36,803:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,807:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,807:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,807:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,809:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,809:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,809:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,810:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:36,811:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:36,811:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:36,811:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,812:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,812:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,846:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:36,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,908:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,909:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:36,911:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:38,584:INFO:Calculating mean and std
2023-06-23 11:24:38,585:INFO:Creating metrics dataframe
2023-06-23 11:24:38,857:INFO:Uploading results into container
2023-06-23 11:24:38,858:INFO:Uploading model into container now
2023-06-23 11:24:38,858:INFO:_master_model_container: 9
2023-06-23 11:24:38,858:INFO:_display_container: 2
2023-06-23 11:24:38,859:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3958)
2023-06-23 11:24:38,859:INFO:create_model() successfully completed......................................
2023-06-23 11:24:38,973:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:38,974:INFO:Creating metrics dataframe
2023-06-23 11:24:38,977:INFO:Initializing Gradient Boosting Classifier
2023-06-23 11:24:38,977:INFO:Total runtime is 0.5917613704999288 minutes
2023-06-23 11:24:38,977:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:38,977:INFO:Initializing create_model()
2023-06-23 11:24:38,977:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:38,977:INFO:Checking exceptions
2023-06-23 11:24:38,977:INFO:Importing libraries
2023-06-23 11:24:38,977:INFO:Copying training dataset
2023-06-23 11:24:38,980:INFO:Defining folds
2023-06-23 11:24:38,980:INFO:Declaring metric variables
2023-06-23 11:24:38,981:INFO:Importing untrained model
2023-06-23 11:24:38,981:INFO:Gradient Boosting Classifier Imported successfully
2023-06-23 11:24:38,981:INFO:Starting cross validation
2023-06-23 11:24:38,982:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:42,200:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,203:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,205:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,233:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,235:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,236:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:42,237:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,241:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,242:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,243:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,244:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,246:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,246:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,297:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,299:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,299:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,301:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,302:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,304:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,327:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,330:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,331:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:42,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,341:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,344:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,386:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:42,389:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:44,327:INFO:Calculating mean and std
2023-06-23 11:24:44,328:INFO:Creating metrics dataframe
2023-06-23 11:24:44,606:INFO:Uploading results into container
2023-06-23 11:24:44,607:INFO:Uploading model into container now
2023-06-23 11:24:44,607:INFO:_master_model_container: 10
2023-06-23 11:24:44,607:INFO:_display_container: 2
2023-06-23 11:24:44,608:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3958, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-23 11:24:44,608:INFO:create_model() successfully completed......................................
2023-06-23 11:24:44,724:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:44,724:INFO:Creating metrics dataframe
2023-06-23 11:24:44,727:INFO:Initializing Linear Discriminant Analysis
2023-06-23 11:24:44,727:INFO:Total runtime is 0.687591552734375 minutes
2023-06-23 11:24:44,728:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:44,728:INFO:Initializing create_model()
2023-06-23 11:24:44,728:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:44,728:INFO:Checking exceptions
2023-06-23 11:24:44,728:INFO:Importing libraries
2023-06-23 11:24:44,728:INFO:Copying training dataset
2023-06-23 11:24:44,731:INFO:Defining folds
2023-06-23 11:24:44,731:INFO:Declaring metric variables
2023-06-23 11:24:44,731:INFO:Importing untrained model
2023-06-23 11:24:44,731:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 11:24:44,732:INFO:Starting cross validation
2023-06-23 11:24:44,733:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:45,252:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,255:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,256:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,268:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,270:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,273:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,296:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,299:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,300:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:45,301:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,304:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,305:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,306:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,307:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:45,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,309:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:45,310:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,333:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,337:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:45,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:47,318:INFO:Calculating mean and std
2023-06-23 11:24:47,319:INFO:Creating metrics dataframe
2023-06-23 11:24:47,598:INFO:Uploading results into container
2023-06-23 11:24:47,598:INFO:Uploading model into container now
2023-06-23 11:24:47,599:INFO:_master_model_container: 11
2023-06-23 11:24:47,599:INFO:_display_container: 2
2023-06-23 11:24:47,599:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:24:47,599:INFO:create_model() successfully completed......................................
2023-06-23 11:24:47,714:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:47,714:INFO:Creating metrics dataframe
2023-06-23 11:24:47,717:INFO:Initializing Extra Trees Classifier
2023-06-23 11:24:47,717:INFO:Total runtime is 0.73742489417394 minutes
2023-06-23 11:24:47,718:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:47,718:INFO:Initializing create_model()
2023-06-23 11:24:47,718:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:47,718:INFO:Checking exceptions
2023-06-23 11:24:47,718:INFO:Importing libraries
2023-06-23 11:24:47,718:INFO:Copying training dataset
2023-06-23 11:24:47,721:INFO:Defining folds
2023-06-23 11:24:47,721:INFO:Declaring metric variables
2023-06-23 11:24:47,721:INFO:Importing untrained model
2023-06-23 11:24:47,722:INFO:Extra Trees Classifier Imported successfully
2023-06-23 11:24:47,722:INFO:Starting cross validation
2023-06-23 11:24:47,723:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:48,792:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,793:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,795:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,846:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,854:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,856:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,884:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,884:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,886:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,887:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,888:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,889:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:48,890:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,896:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,899:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,900:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,903:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,904:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,905:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,905:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,907:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,907:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,964:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:48,967:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:49,027:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:49,029:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:49,031:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:50,908:INFO:Calculating mean and std
2023-06-23 11:24:50,909:INFO:Creating metrics dataframe
2023-06-23 11:24:51,209:INFO:Uploading results into container
2023-06-23 11:24:51,210:INFO:Uploading model into container now
2023-06-23 11:24:51,210:INFO:_master_model_container: 12
2023-06-23 11:24:51,210:INFO:_display_container: 2
2023-06-23 11:24:51,211:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3958, verbose=0, warm_start=False)
2023-06-23 11:24:51,211:INFO:create_model() successfully completed......................................
2023-06-23 11:24:51,328:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:51,329:INFO:Creating metrics dataframe
2023-06-23 11:24:51,332:INFO:Initializing Extreme Gradient Boosting
2023-06-23 11:24:51,332:INFO:Total runtime is 0.7976803024609883 minutes
2023-06-23 11:24:51,332:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:51,332:INFO:Initializing create_model()
2023-06-23 11:24:51,332:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:51,332:INFO:Checking exceptions
2023-06-23 11:24:51,332:INFO:Importing libraries
2023-06-23 11:24:51,332:INFO:Copying training dataset
2023-06-23 11:24:51,335:INFO:Defining folds
2023-06-23 11:24:51,335:INFO:Declaring metric variables
2023-06-23 11:24:51,336:INFO:Importing untrained model
2023-06-23 11:24:51,336:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 11:24:51,336:INFO:Starting cross validation
2023-06-23 11:24:51,338:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:53,124:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,127:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,175:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,177:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:53,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,180:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,181:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,182:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,183:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,186:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,196:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,198:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,199:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:53,201:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,215:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,217:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,219:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,225:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,227:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,229:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,235:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,236:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,237:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,238:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,239:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,241:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,315:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:53,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:55,277:INFO:Calculating mean and std
2023-06-23 11:24:55,278:INFO:Creating metrics dataframe
2023-06-23 11:24:55,562:INFO:Uploading results into container
2023-06-23 11:24:55,563:INFO:Uploading model into container now
2023-06-23 11:24:55,563:INFO:_master_model_container: 13
2023-06-23 11:24:55,563:INFO:_display_container: 2
2023-06-23 11:24:55,564:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-23 11:24:55,564:INFO:create_model() successfully completed......................................
2023-06-23 11:24:55,682:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:55,682:INFO:Creating metrics dataframe
2023-06-23 11:24:55,685:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 11:24:55,686:INFO:Total runtime is 0.8702515045801797 minutes
2023-06-23 11:24:55,686:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:55,686:INFO:Initializing create_model()
2023-06-23 11:24:55,686:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:55,686:INFO:Checking exceptions
2023-06-23 11:24:55,686:INFO:Importing libraries
2023-06-23 11:24:55,686:INFO:Copying training dataset
2023-06-23 11:24:55,689:INFO:Defining folds
2023-06-23 11:24:55,689:INFO:Declaring metric variables
2023-06-23 11:24:55,689:INFO:Importing untrained model
2023-06-23 11:24:55,690:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 11:24:55,690:INFO:Starting cross validation
2023-06-23 11:24:55,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:24:57,300:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,302:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,304:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,310:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,310:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,314:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,334:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,337:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:57,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,372:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,378:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,389:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,394:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,409:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,411:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,414:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,414:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,416:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,418:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,449:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,450:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:57,451:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:24:57,451:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:24:59,480:INFO:Calculating mean and std
2023-06-23 11:24:59,480:INFO:Creating metrics dataframe
2023-06-23 11:24:59,769:INFO:Uploading results into container
2023-06-23 11:24:59,770:INFO:Uploading model into container now
2023-06-23 11:24:59,770:INFO:_master_model_container: 14
2023-06-23 11:24:59,770:INFO:_display_container: 2
2023-06-23 11:24:59,770:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3958, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-23 11:24:59,770:INFO:create_model() successfully completed......................................
2023-06-23 11:24:59,886:INFO:SubProcess create_model() end ==================================
2023-06-23 11:24:59,886:INFO:Creating metrics dataframe
2023-06-23 11:24:59,889:INFO:Initializing Dummy Classifier
2023-06-23 11:24:59,889:INFO:Total runtime is 0.9403015176455178 minutes
2023-06-23 11:24:59,889:INFO:SubProcess create_model() called ==================================
2023-06-23 11:24:59,889:INFO:Initializing create_model()
2023-06-23 11:24:59,889:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A033755F10>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:24:59,889:INFO:Checking exceptions
2023-06-23 11:24:59,890:INFO:Importing libraries
2023-06-23 11:24:59,890:INFO:Copying training dataset
2023-06-23 11:24:59,893:INFO:Defining folds
2023-06-23 11:24:59,893:INFO:Declaring metric variables
2023-06-23 11:24:59,893:INFO:Importing untrained model
2023-06-23 11:24:59,893:INFO:Dummy Classifier Imported successfully
2023-06-23 11:24:59,893:INFO:Starting cross validation
2023-06-23 11:24:59,895:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:25:00,407:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,409:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,410:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,410:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,410:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,412:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,412:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,413:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,413:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,414:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,414:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,415:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,416:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,416:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,417:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,417:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,425:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,427:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,428:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,430:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,436:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,437:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,438:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,442:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,444:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,445:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,446:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,449:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,449:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,451:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,451:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,452:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,452:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,453:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,453:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,499:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,501:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:00,502:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:25:00,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:25:02,568:INFO:Calculating mean and std
2023-06-23 11:25:02,568:INFO:Creating metrics dataframe
2023-06-23 11:25:02,856:INFO:Uploading results into container
2023-06-23 11:25:02,856:INFO:Uploading model into container now
2023-06-23 11:25:02,857:INFO:_master_model_container: 15
2023-06-23 11:25:02,857:INFO:_display_container: 2
2023-06-23 11:25:02,857:INFO:DummyClassifier(constant=None, random_state=3958, strategy='prior')
2023-06-23 11:25:02,857:INFO:create_model() successfully completed......................................
2023-06-23 11:25:02,971:INFO:SubProcess create_model() end ==================================
2023-06-23 11:25:02,971:INFO:Creating metrics dataframe
2023-06-23 11:25:02,976:INFO:Initializing create_model()
2023-06-23 11:25:02,976:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A0310AD310>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:25:02,976:INFO:Checking exceptions
2023-06-23 11:25:02,976:INFO:Importing libraries
2023-06-23 11:25:02,976:INFO:Copying training dataset
2023-06-23 11:25:02,979:INFO:Defining folds
2023-06-23 11:25:02,979:INFO:Declaring metric variables
2023-06-23 11:25:02,980:INFO:Importing untrained model
2023-06-23 11:25:02,980:INFO:Declaring custom model
2023-06-23 11:25:02,980:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 11:25:02,982:INFO:Cross validation set to False
2023-06-23 11:25:02,982:INFO:Fitting Model
2023-06-23 11:25:03,818:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-06-23 11:25:03,818:INFO:create_model() successfully completed......................................
2023-06-23 11:25:03,946:INFO:_master_model_container: 15
2023-06-23 11:25:03,946:INFO:_display_container: 2
2023-06-23 11:25:03,947:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-06-23 11:25:03,947:INFO:compare_models() successfully completed......................................
2023-06-23 11:25:03,977:INFO:Initializing save_model()
2023-06-23 11:25:03,977:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Price', 'Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True...
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-23 11:25:03,977:INFO:Adding model into prep_pipe
2023-06-23 11:25:04,010:INFO:best_model.pkl saved in current working directory
2023-06-23 11:25:04,053:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Price', 'Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))],
         verbose=False)
2023-06-23 11:25:04,053:INFO:save_model() successfully completed......................................
2023-06-23 11:25:58,427:INFO:PyCaret ClassificationExperiment
2023-06-23 11:25:58,427:INFO:Logging name: clf-default-name
2023-06-23 11:25:58,427:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 11:25:58,427:INFO:version 3.0.2
2023-06-23 11:25:58,427:INFO:Initializing setup()
2023-06-23 11:25:58,427:INFO:self.USI: cbb7
2023-06-23 11:25:58,427:INFO:self._variable_keys: {'exp_name_log', 'X_test', 'USI', 'y', 'pipeline', 'gpu_param', 'idx', 'is_multiclass', 'y_test', 'logging_param', 'fold_shuffle_param', 'X_train', 'html_param', 'gpu_n_jobs_param', 'memory', 'y_train', 'fold_generator', 'X', 'fix_imbalance', 'log_plots_param', 'data', 'target_param', '_ml_usecase', 'n_jobs_param', 'seed', 'fold_groups_param', '_available_plots', 'exp_id'}
2023-06-23 11:25:58,427:INFO:Checking environment
2023-06-23 11:25:58,427:INFO:python_version: 3.9.5
2023-06-23 11:25:58,427:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-23 11:25:58,428:INFO:machine: AMD64
2023-06-23 11:25:58,428:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-23 11:25:58,430:INFO:Memory: svmem(total=17102532608, available=8146120704, percent=52.4, used=8956411904, free=8146120704)
2023-06-23 11:25:58,431:INFO:Physical Core: 8
2023-06-23 11:25:58,431:INFO:Logical Core: 16
2023-06-23 11:25:58,431:INFO:Checking libraries
2023-06-23 11:25:58,431:INFO:System:
2023-06-23 11:25:58,431:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-23 11:25:58,431:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-23 11:25:58,431:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-23 11:25:58,431:INFO:PyCaret required dependencies:
2023-06-23 11:25:58,431:INFO:                 pip: 23.1.2
2023-06-23 11:25:58,431:INFO:          setuptools: 56.0.0
2023-06-23 11:25:58,431:INFO:             pycaret: 3.0.2
2023-06-23 11:25:58,431:INFO:             IPython: 8.14.0
2023-06-23 11:25:58,431:INFO:          ipywidgets: 8.0.6
2023-06-23 11:25:58,431:INFO:                tqdm: 4.65.0
2023-06-23 11:25:58,431:INFO:               numpy: 1.22.3
2023-06-23 11:25:58,431:INFO:              pandas: 1.4.2
2023-06-23 11:25:58,431:INFO:              jinja2: 3.1.2
2023-06-23 11:25:58,431:INFO:               scipy: 1.8.0
2023-06-23 11:25:58,431:INFO:              joblib: 1.2.0
2023-06-23 11:25:58,431:INFO:             sklearn: 1.2.2
2023-06-23 11:25:58,431:INFO:                pyod: 1.0.9
2023-06-23 11:25:58,431:INFO:            imblearn: 0.10.1
2023-06-23 11:25:58,431:INFO:   category_encoders: 2.6.1
2023-06-23 11:25:58,431:INFO:            lightgbm: 3.3.5
2023-06-23 11:25:58,431:INFO:               numba: 0.57.0
2023-06-23 11:25:58,431:INFO:            requests: 2.27.1
2023-06-23 11:25:58,431:INFO:          matplotlib: 3.5.1
2023-06-23 11:25:58,431:INFO:          scikitplot: 0.3.7
2023-06-23 11:25:58,431:INFO:         yellowbrick: 1.5
2023-06-23 11:25:58,432:INFO:              plotly: 5.10.0
2023-06-23 11:25:58,432:INFO:             kaleido: 0.2.1
2023-06-23 11:25:58,432:INFO:         statsmodels: 0.14.0
2023-06-23 11:25:58,432:INFO:              sktime: 0.17.0
2023-06-23 11:25:58,432:INFO:               tbats: 1.1.3
2023-06-23 11:25:58,432:INFO:            pmdarima: 2.0.3
2023-06-23 11:25:58,432:INFO:              psutil: 5.9.5
2023-06-23 11:25:58,432:INFO:PyCaret optional dependencies:
2023-06-23 11:25:58,432:INFO:                shap: Not installed
2023-06-23 11:25:58,432:INFO:           interpret: Not installed
2023-06-23 11:25:58,432:INFO:                umap: Not installed
2023-06-23 11:25:58,432:INFO:    pandas_profiling: 4.2.0
2023-06-23 11:25:58,432:INFO:  explainerdashboard: Not installed
2023-06-23 11:25:58,432:INFO:             autoviz: Not installed
2023-06-23 11:25:58,432:INFO:           fairlearn: Not installed
2023-06-23 11:25:58,432:INFO:             xgboost: 1.7.4
2023-06-23 11:25:58,432:INFO:            catboost: Not installed
2023-06-23 11:25:58,432:INFO:              kmodes: Not installed
2023-06-23 11:25:58,432:INFO:             mlxtend: Not installed
2023-06-23 11:25:58,432:INFO:       statsforecast: Not installed
2023-06-23 11:25:58,432:INFO:        tune_sklearn: Not installed
2023-06-23 11:25:58,432:INFO:                 ray: Not installed
2023-06-23 11:25:58,432:INFO:            hyperopt: Not installed
2023-06-23 11:25:58,432:INFO:              optuna: Not installed
2023-06-23 11:25:58,432:INFO:               skopt: Not installed
2023-06-23 11:25:58,432:INFO:              mlflow: Not installed
2023-06-23 11:25:58,432:INFO:              gradio: Not installed
2023-06-23 11:25:58,432:INFO:             fastapi: Not installed
2023-06-23 11:25:58,432:INFO:             uvicorn: Not installed
2023-06-23 11:25:58,432:INFO:              m2cgen: Not installed
2023-06-23 11:25:58,432:INFO:           evidently: Not installed
2023-06-23 11:25:58,433:INFO:               fugue: Not installed
2023-06-23 11:25:58,433:INFO:           streamlit: 1.23.1
2023-06-23 11:25:58,433:INFO:             prophet: Not installed
2023-06-23 11:25:58,433:INFO:None
2023-06-23 11:25:58,433:INFO:Set up data.
2023-06-23 11:25:58,440:INFO:Set up train/test split.
2023-06-23 11:25:58,445:INFO:Set up index.
2023-06-23 11:25:58,445:INFO:Set up folding strategy.
2023-06-23 11:25:58,445:INFO:Assigning column types.
2023-06-23 11:25:58,447:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-23 11:25:58,491:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 11:25:58,492:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:25:58,519:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:25:58,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:25:58,565:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-23 11:25:58,565:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:25:58,592:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:25:58,594:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:25:58,594:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-23 11:25:58,637:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:25:58,664:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:25:58,666:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:25:58,710:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-23 11:25:58,736:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:25:58,739:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:25:58,739:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-23 11:25:58,809:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:25:58,811:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:25:58,881:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:25:58,883:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:25:58,884:INFO:Preparing preprocessing pipeline...
2023-06-23 11:25:58,885:INFO:Set up label encoding.
2023-06-23 11:25:58,885:INFO:Set up simple imputation.
2023-06-23 11:25:58,888:INFO:Set up encoding of ordinal features.
2023-06-23 11:25:58,890:INFO:Set up encoding of categorical features.
2023-06-23 11:25:58,891:INFO:Set up column name cleaning.
2023-06-23 11:25:59,060:INFO:Finished creating preprocessing pipeline.
2023-06-23 11:25:59,088:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Price', 'Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True...
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-23 11:25:59,088:INFO:Creating final display dataframe.
2023-06-23 11:25:59,460:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               5120
1                        Target                                              brand
2                   Target type                                         Multiclass
3                Target mapping  APPLE: 0, ASUS: 1, Avita: 2, DELL: 3, HP: 4, L...
4           Original data shape                                          (823, 19)
5        Transformed data shape                                          (823, 70)
6   Transformed train set shape                                          (576, 70)
7    Transformed test set shape                                          (247, 70)
8              Ordinal features                                                  3
9              Numeric features                                                  3
10         Categorical features                                                 15
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               cbb7
2023-06-23 11:25:59,537:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:25:59,539:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:25:59,609:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-23 11:25:59,612:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-23 11:25:59,612:INFO:setup() successfully completed in 1.4s...............
2023-06-23 11:25:59,614:INFO:Initializing compare_models()
2023-06-23 11:25:59,614:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-23 11:25:59,614:INFO:Checking exceptions
2023-06-23 11:25:59,617:INFO:Preparing display monitor
2023-06-23 11:25:59,619:INFO:Initializing Logistic Regression
2023-06-23 11:25:59,619:INFO:Total runtime is 0.0 minutes
2023-06-23 11:25:59,620:INFO:SubProcess create_model() called ==================================
2023-06-23 11:25:59,620:INFO:Initializing create_model()
2023-06-23 11:25:59,620:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:25:59,620:INFO:Checking exceptions
2023-06-23 11:25:59,620:INFO:Importing libraries
2023-06-23 11:25:59,620:INFO:Copying training dataset
2023-06-23 11:25:59,623:INFO:Defining folds
2023-06-23 11:25:59,623:INFO:Declaring metric variables
2023-06-23 11:25:59,623:INFO:Importing untrained model
2023-06-23 11:25:59,624:INFO:Logistic Regression Imported successfully
2023-06-23 11:25:59,624:INFO:Starting cross validation
2023-06-23 11:25:59,626:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:00,212:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,230:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,232:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,239:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,241:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,247:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,253:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,271:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,290:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-23 11:26:00,595:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,597:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,598:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,600:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,613:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,614:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,616:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,617:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,619:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,621:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,622:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,625:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,628:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,629:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,660:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,663:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,664:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,666:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,672:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,675:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,676:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,677:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,681:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,691:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,693:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,694:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,712:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,714:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,715:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,716:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,737:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:00,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:00,740:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:02,800:INFO:Calculating mean and std
2023-06-23 11:26:02,800:INFO:Creating metrics dataframe
2023-06-23 11:26:03,097:INFO:Uploading results into container
2023-06-23 11:26:03,097:INFO:Uploading model into container now
2023-06-23 11:26:03,098:INFO:_master_model_container: 1
2023-06-23 11:26:03,098:INFO:_display_container: 2
2023-06-23 11:26:03,098:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=5120, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-23 11:26:03,098:INFO:create_model() successfully completed......................................
2023-06-23 11:26:03,216:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:03,216:INFO:Creating metrics dataframe
2023-06-23 11:26:03,219:INFO:Initializing K Neighbors Classifier
2023-06-23 11:26:03,219:INFO:Total runtime is 0.059986984729766844 minutes
2023-06-23 11:26:03,219:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:03,219:INFO:Initializing create_model()
2023-06-23 11:26:03,219:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:03,219:INFO:Checking exceptions
2023-06-23 11:26:03,219:INFO:Importing libraries
2023-06-23 11:26:03,219:INFO:Copying training dataset
2023-06-23 11:26:03,222:INFO:Defining folds
2023-06-23 11:26:03,222:INFO:Declaring metric variables
2023-06-23 11:26:03,222:INFO:Importing untrained model
2023-06-23 11:26:03,223:INFO:K Neighbors Classifier Imported successfully
2023-06-23 11:26:03,223:INFO:Starting cross validation
2023-06-23 11:26:03,224:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:03,829:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,851:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,855:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,857:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,857:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:03,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,859:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:03,860:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,906:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,909:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,910:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:03,911:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,941:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,943:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,943:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,944:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:03,945:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,945:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,947:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,985:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,988:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,989:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,989:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,991:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:03,992:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:03,994:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:04,013:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:04,015:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:04,016:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:04,017:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:06,130:INFO:Calculating mean and std
2023-06-23 11:26:06,130:INFO:Creating metrics dataframe
2023-06-23 11:26:06,443:INFO:Uploading results into container
2023-06-23 11:26:06,443:INFO:Uploading model into container now
2023-06-23 11:26:06,444:INFO:_master_model_container: 2
2023-06-23 11:26:06,444:INFO:_display_container: 2
2023-06-23 11:26:06,444:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-23 11:26:06,444:INFO:create_model() successfully completed......................................
2023-06-23 11:26:06,563:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:06,563:INFO:Creating metrics dataframe
2023-06-23 11:26:06,566:INFO:Initializing Naive Bayes
2023-06-23 11:26:06,566:INFO:Total runtime is 0.11577031215031941 minutes
2023-06-23 11:26:06,566:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:06,566:INFO:Initializing create_model()
2023-06-23 11:26:06,566:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:06,566:INFO:Checking exceptions
2023-06-23 11:26:06,566:INFO:Importing libraries
2023-06-23 11:26:06,566:INFO:Copying training dataset
2023-06-23 11:26:06,569:INFO:Defining folds
2023-06-23 11:26:06,570:INFO:Declaring metric variables
2023-06-23 11:26:06,570:INFO:Importing untrained model
2023-06-23 11:26:06,570:INFO:Naive Bayes Imported successfully
2023-06-23 11:26:06,570:INFO:Starting cross validation
2023-06-23 11:26:06,571:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:07,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,043:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,045:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,045:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,087:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,090:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,091:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,092:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,095:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,097:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,098:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,099:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,110:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,112:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,112:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,113:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,113:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,114:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,114:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,115:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,156:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,157:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,158:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,160:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,160:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,161:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,163:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,164:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,255:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,257:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,258:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,259:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,259:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,261:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:07,262:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:07,263:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:09,377:INFO:Calculating mean and std
2023-06-23 11:26:09,378:INFO:Creating metrics dataframe
2023-06-23 11:26:09,686:INFO:Uploading results into container
2023-06-23 11:26:09,687:INFO:Uploading model into container now
2023-06-23 11:26:09,687:INFO:_master_model_container: 3
2023-06-23 11:26:09,687:INFO:_display_container: 2
2023-06-23 11:26:09,688:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-23 11:26:09,688:INFO:create_model() successfully completed......................................
2023-06-23 11:26:09,804:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:09,804:INFO:Creating metrics dataframe
2023-06-23 11:26:09,807:INFO:Initializing Decision Tree Classifier
2023-06-23 11:26:09,807:INFO:Total runtime is 0.16978699763615926 minutes
2023-06-23 11:26:09,807:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:09,808:INFO:Initializing create_model()
2023-06-23 11:26:09,808:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:09,808:INFO:Checking exceptions
2023-06-23 11:26:09,808:INFO:Importing libraries
2023-06-23 11:26:09,808:INFO:Copying training dataset
2023-06-23 11:26:09,811:INFO:Defining folds
2023-06-23 11:26:09,811:INFO:Declaring metric variables
2023-06-23 11:26:09,811:INFO:Importing untrained model
2023-06-23 11:26:09,811:INFO:Decision Tree Classifier Imported successfully
2023-06-23 11:26:09,811:INFO:Starting cross validation
2023-06-23 11:26:09,813:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:10,286:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,287:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,289:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,305:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,307:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:10,309:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,333:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,334:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,361:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,382:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,387:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,398:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,400:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,401:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,401:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:10,402:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,403:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,405:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:10,406:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,423:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,425:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,426:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,431:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,432:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,435:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,437:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,439:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:10,441:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:12,586:INFO:Calculating mean and std
2023-06-23 11:26:12,587:INFO:Creating metrics dataframe
2023-06-23 11:26:12,901:INFO:Uploading results into container
2023-06-23 11:26:12,901:INFO:Uploading model into container now
2023-06-23 11:26:12,902:INFO:_master_model_container: 4
2023-06-23 11:26:12,902:INFO:_display_container: 2
2023-06-23 11:26:12,902:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=5120, splitter='best')
2023-06-23 11:26:12,902:INFO:create_model() successfully completed......................................
2023-06-23 11:26:13,017:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:13,017:INFO:Creating metrics dataframe
2023-06-23 11:26:13,020:INFO:Initializing SVM - Linear Kernel
2023-06-23 11:26:13,020:INFO:Total runtime is 0.22333699067433677 minutes
2023-06-23 11:26:13,021:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:13,021:INFO:Initializing create_model()
2023-06-23 11:26:13,021:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:13,021:INFO:Checking exceptions
2023-06-23 11:26:13,021:INFO:Importing libraries
2023-06-23 11:26:13,021:INFO:Copying training dataset
2023-06-23 11:26:13,024:INFO:Defining folds
2023-06-23 11:26:13,024:INFO:Declaring metric variables
2023-06-23 11:26:13,024:INFO:Importing untrained model
2023-06-23 11:26:13,025:INFO:SVM - Linear Kernel Imported successfully
2023-06-23 11:26:13,025:INFO:Starting cross validation
2023-06-23 11:26:13,027:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:13,457:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,458:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,461:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,463:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,469:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,470:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,473:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,474:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,475:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,485:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,486:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,488:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,490:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,491:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,491:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,492:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,494:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,496:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,497:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,498:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,499:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,502:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,504:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,524:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,529:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,530:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,536:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,537:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,539:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,540:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,541:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,558:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,559:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,561:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,562:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,563:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,577:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,578:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,580:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,581:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,582:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,638:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-23 11:26:13,639:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,641:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:13,642:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:13,643:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:15,725:INFO:Calculating mean and std
2023-06-23 11:26:15,725:INFO:Creating metrics dataframe
2023-06-23 11:26:16,033:INFO:Uploading results into container
2023-06-23 11:26:16,033:INFO:Uploading model into container now
2023-06-23 11:26:16,034:INFO:_master_model_container: 5
2023-06-23 11:26:16,034:INFO:_display_container: 2
2023-06-23 11:26:16,034:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=5120, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-23 11:26:16,034:INFO:create_model() successfully completed......................................
2023-06-23 11:26:16,148:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:16,148:INFO:Creating metrics dataframe
2023-06-23 11:26:16,151:INFO:Initializing Ridge Classifier
2023-06-23 11:26:16,151:INFO:Total runtime is 0.27552032470703125 minutes
2023-06-23 11:26:16,151:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:16,151:INFO:Initializing create_model()
2023-06-23 11:26:16,151:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:16,151:INFO:Checking exceptions
2023-06-23 11:26:16,151:INFO:Importing libraries
2023-06-23 11:26:16,151:INFO:Copying training dataset
2023-06-23 11:26:16,154:INFO:Defining folds
2023-06-23 11:26:16,154:INFO:Declaring metric variables
2023-06-23 11:26:16,154:INFO:Importing untrained model
2023-06-23 11:26:16,155:INFO:Ridge Classifier Imported successfully
2023-06-23 11:26:16,155:INFO:Starting cross validation
2023-06-23 11:26:16,156:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:16,462:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,463:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,466:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,468:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,468:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,468:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,470:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,471:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:16,471:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,520:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,521:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,523:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,524:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:16,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,575:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,575:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,577:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,578:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:16,579:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,616:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,618:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,620:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,621:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,622:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,622:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,625:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,627:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,674:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,675:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,679:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:16,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,709:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,710:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,712:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,713:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:16,714:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,732:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,733:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,742:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-23 11:26:16,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,745:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:16,746:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:16,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:18,760:INFO:Calculating mean and std
2023-06-23 11:26:18,760:INFO:Creating metrics dataframe
2023-06-23 11:26:19,062:INFO:Uploading results into container
2023-06-23 11:26:19,063:INFO:Uploading model into container now
2023-06-23 11:26:19,063:INFO:_master_model_container: 6
2023-06-23 11:26:19,063:INFO:_display_container: 2
2023-06-23 11:26:19,063:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=5120, solver='auto',
                tol=0.0001)
2023-06-23 11:26:19,063:INFO:create_model() successfully completed......................................
2023-06-23 11:26:19,177:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:19,177:INFO:Creating metrics dataframe
2023-06-23 11:26:19,180:INFO:Initializing Random Forest Classifier
2023-06-23 11:26:19,180:INFO:Total runtime is 0.3260036547978719 minutes
2023-06-23 11:26:19,180:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:19,180:INFO:Initializing create_model()
2023-06-23 11:26:19,180:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:19,180:INFO:Checking exceptions
2023-06-23 11:26:19,180:INFO:Importing libraries
2023-06-23 11:26:19,180:INFO:Copying training dataset
2023-06-23 11:26:19,183:INFO:Defining folds
2023-06-23 11:26:19,183:INFO:Declaring metric variables
2023-06-23 11:26:19,184:INFO:Importing untrained model
2023-06-23 11:26:19,184:INFO:Random Forest Classifier Imported successfully
2023-06-23 11:26:19,184:INFO:Starting cross validation
2023-06-23 11:26:19,185:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:20,163:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,167:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:20,168:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,273:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,276:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,277:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,306:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,309:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:20,310:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,366:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,398:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,400:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,401:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:20,402:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,472:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,473:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,475:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,482:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,484:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,486:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:20,487:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,501:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:20,505:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:20,506:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:22,508:INFO:Calculating mean and std
2023-06-23 11:26:22,509:INFO:Creating metrics dataframe
2023-06-23 11:26:22,814:INFO:Uploading results into container
2023-06-23 11:26:22,814:INFO:Uploading model into container now
2023-06-23 11:26:22,815:INFO:_master_model_container: 7
2023-06-23 11:26:22,815:INFO:_display_container: 2
2023-06-23 11:26:22,815:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=5120, verbose=0, warm_start=False)
2023-06-23 11:26:22,815:INFO:create_model() successfully completed......................................
2023-06-23 11:26:22,929:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:22,929:INFO:Creating metrics dataframe
2023-06-23 11:26:22,932:INFO:Initializing Quadratic Discriminant Analysis
2023-06-23 11:26:22,932:INFO:Total runtime is 0.38853699366251626 minutes
2023-06-23 11:26:22,932:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:22,932:INFO:Initializing create_model()
2023-06-23 11:26:22,932:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:22,932:INFO:Checking exceptions
2023-06-23 11:26:22,932:INFO:Importing libraries
2023-06-23 11:26:22,932:INFO:Copying training dataset
2023-06-23 11:26:22,935:INFO:Defining folds
2023-06-23 11:26:22,935:INFO:Declaring metric variables
2023-06-23 11:26:22,936:INFO:Importing untrained model
2023-06-23 11:26:22,936:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-23 11:26:22,936:INFO:Starting cross validation
2023-06-23 11:26:22,937:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:23,106:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,118:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,121:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,155:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,173:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,179:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,185:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,193:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,212:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-23 11:26:23,282:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:26:23,282:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:26:23,283:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:26:23,375:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,377:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,378:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,435:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,436:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,437:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,474:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:26:23,474:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:26:23,475:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:26:23,478:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,480:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,481:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,482:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,482:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,482:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,483:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,483:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,514:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,517:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,518:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,519:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:26:23,519:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:26:23,519:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:26:23,519:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,522:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-23 11:26:23,523:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: divide by zero encountered in power
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:26:23,523:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,523:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:951: RuntimeWarning: invalid value encountered in multiply
  X2 = np.dot(Xm, R * (S ** (-0.5)))

2023-06-23 11:26:23,523:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:954: RuntimeWarning: divide by zero encountered in log
  u = np.asarray([np.sum(np.log(s)) for s in self.scalings_])

2023-06-23 11:26:23,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,526:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 327, in _score
    return self._sign * self._score_func(y, y_pred, **self._kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 35, in __call__
    return self.score_func(y_true, y_pred, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_ranking.py", line 551, in roc_auc_score
    y_score = check_array(y_score, ensure_2d=False)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 921, in check_array
    _assert_all_finite(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\validation.py", line 161, in _assert_all_finite
    raise ValueError(msg_err)
ValueError: Input contains NaN.

  warnings.warn(

2023-06-23 11:26:23,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,528:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,529:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,530:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,544:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,546:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,547:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,548:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,580:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,581:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,581:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,583:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,583:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,583:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:23,583:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:23,584:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:25,702:INFO:Calculating mean and std
2023-06-23 11:26:25,703:INFO:Creating metrics dataframe
2023-06-23 11:26:26,019:INFO:Uploading results into container
2023-06-23 11:26:26,019:INFO:Uploading model into container now
2023-06-23 11:26:26,020:INFO:_master_model_container: 8
2023-06-23 11:26:26,020:INFO:_display_container: 2
2023-06-23 11:26:26,020:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-23 11:26:26,020:INFO:create_model() successfully completed......................................
2023-06-23 11:26:26,134:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:26,134:INFO:Creating metrics dataframe
2023-06-23 11:26:26,137:INFO:Initializing Ada Boost Classifier
2023-06-23 11:26:26,137:INFO:Total runtime is 0.4419659296671549 minutes
2023-06-23 11:26:26,137:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:26,138:INFO:Initializing create_model()
2023-06-23 11:26:26,138:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:26,138:INFO:Checking exceptions
2023-06-23 11:26:26,138:INFO:Importing libraries
2023-06-23 11:26:26,138:INFO:Copying training dataset
2023-06-23 11:26:26,141:INFO:Defining folds
2023-06-23 11:26:26,141:INFO:Declaring metric variables
2023-06-23 11:26:26,141:INFO:Importing untrained model
2023-06-23 11:26:26,141:INFO:Ada Boost Classifier Imported successfully
2023-06-23 11:26:26,141:INFO:Starting cross validation
2023-06-23 11:26:26,143:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:26,795:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,797:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,799:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,812:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,813:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,815:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,815:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,816:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:26,816:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:26,816:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,817:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,830:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,832:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:26,835:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,856:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,857:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,859:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,917:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,918:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:26,919:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,977:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,978:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:26,980:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,996:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:26,999:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:27,000:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:27,001:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:27,008:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:27,010:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:27,012:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:27,031:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:27,032:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:27,033:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:27,034:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:29,121:INFO:Calculating mean and std
2023-06-23 11:26:29,122:INFO:Creating metrics dataframe
2023-06-23 11:26:29,435:INFO:Uploading results into container
2023-06-23 11:26:29,435:INFO:Uploading model into container now
2023-06-23 11:26:29,435:INFO:_master_model_container: 9
2023-06-23 11:26:29,435:INFO:_display_container: 2
2023-06-23 11:26:29,436:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=5120)
2023-06-23 11:26:29,436:INFO:create_model() successfully completed......................................
2023-06-23 11:26:29,550:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:29,550:INFO:Creating metrics dataframe
2023-06-23 11:26:29,553:INFO:Initializing Gradient Boosting Classifier
2023-06-23 11:26:29,553:INFO:Total runtime is 0.49889927307764687 minutes
2023-06-23 11:26:29,553:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:29,553:INFO:Initializing create_model()
2023-06-23 11:26:29,553:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:29,553:INFO:Checking exceptions
2023-06-23 11:26:29,553:INFO:Importing libraries
2023-06-23 11:26:29,553:INFO:Copying training dataset
2023-06-23 11:26:29,556:INFO:Defining folds
2023-06-23 11:26:29,556:INFO:Declaring metric variables
2023-06-23 11:26:29,556:INFO:Importing untrained model
2023-06-23 11:26:29,557:INFO:Gradient Boosting Classifier Imported successfully
2023-06-23 11:26:29,557:INFO:Starting cross validation
2023-06-23 11:26:29,558:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:32,138:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,139:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,142:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,494:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,495:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,497:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,679:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:32,681:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,731:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,733:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,742:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,744:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,746:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,748:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,751:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:32,752:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,755:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,757:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,774:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:32,777:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,794:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,796:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,797:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:32,851:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:34,672:INFO:Calculating mean and std
2023-06-23 11:26:34,673:INFO:Creating metrics dataframe
2023-06-23 11:26:34,998:INFO:Uploading results into container
2023-06-23 11:26:34,999:INFO:Uploading model into container now
2023-06-23 11:26:34,999:INFO:_master_model_container: 10
2023-06-23 11:26:34,999:INFO:_display_container: 2
2023-06-23 11:26:34,999:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=5120, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-23 11:26:34,999:INFO:create_model() successfully completed......................................
2023-06-23 11:26:35,114:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:35,114:INFO:Creating metrics dataframe
2023-06-23 11:26:35,117:INFO:Initializing Linear Discriminant Analysis
2023-06-23 11:26:35,117:INFO:Total runtime is 0.591632604598999 minutes
2023-06-23 11:26:35,117:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:35,118:INFO:Initializing create_model()
2023-06-23 11:26:35,118:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:35,118:INFO:Checking exceptions
2023-06-23 11:26:35,118:INFO:Importing libraries
2023-06-23 11:26:35,118:INFO:Copying training dataset
2023-06-23 11:26:35,121:INFO:Defining folds
2023-06-23 11:26:35,121:INFO:Declaring metric variables
2023-06-23 11:26:35,121:INFO:Importing untrained model
2023-06-23 11:26:35,121:INFO:Linear Discriminant Analysis Imported successfully
2023-06-23 11:26:35,121:INFO:Starting cross validation
2023-06-23 11:26:35,123:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:35,594:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,597:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,599:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,634:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,637:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,637:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,639:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,641:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,644:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,646:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,649:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,650:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,652:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,654:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,689:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,694:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,701:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,704:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,706:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,709:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,714:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,741:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:35,742:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:38,138:INFO:Calculating mean and std
2023-06-23 11:26:38,139:INFO:Creating metrics dataframe
2023-06-23 11:26:38,498:INFO:Uploading results into container
2023-06-23 11:26:38,499:INFO:Uploading model into container now
2023-06-23 11:26:38,499:INFO:_master_model_container: 11
2023-06-23 11:26:38,499:INFO:_display_container: 2
2023-06-23 11:26:38,499:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-23 11:26:38,499:INFO:create_model() successfully completed......................................
2023-06-23 11:26:38,628:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:38,629:INFO:Creating metrics dataframe
2023-06-23 11:26:38,632:INFO:Initializing Extra Trees Classifier
2023-06-23 11:26:38,632:INFO:Total runtime is 0.6502159754435222 minutes
2023-06-23 11:26:38,632:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:38,633:INFO:Initializing create_model()
2023-06-23 11:26:38,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:38,633:INFO:Checking exceptions
2023-06-23 11:26:38,633:INFO:Importing libraries
2023-06-23 11:26:38,633:INFO:Copying training dataset
2023-06-23 11:26:38,638:INFO:Defining folds
2023-06-23 11:26:38,638:INFO:Declaring metric variables
2023-06-23 11:26:38,638:INFO:Importing untrained model
2023-06-23 11:26:38,638:INFO:Extra Trees Classifier Imported successfully
2023-06-23 11:26:38,639:INFO:Starting cross validation
2023-06-23 11:26:38,641:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:39,686:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,687:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,688:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:39,689:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,760:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,762:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,763:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:39,764:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,787:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,790:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,792:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,832:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,833:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:39,835:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:39,835:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,836:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,868:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,871:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,873:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,903:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,905:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,908:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,941:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,944:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:39,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:40,000:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:40,002:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:40,004:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:40,087:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:40,088:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:40,090:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:42,242:INFO:Calculating mean and std
2023-06-23 11:26:42,243:INFO:Creating metrics dataframe
2023-06-23 11:26:42,573:INFO:Uploading results into container
2023-06-23 11:26:42,574:INFO:Uploading model into container now
2023-06-23 11:26:42,574:INFO:_master_model_container: 12
2023-06-23 11:26:42,574:INFO:_display_container: 2
2023-06-23 11:26:42,574:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=5120, verbose=0, warm_start=False)
2023-06-23 11:26:42,574:INFO:create_model() successfully completed......................................
2023-06-23 11:26:42,689:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:42,689:INFO:Creating metrics dataframe
2023-06-23 11:26:42,692:INFO:Initializing Extreme Gradient Boosting
2023-06-23 11:26:42,692:INFO:Total runtime is 0.7178826173146566 minutes
2023-06-23 11:26:42,693:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:42,693:INFO:Initializing create_model()
2023-06-23 11:26:42,693:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:42,693:INFO:Checking exceptions
2023-06-23 11:26:42,693:INFO:Importing libraries
2023-06-23 11:26:42,693:INFO:Copying training dataset
2023-06-23 11:26:42,696:INFO:Defining folds
2023-06-23 11:26:42,696:INFO:Declaring metric variables
2023-06-23 11:26:42,696:INFO:Importing untrained model
2023-06-23 11:26:42,697:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 11:26:42,697:INFO:Starting cross validation
2023-06-23 11:26:42,698:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:44,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,344:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:44,345:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,395:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,397:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,468:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,470:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,472:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,497:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,498:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,499:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,500:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,502:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,502:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,504:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,506:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:44,507:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,572:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,573:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,575:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,596:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,598:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,600:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:44,601:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,603:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,607:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,642:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,644:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:44,645:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:46,914:INFO:Calculating mean and std
2023-06-23 11:26:46,915:INFO:Creating metrics dataframe
2023-06-23 11:26:47,279:INFO:Uploading results into container
2023-06-23 11:26:47,280:INFO:Uploading model into container now
2023-06-23 11:26:47,280:INFO:_master_model_container: 13
2023-06-23 11:26:47,280:INFO:_display_container: 2
2023-06-23 11:26:47,281:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-23 11:26:47,281:INFO:create_model() successfully completed......................................
2023-06-23 11:26:47,398:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:47,398:INFO:Creating metrics dataframe
2023-06-23 11:26:47,401:INFO:Initializing Light Gradient Boosting Machine
2023-06-23 11:26:47,402:INFO:Total runtime is 0.7963826060295105 minutes
2023-06-23 11:26:47,402:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:47,402:INFO:Initializing create_model()
2023-06-23 11:26:47,402:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:47,402:INFO:Checking exceptions
2023-06-23 11:26:47,402:INFO:Importing libraries
2023-06-23 11:26:47,402:INFO:Copying training dataset
2023-06-23 11:26:47,405:INFO:Defining folds
2023-06-23 11:26:47,405:INFO:Declaring metric variables
2023-06-23 11:26:47,405:INFO:Importing untrained model
2023-06-23 11:26:47,405:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-23 11:26:47,406:INFO:Starting cross validation
2023-06-23 11:26:47,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:49,119:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,119:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,122:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,122:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,123:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,123:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,150:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,151:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,151:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,153:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,153:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:49,153:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,154:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,155:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,155:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,156:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,157:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,158:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,158:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,158:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,159:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,160:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,160:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,160:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,163:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,164:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:49,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,169:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,172:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:49,173:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:49,174:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:51,616:INFO:Calculating mean and std
2023-06-23 11:26:51,617:INFO:Creating metrics dataframe
2023-06-23 11:26:51,961:INFO:Uploading results into container
2023-06-23 11:26:51,962:INFO:Uploading model into container now
2023-06-23 11:26:51,962:INFO:_master_model_container: 14
2023-06-23 11:26:51,962:INFO:_display_container: 2
2023-06-23 11:26:51,963:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=5120, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-23 11:26:51,963:INFO:create_model() successfully completed......................................
2023-06-23 11:26:52,078:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:52,079:INFO:Creating metrics dataframe
2023-06-23 11:26:52,082:INFO:Initializing Dummy Classifier
2023-06-23 11:26:52,082:INFO:Total runtime is 0.8743826031684876 minutes
2023-06-23 11:26:52,083:INFO:SubProcess create_model() called ==================================
2023-06-23 11:26:52,083:INFO:Initializing create_model()
2023-06-23 11:26:52,083:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x000001A0316CB8B0>, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:52,083:INFO:Checking exceptions
2023-06-23 11:26:52,083:INFO:Importing libraries
2023-06-23 11:26:52,083:INFO:Copying training dataset
2023-06-23 11:26:52,086:INFO:Defining folds
2023-06-23 11:26:52,086:INFO:Declaring metric variables
2023-06-23 11:26:52,087:INFO:Importing untrained model
2023-06-23 11:26:52,087:INFO:Dummy Classifier Imported successfully
2023-06-23 11:26:52,087:INFO:Starting cross validation
2023-06-23 11:26:52,089:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-23 11:26:52,564:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,567:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,568:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,569:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,601:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,601:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,603:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,604:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,604:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,606:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,606:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,607:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,607:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,607:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,609:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,609:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,609:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,612:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,613:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,613:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,615:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,616:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,617:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,674:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,676:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:52,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-23 11:26:52,679:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'acer') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-23 11:26:55,126:INFO:Calculating mean and std
2023-06-23 11:26:55,126:INFO:Creating metrics dataframe
2023-06-23 11:26:55,471:INFO:Uploading results into container
2023-06-23 11:26:55,472:INFO:Uploading model into container now
2023-06-23 11:26:55,472:INFO:_master_model_container: 15
2023-06-23 11:26:55,472:INFO:_display_container: 2
2023-06-23 11:26:55,473:INFO:DummyClassifier(constant=None, random_state=5120, strategy='prior')
2023-06-23 11:26:55,473:INFO:create_model() successfully completed......................................
2023-06-23 11:26:55,586:INFO:SubProcess create_model() end ==================================
2023-06-23 11:26:55,586:INFO:Creating metrics dataframe
2023-06-23 11:26:55,591:INFO:Initializing create_model()
2023-06-23 11:26:55,591:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x000001A033354970>, estimator=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-23 11:26:55,591:INFO:Checking exceptions
2023-06-23 11:26:55,591:INFO:Importing libraries
2023-06-23 11:26:55,592:INFO:Copying training dataset
2023-06-23 11:26:55,594:INFO:Defining folds
2023-06-23 11:26:55,594:INFO:Declaring metric variables
2023-06-23 11:26:55,595:INFO:Importing untrained model
2023-06-23 11:26:55,595:INFO:Declaring custom model
2023-06-23 11:26:55,595:INFO:Extreme Gradient Boosting Imported successfully
2023-06-23 11:26:55,597:INFO:Cross validation set to False
2023-06-23 11:26:55,597:INFO:Fitting Model
2023-06-23 11:26:56,442:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-06-23 11:26:56,442:INFO:create_model() successfully completed......................................
2023-06-23 11:26:56,572:INFO:_master_model_container: 15
2023-06-23 11:26:56,572:INFO:_display_container: 2
2023-06-23 11:26:56,572:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...)
2023-06-23 11:26:56,572:INFO:compare_models() successfully completed......................................
2023-06-23 11:26:56,606:INFO:Initializing save_model()
2023-06-23 11:26:56,606:INFO:save_model(model=XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='multi:softprob', predictor=None, ...), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Price', 'Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True...
                                                                    'ram_gb',
                                                                    'ram_type',
                                                                    'ssd',
                                                                    'hdd', 'os',
                                                                    'graphic_card_gb',
                                                                    'weight',
                                                                    'warranty',
                                                                    'rating'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-23 11:26:56,606:INFO:Adding model into prep_pipe
2023-06-23 11:26:56,641:INFO:best_model.pkl saved in current working directory
2023-06-23 11:26:56,683:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Price', 'Number of Ratings',
                                             'Number of Reviews'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True...
                               grow_policy=None, importance_type=None,
                               interaction_constraints=None, learning_rate=None,
                               max_bin=None, max_cat_threshold=None,
                               max_cat_to_onehot=None, max_delta_step=None,
                               max_depth=None, max_leaves=None,
                               min_child_weight=None, missing=nan,
                               monotone_constraints=None, n_estimators=100,
                               n_jobs=-1, num_parallel_tree=None,
                               objective='multi:softprob', predictor=None, ...))],
         verbose=False)
2023-06-23 11:26:56,683:INFO:save_model() successfully completed......................................
2023-06-23 11:27:12,064:INFO:PyCaret ClassificationExperiment
2023-06-23 11:27:12,064:INFO:Logging name: clf-default-name
2023-06-23 11:27:12,064:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 11:27:12,064:INFO:version 3.0.2
2023-06-23 11:27:12,064:INFO:Initializing setup()
2023-06-23 11:27:12,064:INFO:self.USI: 661c
2023-06-23 11:27:12,064:INFO:self._variable_keys: {'exp_name_log', 'X_test', 'USI', 'y', 'pipeline', 'gpu_param', 'idx', 'is_multiclass', 'y_test', 'logging_param', 'fold_shuffle_param', 'X_train', 'html_param', 'gpu_n_jobs_param', 'memory', 'y_train', 'fold_generator', 'X', 'fix_imbalance', 'log_plots_param', 'data', 'target_param', '_ml_usecase', 'n_jobs_param', 'seed', 'fold_groups_param', '_available_plots', 'exp_id'}
2023-06-23 11:27:12,064:INFO:Checking environment
2023-06-23 11:27:12,064:INFO:python_version: 3.9.5
2023-06-23 11:27:12,064:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-23 11:27:12,064:INFO:machine: AMD64
2023-06-23 11:27:12,064:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-23 11:27:12,067:INFO:Memory: svmem(total=17102532608, available=8200978432, percent=52.0, used=8901554176, free=8200978432)
2023-06-23 11:27:12,067:INFO:Physical Core: 8
2023-06-23 11:27:12,067:INFO:Logical Core: 16
2023-06-23 11:27:12,067:INFO:Checking libraries
2023-06-23 11:27:12,067:INFO:System:
2023-06-23 11:27:12,067:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-23 11:27:12,067:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-23 11:27:12,067:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-23 11:27:12,068:INFO:PyCaret required dependencies:
2023-06-23 11:27:12,068:INFO:                 pip: 23.1.2
2023-06-23 11:27:12,068:INFO:          setuptools: 56.0.0
2023-06-23 11:27:12,068:INFO:             pycaret: 3.0.2
2023-06-23 11:27:12,068:INFO:             IPython: 8.14.0
2023-06-23 11:27:12,068:INFO:          ipywidgets: 8.0.6
2023-06-23 11:27:12,068:INFO:                tqdm: 4.65.0
2023-06-23 11:27:12,068:INFO:               numpy: 1.22.3
2023-06-23 11:27:12,068:INFO:              pandas: 1.4.2
2023-06-23 11:27:12,068:INFO:              jinja2: 3.1.2
2023-06-23 11:27:12,068:INFO:               scipy: 1.8.0
2023-06-23 11:27:12,068:INFO:              joblib: 1.2.0
2023-06-23 11:27:12,068:INFO:             sklearn: 1.2.2
2023-06-23 11:27:12,068:INFO:                pyod: 1.0.9
2023-06-23 11:27:12,068:INFO:            imblearn: 0.10.1
2023-06-23 11:27:12,068:INFO:   category_encoders: 2.6.1
2023-06-23 11:27:12,068:INFO:            lightgbm: 3.3.5
2023-06-23 11:27:12,068:INFO:               numba: 0.57.0
2023-06-23 11:27:12,068:INFO:            requests: 2.27.1
2023-06-23 11:27:12,068:INFO:          matplotlib: 3.5.1
2023-06-23 11:27:12,068:INFO:          scikitplot: 0.3.7
2023-06-23 11:27:12,068:INFO:         yellowbrick: 1.5
2023-06-23 11:27:12,068:INFO:              plotly: 5.10.0
2023-06-23 11:27:12,068:INFO:             kaleido: 0.2.1
2023-06-23 11:27:12,068:INFO:         statsmodels: 0.14.0
2023-06-23 11:27:12,068:INFO:              sktime: 0.17.0
2023-06-23 11:27:12,068:INFO:               tbats: 1.1.3
2023-06-23 11:27:12,068:INFO:            pmdarima: 2.0.3
2023-06-23 11:27:12,068:INFO:              psutil: 5.9.5
2023-06-23 11:27:12,068:INFO:PyCaret optional dependencies:
2023-06-23 11:27:12,068:INFO:                shap: Not installed
2023-06-23 11:27:12,068:INFO:           interpret: Not installed
2023-06-23 11:27:12,069:INFO:                umap: Not installed
2023-06-23 11:27:12,069:INFO:    pandas_profiling: 4.2.0
2023-06-23 11:27:12,069:INFO:  explainerdashboard: Not installed
2023-06-23 11:27:12,069:INFO:             autoviz: Not installed
2023-06-23 11:27:12,069:INFO:           fairlearn: Not installed
2023-06-23 11:27:12,069:INFO:             xgboost: 1.7.4
2023-06-23 11:27:12,069:INFO:            catboost: Not installed
2023-06-23 11:27:12,069:INFO:              kmodes: Not installed
2023-06-23 11:27:12,069:INFO:             mlxtend: Not installed
2023-06-23 11:27:12,069:INFO:       statsforecast: Not installed
2023-06-23 11:27:12,069:INFO:        tune_sklearn: Not installed
2023-06-23 11:27:12,069:INFO:                 ray: Not installed
2023-06-23 11:27:12,069:INFO:            hyperopt: Not installed
2023-06-23 11:27:12,069:INFO:              optuna: Not installed
2023-06-23 11:27:12,069:INFO:               skopt: Not installed
2023-06-23 11:27:12,069:INFO:              mlflow: Not installed
2023-06-23 11:27:12,069:INFO:              gradio: Not installed
2023-06-23 11:27:12,069:INFO:             fastapi: Not installed
2023-06-23 11:27:12,069:INFO:             uvicorn: Not installed
2023-06-23 11:27:12,069:INFO:              m2cgen: Not installed
2023-06-23 11:27:12,069:INFO:           evidently: Not installed
2023-06-23 11:27:12,069:INFO:               fugue: Not installed
2023-06-23 11:27:12,069:INFO:           streamlit: 1.23.1
2023-06-23 11:27:12,069:INFO:             prophet: Not installed
2023-06-23 11:27:12,069:INFO:None
2023-06-23 11:27:12,069:INFO:Set up data.
2023-06-23 11:27:12,076:INFO:Set up train/test split.
2023-06-23 11:27:18,318:INFO:PyCaret ClassificationExperiment
2023-06-23 11:27:18,318:INFO:Logging name: clf-default-name
2023-06-23 11:27:18,318:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-23 11:27:18,318:INFO:version 3.0.2
2023-06-23 11:27:18,318:INFO:Initializing setup()
2023-06-23 11:27:18,318:INFO:self.USI: 5d5b
2023-06-23 11:27:18,318:INFO:self._variable_keys: {'exp_name_log', 'X_test', 'USI', 'y', 'pipeline', 'gpu_param', 'idx', 'is_multiclass', 'y_test', 'logging_param', 'fold_shuffle_param', 'X_train', 'html_param', 'gpu_n_jobs_param', 'memory', 'y_train', 'fold_generator', 'X', 'fix_imbalance', 'log_plots_param', 'data', 'target_param', '_ml_usecase', 'n_jobs_param', 'seed', 'fold_groups_param', '_available_plots', 'exp_id'}
2023-06-23 11:27:18,318:INFO:Checking environment
2023-06-23 11:27:18,318:INFO:python_version: 3.9.5
2023-06-23 11:27:18,318:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-23 11:27:18,318:INFO:machine: AMD64
2023-06-23 11:27:18,318:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-23 11:27:18,321:INFO:Memory: svmem(total=17102532608, available=8219389952, percent=51.9, used=8883142656, free=8219389952)
2023-06-23 11:27:18,321:INFO:Physical Core: 8
2023-06-23 11:27:18,321:INFO:Logical Core: 16
2023-06-23 11:27:18,321:INFO:Checking libraries
2023-06-23 11:27:18,321:INFO:System:
2023-06-23 11:27:18,321:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-23 11:27:18,321:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-23 11:27:18,321:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-23 11:27:18,321:INFO:PyCaret required dependencies:
2023-06-23 11:27:18,321:INFO:                 pip: 23.1.2
2023-06-23 11:27:18,321:INFO:          setuptools: 56.0.0
2023-06-23 11:27:18,321:INFO:             pycaret: 3.0.2
2023-06-23 11:27:18,321:INFO:             IPython: 8.14.0
2023-06-23 11:27:18,321:INFO:          ipywidgets: 8.0.6
2023-06-23 11:27:18,321:INFO:                tqdm: 4.65.0
2023-06-23 11:27:18,321:INFO:               numpy: 1.22.3
2023-06-23 11:27:18,322:INFO:              pandas: 1.4.2
2023-06-23 11:27:18,322:INFO:              jinja2: 3.1.2
2023-06-23 11:27:18,322:INFO:               scipy: 1.8.0
2023-06-23 11:27:18,322:INFO:              joblib: 1.2.0
2023-06-23 11:27:18,322:INFO:             sklearn: 1.2.2
2023-06-23 11:27:18,322:INFO:                pyod: 1.0.9
2023-06-23 11:27:18,322:INFO:            imblearn: 0.10.1
2023-06-23 11:27:18,322:INFO:   category_encoders: 2.6.1
2023-06-23 11:27:18,322:INFO:            lightgbm: 3.3.5
2023-06-23 11:27:18,322:INFO:               numba: 0.57.0
2023-06-23 11:27:18,322:INFO:            requests: 2.27.1
2023-06-23 11:27:18,322:INFO:          matplotlib: 3.5.1
2023-06-23 11:27:18,322:INFO:          scikitplot: 0.3.7
2023-06-23 11:27:18,322:INFO:         yellowbrick: 1.5
2023-06-23 11:27:18,322:INFO:              plotly: 5.10.0
2023-06-23 11:27:18,322:INFO:             kaleido: 0.2.1
2023-06-23 11:27:18,322:INFO:         statsmodels: 0.14.0
2023-06-23 11:27:18,322:INFO:              sktime: 0.17.0
2023-06-23 11:27:18,322:INFO:               tbats: 1.1.3
2023-06-23 11:27:18,322:INFO:            pmdarima: 2.0.3
2023-06-23 11:27:18,322:INFO:              psutil: 5.9.5
2023-06-23 11:27:18,322:INFO:PyCaret optional dependencies:
2023-06-23 11:27:18,322:INFO:                shap: Not installed
2023-06-23 11:27:18,322:INFO:           interpret: Not installed
2023-06-23 11:27:18,322:INFO:                umap: Not installed
2023-06-23 11:27:18,322:INFO:    pandas_profiling: 4.2.0
2023-06-23 11:27:18,322:INFO:  explainerdashboard: Not installed
2023-06-23 11:27:18,322:INFO:             autoviz: Not installed
2023-06-23 11:27:18,322:INFO:           fairlearn: Not installed
2023-06-23 11:27:18,322:INFO:             xgboost: 1.7.4
2023-06-23 11:27:18,322:INFO:            catboost: Not installed
2023-06-23 11:27:18,322:INFO:              kmodes: Not installed
2023-06-23 11:27:18,322:INFO:             mlxtend: Not installed
2023-06-23 11:27:18,323:INFO:       statsforecast: Not installed
2023-06-23 11:27:18,323:INFO:        tune_sklearn: Not installed
2023-06-23 11:27:18,323:INFO:                 ray: Not installed
2023-06-23 11:27:18,323:INFO:            hyperopt: Not installed
2023-06-23 11:27:18,323:INFO:              optuna: Not installed
2023-06-23 11:27:18,323:INFO:               skopt: Not installed
2023-06-23 11:27:18,323:INFO:              mlflow: Not installed
2023-06-23 11:27:18,323:INFO:              gradio: Not installed
2023-06-23 11:27:18,323:INFO:             fastapi: Not installed
2023-06-23 11:27:18,323:INFO:             uvicorn: Not installed
2023-06-23 11:27:18,323:INFO:              m2cgen: Not installed
2023-06-23 11:27:18,323:INFO:           evidently: Not installed
2023-06-23 11:27:18,323:INFO:               fugue: Not installed
2023-06-23 11:27:18,323:INFO:           streamlit: 1.23.1
2023-06-23 11:27:18,323:INFO:             prophet: Not installed
2023-06-23 11:27:18,323:INFO:None
2023-06-23 11:27:18,323:INFO:Set up data.
2023-06-23 11:27:18,330:INFO:Set up train/test split.
