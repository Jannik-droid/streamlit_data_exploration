2023-06-17 12:35:52,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 12:35:52,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 12:35:52,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 12:35:52,421:WARNING:
'cuml' is a soft dependency and not included in the pycaret installation. Please run: `pip install cuml` to install.
2023-06-17 12:35:53,523:WARNING:
'prophet' is a soft dependency and not included in the pycaret installation. Please run: `pip install prophet` to install.
2023-06-17 12:39:17,285:INFO:PyCaret RegressionExperiment
2023-06-17 12:39:17,285:INFO:Logging name: reg-default-name
2023-06-17 12:39:17,285:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:39:17,285:INFO:version 3.0.2
2023-06-17 12:39:17,285:INFO:Initializing setup()
2023-06-17 12:39:17,285:INFO:self.USI: 8026
2023-06-17 12:39:17,285:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:39:17,285:INFO:Checking environment
2023-06-17 12:39:17,285:INFO:python_version: 3.9.5
2023-06-17 12:39:17,285:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:39:17,285:INFO:machine: AMD64
2023-06-17 12:39:17,295:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:39:17,299:INFO:Memory: svmem(total=17102532608, available=9215066112, percent=46.1, used=7887466496, free=9215066112)
2023-06-17 12:39:17,299:INFO:Physical Core: 8
2023-06-17 12:39:17,299:INFO:Logical Core: 16
2023-06-17 12:39:17,300:INFO:Checking libraries
2023-06-17 12:39:17,300:INFO:System:
2023-06-17 12:39:17,300:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:39:17,300:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:39:17,300:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:39:17,300:INFO:PyCaret required dependencies:
2023-06-17 12:39:17,300:INFO:                 pip: 23.1.2
2023-06-17 12:39:17,300:INFO:          setuptools: 56.0.0
2023-06-17 12:39:17,300:INFO:             pycaret: 3.0.2
2023-06-17 12:39:17,300:INFO:             IPython: 8.14.0
2023-06-17 12:39:17,300:INFO:          ipywidgets: 8.0.6
2023-06-17 12:39:17,300:INFO:                tqdm: 4.65.0
2023-06-17 12:39:17,300:INFO:               numpy: 1.22.3
2023-06-17 12:39:17,300:INFO:              pandas: 1.4.2
2023-06-17 12:39:17,300:INFO:              jinja2: 3.1.2
2023-06-17 12:39:17,300:INFO:               scipy: 1.8.0
2023-06-17 12:39:17,300:INFO:              joblib: 1.2.0
2023-06-17 12:39:17,300:INFO:             sklearn: 1.2.2
2023-06-17 12:39:17,300:INFO:                pyod: 1.0.9
2023-06-17 12:39:17,300:INFO:            imblearn: 0.10.1
2023-06-17 12:39:17,300:INFO:   category_encoders: 2.6.1
2023-06-17 12:39:17,300:INFO:            lightgbm: 3.3.5
2023-06-17 12:39:17,300:INFO:               numba: 0.57.0
2023-06-17 12:39:17,300:INFO:            requests: 2.27.1
2023-06-17 12:39:17,300:INFO:          matplotlib: 3.5.1
2023-06-17 12:39:17,300:INFO:          scikitplot: 0.3.7
2023-06-17 12:39:17,300:INFO:         yellowbrick: 1.5
2023-06-17 12:39:17,301:INFO:              plotly: 5.10.0
2023-06-17 12:39:17,301:INFO:             kaleido: 0.2.1
2023-06-17 12:39:17,301:INFO:         statsmodels: 0.14.0
2023-06-17 12:39:17,301:INFO:              sktime: 0.17.0
2023-06-17 12:39:17,301:INFO:               tbats: 1.1.3
2023-06-17 12:39:17,301:INFO:            pmdarima: 2.0.3
2023-06-17 12:39:17,301:INFO:              psutil: 5.9.5
2023-06-17 12:39:17,301:INFO:PyCaret optional dependencies:
2023-06-17 12:39:17,308:INFO:                shap: Not installed
2023-06-17 12:39:17,308:INFO:           interpret: Not installed
2023-06-17 12:39:17,308:INFO:                umap: Not installed
2023-06-17 12:39:17,308:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:39:17,308:INFO:  explainerdashboard: Not installed
2023-06-17 12:39:17,308:INFO:             autoviz: Not installed
2023-06-17 12:39:17,308:INFO:           fairlearn: Not installed
2023-06-17 12:39:17,308:INFO:             xgboost: 1.7.4
2023-06-17 12:39:17,308:INFO:            catboost: Not installed
2023-06-17 12:39:17,309:INFO:              kmodes: Not installed
2023-06-17 12:39:17,309:INFO:             mlxtend: Not installed
2023-06-17 12:39:17,309:INFO:       statsforecast: Not installed
2023-06-17 12:39:17,309:INFO:        tune_sklearn: Not installed
2023-06-17 12:39:17,309:INFO:                 ray: Not installed
2023-06-17 12:39:17,309:INFO:            hyperopt: Not installed
2023-06-17 12:39:17,309:INFO:              optuna: Not installed
2023-06-17 12:39:17,309:INFO:               skopt: Not installed
2023-06-17 12:39:17,309:INFO:              mlflow: Not installed
2023-06-17 12:39:17,309:INFO:              gradio: Not installed
2023-06-17 12:39:17,309:INFO:             fastapi: Not installed
2023-06-17 12:39:17,309:INFO:             uvicorn: Not installed
2023-06-17 12:39:17,309:INFO:              m2cgen: Not installed
2023-06-17 12:39:17,309:INFO:           evidently: Not installed
2023-06-17 12:39:17,309:INFO:               fugue: Not installed
2023-06-17 12:39:17,309:INFO:           streamlit: 1.23.1
2023-06-17 12:39:17,309:INFO:             prophet: Not installed
2023-06-17 12:39:17,309:INFO:None
2023-06-17 12:39:17,309:INFO:Set up data.
2023-06-17 12:39:17,314:INFO:Set up train/test split.
2023-06-17 12:39:17,318:INFO:Set up index.
2023-06-17 12:39:17,319:INFO:Set up folding strategy.
2023-06-17 12:39:17,319:INFO:Assigning column types.
2023-06-17 12:39:17,321:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:39:17,321:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,326:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,331:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,388:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,431:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,432:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:17,578:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:17,578:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,583:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,587:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,643:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,686:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,687:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:17,690:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:17,690:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:39:17,695:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,699:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,753:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,796:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,796:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:17,799:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:17,803:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,808:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,861:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,904:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,904:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:17,907:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:17,907:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:39:17,916:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:17,969:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,012:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,012:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,014:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,023:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,079:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,122:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,123:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,125:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,126:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:39:18,190:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,233:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,233:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,236:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,299:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,341:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,341:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,344:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,344:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:39:18,408:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,451:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,453:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,517:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:18,561:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,564:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,564:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:39:18,671:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,674:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,779:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:18,782:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:18,791:INFO:Preparing preprocessing pipeline...
2023-06-17 12:39:18,791:INFO:Set up simple imputation.
2023-06-17 12:39:18,793:INFO:Set up encoding of categorical features.
2023-06-17 12:39:31,855:INFO:PyCaret RegressionExperiment
2023-06-17 12:39:31,855:INFO:Logging name: reg-default-name
2023-06-17 12:39:31,855:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:39:31,855:INFO:version 3.0.2
2023-06-17 12:39:31,855:INFO:Initializing setup()
2023-06-17 12:39:31,855:INFO:self.USI: fc57
2023-06-17 12:39:31,855:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:39:31,855:INFO:Checking environment
2023-06-17 12:39:31,855:INFO:python_version: 3.9.5
2023-06-17 12:39:31,855:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:39:31,855:INFO:machine: AMD64
2023-06-17 12:39:31,855:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:39:31,859:INFO:Memory: svmem(total=17102532608, available=9234493440, percent=46.0, used=7868039168, free=9234493440)
2023-06-17 12:39:31,859:INFO:Physical Core: 8
2023-06-17 12:39:31,859:INFO:Logical Core: 16
2023-06-17 12:39:31,860:INFO:Checking libraries
2023-06-17 12:39:31,860:INFO:System:
2023-06-17 12:39:31,860:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:39:31,860:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:39:31,860:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:39:31,860:INFO:PyCaret required dependencies:
2023-06-17 12:39:31,860:INFO:                 pip: 23.1.2
2023-06-17 12:39:31,860:INFO:          setuptools: 56.0.0
2023-06-17 12:39:31,860:INFO:             pycaret: 3.0.2
2023-06-17 12:39:31,860:INFO:             IPython: 8.14.0
2023-06-17 12:39:31,860:INFO:          ipywidgets: 8.0.6
2023-06-17 12:39:31,860:INFO:                tqdm: 4.65.0
2023-06-17 12:39:31,860:INFO:               numpy: 1.22.3
2023-06-17 12:39:31,860:INFO:              pandas: 1.4.2
2023-06-17 12:39:31,860:INFO:              jinja2: 3.1.2
2023-06-17 12:39:31,860:INFO:               scipy: 1.8.0
2023-06-17 12:39:31,860:INFO:              joblib: 1.2.0
2023-06-17 12:39:31,860:INFO:             sklearn: 1.2.2
2023-06-17 12:39:31,860:INFO:                pyod: 1.0.9
2023-06-17 12:39:31,860:INFO:            imblearn: 0.10.1
2023-06-17 12:39:31,860:INFO:   category_encoders: 2.6.1
2023-06-17 12:39:31,860:INFO:            lightgbm: 3.3.5
2023-06-17 12:39:31,860:INFO:               numba: 0.57.0
2023-06-17 12:39:31,861:INFO:            requests: 2.27.1
2023-06-17 12:39:31,861:INFO:          matplotlib: 3.5.1
2023-06-17 12:39:31,861:INFO:          scikitplot: 0.3.7
2023-06-17 12:39:31,861:INFO:         yellowbrick: 1.5
2023-06-17 12:39:31,861:INFO:              plotly: 5.10.0
2023-06-17 12:39:31,861:INFO:             kaleido: 0.2.1
2023-06-17 12:39:31,861:INFO:         statsmodels: 0.14.0
2023-06-17 12:39:31,861:INFO:              sktime: 0.17.0
2023-06-17 12:39:31,861:INFO:               tbats: 1.1.3
2023-06-17 12:39:31,861:INFO:            pmdarima: 2.0.3
2023-06-17 12:39:31,861:INFO:              psutil: 5.9.5
2023-06-17 12:39:31,861:INFO:PyCaret optional dependencies:
2023-06-17 12:39:31,861:INFO:                shap: Not installed
2023-06-17 12:39:31,861:INFO:           interpret: Not installed
2023-06-17 12:39:31,861:INFO:                umap: Not installed
2023-06-17 12:39:31,861:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:39:31,861:INFO:  explainerdashboard: Not installed
2023-06-17 12:39:31,861:INFO:             autoviz: Not installed
2023-06-17 12:39:31,861:INFO:           fairlearn: Not installed
2023-06-17 12:39:31,861:INFO:             xgboost: 1.7.4
2023-06-17 12:39:31,861:INFO:            catboost: Not installed
2023-06-17 12:39:31,861:INFO:              kmodes: Not installed
2023-06-17 12:39:31,861:INFO:             mlxtend: Not installed
2023-06-17 12:39:31,862:INFO:       statsforecast: Not installed
2023-06-17 12:39:31,862:INFO:        tune_sklearn: Not installed
2023-06-17 12:39:31,862:INFO:                 ray: Not installed
2023-06-17 12:39:31,862:INFO:            hyperopt: Not installed
2023-06-17 12:39:31,862:INFO:              optuna: Not installed
2023-06-17 12:39:31,862:INFO:               skopt: Not installed
2023-06-17 12:39:31,862:INFO:              mlflow: Not installed
2023-06-17 12:39:31,862:INFO:              gradio: Not installed
2023-06-17 12:39:31,862:INFO:             fastapi: Not installed
2023-06-17 12:39:31,862:INFO:             uvicorn: Not installed
2023-06-17 12:39:31,862:INFO:              m2cgen: Not installed
2023-06-17 12:39:31,862:INFO:           evidently: Not installed
2023-06-17 12:39:31,862:INFO:               fugue: Not installed
2023-06-17 12:39:31,862:INFO:           streamlit: 1.23.1
2023-06-17 12:39:31,862:INFO:             prophet: Not installed
2023-06-17 12:39:31,862:INFO:None
2023-06-17 12:39:31,862:INFO:Set up data.
2023-06-17 12:39:39,848:INFO:PyCaret RegressionExperiment
2023-06-17 12:39:39,848:INFO:Logging name: reg-default-name
2023-06-17 12:39:39,848:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:39:39,848:INFO:version 3.0.2
2023-06-17 12:39:39,848:INFO:Initializing setup()
2023-06-17 12:39:39,848:INFO:self.USI: d2f2
2023-06-17 12:39:39,848:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:39:39,848:INFO:Checking environment
2023-06-17 12:39:39,848:INFO:python_version: 3.9.5
2023-06-17 12:39:39,848:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:39:39,848:INFO:machine: AMD64
2023-06-17 12:39:39,848:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:39:39,852:INFO:Memory: svmem(total=17102532608, available=9243717632, percent=46.0, used=7858814976, free=9243717632)
2023-06-17 12:39:39,852:INFO:Physical Core: 8
2023-06-17 12:39:39,852:INFO:Logical Core: 16
2023-06-17 12:39:39,852:INFO:Checking libraries
2023-06-17 12:39:39,852:INFO:System:
2023-06-17 12:39:39,852:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:39:39,852:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:39:39,852:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:39:39,853:INFO:PyCaret required dependencies:
2023-06-17 12:39:39,853:INFO:                 pip: 23.1.2
2023-06-17 12:39:39,853:INFO:          setuptools: 56.0.0
2023-06-17 12:39:39,853:INFO:             pycaret: 3.0.2
2023-06-17 12:39:39,853:INFO:             IPython: 8.14.0
2023-06-17 12:39:39,853:INFO:          ipywidgets: 8.0.6
2023-06-17 12:39:39,853:INFO:                tqdm: 4.65.0
2023-06-17 12:39:39,853:INFO:               numpy: 1.22.3
2023-06-17 12:39:39,853:INFO:              pandas: 1.4.2
2023-06-17 12:39:39,853:INFO:              jinja2: 3.1.2
2023-06-17 12:39:39,853:INFO:               scipy: 1.8.0
2023-06-17 12:39:39,853:INFO:              joblib: 1.2.0
2023-06-17 12:39:39,853:INFO:             sklearn: 1.2.2
2023-06-17 12:39:39,853:INFO:                pyod: 1.0.9
2023-06-17 12:39:39,853:INFO:            imblearn: 0.10.1
2023-06-17 12:39:39,853:INFO:   category_encoders: 2.6.1
2023-06-17 12:39:39,853:INFO:            lightgbm: 3.3.5
2023-06-17 12:39:39,853:INFO:               numba: 0.57.0
2023-06-17 12:39:39,853:INFO:            requests: 2.27.1
2023-06-17 12:39:39,853:INFO:          matplotlib: 3.5.1
2023-06-17 12:39:39,853:INFO:          scikitplot: 0.3.7
2023-06-17 12:39:39,853:INFO:         yellowbrick: 1.5
2023-06-17 12:39:39,853:INFO:              plotly: 5.10.0
2023-06-17 12:39:39,853:INFO:             kaleido: 0.2.1
2023-06-17 12:39:39,853:INFO:         statsmodels: 0.14.0
2023-06-17 12:39:39,853:INFO:              sktime: 0.17.0
2023-06-17 12:39:39,853:INFO:               tbats: 1.1.3
2023-06-17 12:39:39,853:INFO:            pmdarima: 2.0.3
2023-06-17 12:39:39,853:INFO:              psutil: 5.9.5
2023-06-17 12:39:39,854:INFO:PyCaret optional dependencies:
2023-06-17 12:39:39,854:INFO:                shap: Not installed
2023-06-17 12:39:39,854:INFO:           interpret: Not installed
2023-06-17 12:39:39,854:INFO:                umap: Not installed
2023-06-17 12:39:39,854:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:39:39,854:INFO:  explainerdashboard: Not installed
2023-06-17 12:39:39,854:INFO:             autoviz: Not installed
2023-06-17 12:39:39,854:INFO:           fairlearn: Not installed
2023-06-17 12:39:39,854:INFO:             xgboost: 1.7.4
2023-06-17 12:39:39,854:INFO:            catboost: Not installed
2023-06-17 12:39:39,854:INFO:              kmodes: Not installed
2023-06-17 12:39:39,854:INFO:             mlxtend: Not installed
2023-06-17 12:39:39,854:INFO:       statsforecast: Not installed
2023-06-17 12:39:39,854:INFO:        tune_sklearn: Not installed
2023-06-17 12:39:39,854:INFO:                 ray: Not installed
2023-06-17 12:39:39,854:INFO:            hyperopt: Not installed
2023-06-17 12:39:39,854:INFO:              optuna: Not installed
2023-06-17 12:39:39,854:INFO:               skopt: Not installed
2023-06-17 12:39:39,854:INFO:              mlflow: Not installed
2023-06-17 12:39:39,854:INFO:              gradio: Not installed
2023-06-17 12:39:39,854:INFO:             fastapi: Not installed
2023-06-17 12:39:39,854:INFO:             uvicorn: Not installed
2023-06-17 12:39:39,854:INFO:              m2cgen: Not installed
2023-06-17 12:39:39,854:INFO:           evidently: Not installed
2023-06-17 12:39:39,854:INFO:               fugue: Not installed
2023-06-17 12:39:39,854:INFO:           streamlit: 1.23.1
2023-06-17 12:39:39,854:INFO:             prophet: Not installed
2023-06-17 12:39:39,854:INFO:None
2023-06-17 12:39:39,854:INFO:Set up data.
2023-06-17 12:39:39,860:INFO:Set up train/test split.
2023-06-17 12:39:39,865:INFO:Set up index.
2023-06-17 12:39:39,865:INFO:Set up folding strategy.
2023-06-17 12:39:39,865:INFO:Assigning column types.
2023-06-17 12:39:39,868:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:39:39,868:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,873:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,877:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,934:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,977:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,977:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:39,980:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:39,980:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,985:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:39,989:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,044:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,087:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,090:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,090:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:39:40,094:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,099:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,154:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,197:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,197:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,200:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,204:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,209:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,265:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,309:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,309:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,312:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:39:40,321:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,376:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,418:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,418:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,421:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,430:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,485:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,529:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,529:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,532:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,532:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:39:40,595:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,637:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,638:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,640:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,704:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,746:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,747:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,749:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,749:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:39:40,813:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,857:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,859:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,922:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:39:40,965:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:40,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:40,968:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:39:41,075:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:41,077:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:41,184:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:39:41,187:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:39:41,187:INFO:Preparing preprocessing pipeline...
2023-06-17 12:39:41,187:INFO:Set up simple imputation.
2023-06-17 12:39:41,189:INFO:Set up encoding of categorical features.
2023-06-17 12:40:28,743:INFO:PyCaret ClassificationExperiment
2023-06-17 12:40:28,743:INFO:Logging name: clf-default-name
2023-06-17 12:40:28,743:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:40:28,743:INFO:version 3.0.2
2023-06-17 12:40:28,744:INFO:Initializing setup()
2023-06-17 12:40:28,744:INFO:self.USI: 0d19
2023-06-17 12:40:28,744:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:40:28,744:INFO:Checking environment
2023-06-17 12:40:28,744:INFO:python_version: 3.9.5
2023-06-17 12:40:28,744:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:40:28,744:INFO:machine: AMD64
2023-06-17 12:40:28,744:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:40:28,747:INFO:Memory: svmem(total=17102532608, available=9190006784, percent=46.3, used=7912525824, free=9190006784)
2023-06-17 12:40:28,747:INFO:Physical Core: 8
2023-06-17 12:40:28,748:INFO:Logical Core: 16
2023-06-17 12:40:28,748:INFO:Checking libraries
2023-06-17 12:40:28,748:INFO:System:
2023-06-17 12:40:28,748:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:40:28,748:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:40:28,748:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:40:28,748:INFO:PyCaret required dependencies:
2023-06-17 12:40:28,748:INFO:                 pip: 23.1.2
2023-06-17 12:40:28,748:INFO:          setuptools: 56.0.0
2023-06-17 12:40:28,748:INFO:             pycaret: 3.0.2
2023-06-17 12:40:28,748:INFO:             IPython: 8.14.0
2023-06-17 12:40:28,748:INFO:          ipywidgets: 8.0.6
2023-06-17 12:40:28,748:INFO:                tqdm: 4.65.0
2023-06-17 12:40:28,748:INFO:               numpy: 1.22.3
2023-06-17 12:40:28,748:INFO:              pandas: 1.4.2
2023-06-17 12:40:28,748:INFO:              jinja2: 3.1.2
2023-06-17 12:40:28,748:INFO:               scipy: 1.8.0
2023-06-17 12:40:28,748:INFO:              joblib: 1.2.0
2023-06-17 12:40:28,748:INFO:             sklearn: 1.2.2
2023-06-17 12:40:28,748:INFO:                pyod: 1.0.9
2023-06-17 12:40:28,748:INFO:            imblearn: 0.10.1
2023-06-17 12:40:28,748:INFO:   category_encoders: 2.6.1
2023-06-17 12:40:28,748:INFO:            lightgbm: 3.3.5
2023-06-17 12:40:28,748:INFO:               numba: 0.57.0
2023-06-17 12:40:28,748:INFO:            requests: 2.27.1
2023-06-17 12:40:28,748:INFO:          matplotlib: 3.5.1
2023-06-17 12:40:28,748:INFO:          scikitplot: 0.3.7
2023-06-17 12:40:28,748:INFO:         yellowbrick: 1.5
2023-06-17 12:40:28,748:INFO:              plotly: 5.10.0
2023-06-17 12:40:28,748:INFO:             kaleido: 0.2.1
2023-06-17 12:40:28,748:INFO:         statsmodels: 0.14.0
2023-06-17 12:40:28,748:INFO:              sktime: 0.17.0
2023-06-17 12:40:28,749:INFO:               tbats: 1.1.3
2023-06-17 12:40:28,749:INFO:            pmdarima: 2.0.3
2023-06-17 12:40:28,749:INFO:              psutil: 5.9.5
2023-06-17 12:40:28,749:INFO:PyCaret optional dependencies:
2023-06-17 12:40:28,749:INFO:                shap: Not installed
2023-06-17 12:40:28,749:INFO:           interpret: Not installed
2023-06-17 12:40:28,749:INFO:                umap: Not installed
2023-06-17 12:40:28,749:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:40:28,749:INFO:  explainerdashboard: Not installed
2023-06-17 12:40:28,749:INFO:             autoviz: Not installed
2023-06-17 12:40:28,749:INFO:           fairlearn: Not installed
2023-06-17 12:40:28,749:INFO:             xgboost: 1.7.4
2023-06-17 12:40:28,749:INFO:            catboost: Not installed
2023-06-17 12:40:28,749:INFO:              kmodes: Not installed
2023-06-17 12:40:28,749:INFO:             mlxtend: Not installed
2023-06-17 12:40:28,749:INFO:       statsforecast: Not installed
2023-06-17 12:40:28,749:INFO:        tune_sklearn: Not installed
2023-06-17 12:40:28,749:INFO:                 ray: Not installed
2023-06-17 12:40:28,749:INFO:            hyperopt: Not installed
2023-06-17 12:40:28,749:INFO:              optuna: Not installed
2023-06-17 12:40:28,749:INFO:               skopt: Not installed
2023-06-17 12:40:28,749:INFO:              mlflow: Not installed
2023-06-17 12:40:28,749:INFO:              gradio: Not installed
2023-06-17 12:40:28,749:INFO:             fastapi: Not installed
2023-06-17 12:40:28,749:INFO:             uvicorn: Not installed
2023-06-17 12:40:28,749:INFO:              m2cgen: Not installed
2023-06-17 12:40:28,749:INFO:           evidently: Not installed
2023-06-17 12:40:28,749:INFO:               fugue: Not installed
2023-06-17 12:40:28,749:INFO:           streamlit: 1.23.1
2023-06-17 12:40:28,749:INFO:             prophet: Not installed
2023-06-17 12:40:28,750:INFO:None
2023-06-17 12:40:28,750:INFO:Set up data.
2023-06-17 12:40:28,755:INFO:Set up train/test split.
2023-06-17 12:40:28,758:INFO:Set up index.
2023-06-17 12:40:28,758:INFO:Set up folding strategy.
2023-06-17 12:40:28,759:INFO:Assigning column types.
2023-06-17 12:40:28,761:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:40:28,804:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,807:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,843:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:28,846:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:28,891:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,891:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,919:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:28,922:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:28,922:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:40:28,967:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:40:28,994:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:28,997:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:29,041:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:40:29,068:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:29,071:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:29,071:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:40:29,142:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:29,144:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:29,215:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:40:29,218:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:40:29,218:INFO:Preparing preprocessing pipeline...
2023-06-17 12:40:29,220:INFO:Set up simple imputation.
2023-06-17 12:40:29,222:INFO:Set up encoding of categorical features.
2023-06-17 12:42:50,295:INFO:PyCaret ClassificationExperiment
2023-06-17 12:42:50,295:INFO:Logging name: clf-default-name
2023-06-17 12:42:50,295:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:42:50,295:INFO:version 3.0.2
2023-06-17 12:42:50,295:INFO:Initializing setup()
2023-06-17 12:42:50,295:INFO:self.USI: 0ff7
2023-06-17 12:42:50,295:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:42:50,295:INFO:Checking environment
2023-06-17 12:42:50,296:INFO:python_version: 3.9.5
2023-06-17 12:42:50,296:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:42:50,296:INFO:machine: AMD64
2023-06-17 12:42:50,296:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:42:50,300:INFO:Memory: svmem(total=17102532608, available=9206042624, percent=46.2, used=7896489984, free=9206042624)
2023-06-17 12:42:50,300:INFO:Physical Core: 8
2023-06-17 12:42:50,300:INFO:Logical Core: 16
2023-06-17 12:42:50,300:INFO:Checking libraries
2023-06-17 12:42:50,300:INFO:System:
2023-06-17 12:42:50,300:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:42:50,300:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:42:50,300:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:42:50,300:INFO:PyCaret required dependencies:
2023-06-17 12:42:50,300:INFO:                 pip: 23.1.2
2023-06-17 12:42:50,300:INFO:          setuptools: 56.0.0
2023-06-17 12:42:50,300:INFO:             pycaret: 3.0.2
2023-06-17 12:42:50,300:INFO:             IPython: 8.14.0
2023-06-17 12:42:50,300:INFO:          ipywidgets: 8.0.6
2023-06-17 12:42:50,300:INFO:                tqdm: 4.65.0
2023-06-17 12:42:50,300:INFO:               numpy: 1.22.3
2023-06-17 12:42:50,300:INFO:              pandas: 1.4.2
2023-06-17 12:42:50,300:INFO:              jinja2: 3.1.2
2023-06-17 12:42:50,300:INFO:               scipy: 1.8.0
2023-06-17 12:42:50,300:INFO:              joblib: 1.2.0
2023-06-17 12:42:50,300:INFO:             sklearn: 1.2.2
2023-06-17 12:42:50,300:INFO:                pyod: 1.0.9
2023-06-17 12:42:50,300:INFO:            imblearn: 0.10.1
2023-06-17 12:42:50,300:INFO:   category_encoders: 2.6.1
2023-06-17 12:42:50,300:INFO:            lightgbm: 3.3.5
2023-06-17 12:42:50,300:INFO:               numba: 0.57.0
2023-06-17 12:42:50,301:INFO:            requests: 2.27.1
2023-06-17 12:42:50,301:INFO:          matplotlib: 3.5.1
2023-06-17 12:42:50,301:INFO:          scikitplot: 0.3.7
2023-06-17 12:42:50,301:INFO:         yellowbrick: 1.5
2023-06-17 12:42:50,301:INFO:              plotly: 5.10.0
2023-06-17 12:42:50,301:INFO:             kaleido: 0.2.1
2023-06-17 12:42:50,301:INFO:         statsmodels: 0.14.0
2023-06-17 12:42:50,301:INFO:              sktime: 0.17.0
2023-06-17 12:42:50,301:INFO:               tbats: 1.1.3
2023-06-17 12:42:50,301:INFO:            pmdarima: 2.0.3
2023-06-17 12:42:50,301:INFO:              psutil: 5.9.5
2023-06-17 12:42:50,301:INFO:PyCaret optional dependencies:
2023-06-17 12:42:50,301:INFO:                shap: Not installed
2023-06-17 12:42:50,301:INFO:           interpret: Not installed
2023-06-17 12:42:50,301:INFO:                umap: Not installed
2023-06-17 12:42:50,301:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:42:50,301:INFO:  explainerdashboard: Not installed
2023-06-17 12:42:50,301:INFO:             autoviz: Not installed
2023-06-17 12:42:50,301:INFO:           fairlearn: Not installed
2023-06-17 12:42:50,301:INFO:             xgboost: 1.7.4
2023-06-17 12:42:50,301:INFO:            catboost: Not installed
2023-06-17 12:42:50,301:INFO:              kmodes: Not installed
2023-06-17 12:42:50,301:INFO:             mlxtend: Not installed
2023-06-17 12:42:50,301:INFO:       statsforecast: Not installed
2023-06-17 12:42:50,301:INFO:        tune_sklearn: Not installed
2023-06-17 12:42:50,301:INFO:                 ray: Not installed
2023-06-17 12:42:50,301:INFO:            hyperopt: Not installed
2023-06-17 12:42:50,302:INFO:              optuna: Not installed
2023-06-17 12:42:50,302:INFO:               skopt: Not installed
2023-06-17 12:42:50,302:INFO:              mlflow: Not installed
2023-06-17 12:42:50,302:INFO:              gradio: Not installed
2023-06-17 12:42:50,302:INFO:             fastapi: Not installed
2023-06-17 12:42:50,302:INFO:             uvicorn: Not installed
2023-06-17 12:42:50,302:INFO:              m2cgen: Not installed
2023-06-17 12:42:50,302:INFO:           evidently: Not installed
2023-06-17 12:42:50,302:INFO:               fugue: Not installed
2023-06-17 12:42:50,302:INFO:           streamlit: 1.23.1
2023-06-17 12:42:50,302:INFO:             prophet: Not installed
2023-06-17 12:42:50,302:INFO:None
2023-06-17 12:42:50,302:INFO:Set up data.
2023-06-17 12:42:50,307:INFO:Set up train/test split.
2023-06-17 12:42:58,197:INFO:PyCaret ClassificationExperiment
2023-06-17 12:42:58,197:INFO:Logging name: clf-default-name
2023-06-17 12:42:58,197:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:42:58,197:INFO:version 3.0.2
2023-06-17 12:42:58,197:INFO:Initializing setup()
2023-06-17 12:42:58,197:INFO:self.USI: 51d1
2023-06-17 12:42:58,197:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:42:58,197:INFO:Checking environment
2023-06-17 12:42:58,197:INFO:python_version: 3.9.5
2023-06-17 12:42:58,197:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:42:58,198:INFO:machine: AMD64
2023-06-17 12:42:58,198:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:42:58,201:INFO:Memory: svmem(total=17102532608, available=9197432832, percent=46.2, used=7905099776, free=9197432832)
2023-06-17 12:42:58,202:INFO:Physical Core: 8
2023-06-17 12:42:58,202:INFO:Logical Core: 16
2023-06-17 12:42:58,202:INFO:Checking libraries
2023-06-17 12:42:58,202:INFO:System:
2023-06-17 12:42:58,202:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:42:58,202:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:42:58,202:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:42:58,202:INFO:PyCaret required dependencies:
2023-06-17 12:42:58,202:INFO:                 pip: 23.1.2
2023-06-17 12:42:58,202:INFO:          setuptools: 56.0.0
2023-06-17 12:42:58,202:INFO:             pycaret: 3.0.2
2023-06-17 12:42:58,202:INFO:             IPython: 8.14.0
2023-06-17 12:42:58,202:INFO:          ipywidgets: 8.0.6
2023-06-17 12:42:58,202:INFO:                tqdm: 4.65.0
2023-06-17 12:42:58,202:INFO:               numpy: 1.22.3
2023-06-17 12:42:58,202:INFO:              pandas: 1.4.2
2023-06-17 12:42:58,202:INFO:              jinja2: 3.1.2
2023-06-17 12:42:58,202:INFO:               scipy: 1.8.0
2023-06-17 12:42:58,202:INFO:              joblib: 1.2.0
2023-06-17 12:42:58,202:INFO:             sklearn: 1.2.2
2023-06-17 12:42:58,202:INFO:                pyod: 1.0.9
2023-06-17 12:42:58,202:INFO:            imblearn: 0.10.1
2023-06-17 12:42:58,202:INFO:   category_encoders: 2.6.1
2023-06-17 12:42:58,202:INFO:            lightgbm: 3.3.5
2023-06-17 12:42:58,202:INFO:               numba: 0.57.0
2023-06-17 12:42:58,202:INFO:            requests: 2.27.1
2023-06-17 12:42:58,202:INFO:          matplotlib: 3.5.1
2023-06-17 12:42:58,202:INFO:          scikitplot: 0.3.7
2023-06-17 12:42:58,202:INFO:         yellowbrick: 1.5
2023-06-17 12:42:58,202:INFO:              plotly: 5.10.0
2023-06-17 12:42:58,202:INFO:             kaleido: 0.2.1
2023-06-17 12:42:58,202:INFO:         statsmodels: 0.14.0
2023-06-17 12:42:58,203:INFO:              sktime: 0.17.0
2023-06-17 12:42:58,203:INFO:               tbats: 1.1.3
2023-06-17 12:42:58,203:INFO:            pmdarima: 2.0.3
2023-06-17 12:42:58,203:INFO:              psutil: 5.9.5
2023-06-17 12:42:58,203:INFO:PyCaret optional dependencies:
2023-06-17 12:42:58,203:INFO:                shap: Not installed
2023-06-17 12:42:58,203:INFO:           interpret: Not installed
2023-06-17 12:42:58,203:INFO:                umap: Not installed
2023-06-17 12:42:58,203:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:42:58,203:INFO:  explainerdashboard: Not installed
2023-06-17 12:42:58,203:INFO:             autoviz: Not installed
2023-06-17 12:42:58,203:INFO:           fairlearn: Not installed
2023-06-17 12:42:58,203:INFO:             xgboost: 1.7.4
2023-06-17 12:42:58,203:INFO:            catboost: Not installed
2023-06-17 12:42:58,203:INFO:              kmodes: Not installed
2023-06-17 12:42:58,203:INFO:             mlxtend: Not installed
2023-06-17 12:42:58,203:INFO:       statsforecast: Not installed
2023-06-17 12:42:58,203:INFO:        tune_sklearn: Not installed
2023-06-17 12:42:58,203:INFO:                 ray: Not installed
2023-06-17 12:42:58,203:INFO:            hyperopt: Not installed
2023-06-17 12:42:58,203:INFO:              optuna: Not installed
2023-06-17 12:42:58,203:INFO:               skopt: Not installed
2023-06-17 12:42:58,203:INFO:              mlflow: Not installed
2023-06-17 12:42:58,203:INFO:              gradio: Not installed
2023-06-17 12:42:58,203:INFO:             fastapi: Not installed
2023-06-17 12:42:58,203:INFO:             uvicorn: Not installed
2023-06-17 12:42:58,203:INFO:              m2cgen: Not installed
2023-06-17 12:42:58,203:INFO:           evidently: Not installed
2023-06-17 12:42:58,203:INFO:               fugue: Not installed
2023-06-17 12:42:58,203:INFO:           streamlit: 1.23.1
2023-06-17 12:42:58,204:INFO:             prophet: Not installed
2023-06-17 12:42:58,204:INFO:None
2023-06-17 12:42:58,204:INFO:Set up data.
2023-06-17 12:43:00,365:INFO:PyCaret ClassificationExperiment
2023-06-17 12:43:00,366:INFO:Logging name: clf-default-name
2023-06-17 12:43:00,366:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:43:00,366:INFO:version 3.0.2
2023-06-17 12:43:00,366:INFO:Initializing setup()
2023-06-17 12:43:00,366:INFO:self.USI: 0d5a
2023-06-17 12:43:00,366:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:43:00,366:INFO:Checking environment
2023-06-17 12:43:00,366:INFO:python_version: 3.9.5
2023-06-17 12:43:00,366:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:43:00,366:INFO:machine: AMD64
2023-06-17 12:43:00,366:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:43:00,370:INFO:Memory: svmem(total=17102532608, available=9205927936, percent=46.2, used=7896604672, free=9205927936)
2023-06-17 12:43:00,370:INFO:Physical Core: 8
2023-06-17 12:43:00,370:INFO:Logical Core: 16
2023-06-17 12:43:00,370:INFO:Checking libraries
2023-06-17 12:43:00,370:INFO:System:
2023-06-17 12:43:00,370:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:43:00,370:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:43:00,370:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:43:00,370:INFO:PyCaret required dependencies:
2023-06-17 12:43:00,370:INFO:                 pip: 23.1.2
2023-06-17 12:43:00,370:INFO:          setuptools: 56.0.0
2023-06-17 12:43:00,370:INFO:             pycaret: 3.0.2
2023-06-17 12:43:00,370:INFO:             IPython: 8.14.0
2023-06-17 12:43:00,370:INFO:          ipywidgets: 8.0.6
2023-06-17 12:43:00,370:INFO:                tqdm: 4.65.0
2023-06-17 12:43:00,370:INFO:               numpy: 1.22.3
2023-06-17 12:43:00,370:INFO:              pandas: 1.4.2
2023-06-17 12:43:00,370:INFO:              jinja2: 3.1.2
2023-06-17 12:43:00,370:INFO:               scipy: 1.8.0
2023-06-17 12:43:00,370:INFO:              joblib: 1.2.0
2023-06-17 12:43:00,370:INFO:             sklearn: 1.2.2
2023-06-17 12:43:00,370:INFO:                pyod: 1.0.9
2023-06-17 12:43:00,370:INFO:            imblearn: 0.10.1
2023-06-17 12:43:00,370:INFO:   category_encoders: 2.6.1
2023-06-17 12:43:00,371:INFO:            lightgbm: 3.3.5
2023-06-17 12:43:00,371:INFO:               numba: 0.57.0
2023-06-17 12:43:00,371:INFO:            requests: 2.27.1
2023-06-17 12:43:00,371:INFO:          matplotlib: 3.5.1
2023-06-17 12:43:00,371:INFO:          scikitplot: 0.3.7
2023-06-17 12:43:00,371:INFO:         yellowbrick: 1.5
2023-06-17 12:43:00,371:INFO:              plotly: 5.10.0
2023-06-17 12:43:00,371:INFO:             kaleido: 0.2.1
2023-06-17 12:43:00,371:INFO:         statsmodels: 0.14.0
2023-06-17 12:43:00,371:INFO:              sktime: 0.17.0
2023-06-17 12:43:00,371:INFO:               tbats: 1.1.3
2023-06-17 12:43:00,371:INFO:            pmdarima: 2.0.3
2023-06-17 12:43:00,371:INFO:              psutil: 5.9.5
2023-06-17 12:43:00,371:INFO:PyCaret optional dependencies:
2023-06-17 12:43:00,371:INFO:                shap: Not installed
2023-06-17 12:43:00,371:INFO:           interpret: Not installed
2023-06-17 12:43:00,371:INFO:                umap: Not installed
2023-06-17 12:43:00,371:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:43:00,371:INFO:  explainerdashboard: Not installed
2023-06-17 12:43:00,371:INFO:             autoviz: Not installed
2023-06-17 12:43:00,371:INFO:           fairlearn: Not installed
2023-06-17 12:43:00,371:INFO:             xgboost: 1.7.4
2023-06-17 12:43:00,371:INFO:            catboost: Not installed
2023-06-17 12:43:00,371:INFO:              kmodes: Not installed
2023-06-17 12:43:00,371:INFO:             mlxtend: Not installed
2023-06-17 12:43:00,371:INFO:       statsforecast: Not installed
2023-06-17 12:43:00,371:INFO:        tune_sklearn: Not installed
2023-06-17 12:43:00,371:INFO:                 ray: Not installed
2023-06-17 12:43:00,371:INFO:            hyperopt: Not installed
2023-06-17 12:43:00,371:INFO:              optuna: Not installed
2023-06-17 12:43:00,371:INFO:               skopt: Not installed
2023-06-17 12:43:00,372:INFO:              mlflow: Not installed
2023-06-17 12:43:00,372:INFO:              gradio: Not installed
2023-06-17 12:43:00,372:INFO:             fastapi: Not installed
2023-06-17 12:43:00,372:INFO:             uvicorn: Not installed
2023-06-17 12:43:00,372:INFO:              m2cgen: Not installed
2023-06-17 12:43:00,372:INFO:           evidently: Not installed
2023-06-17 12:43:00,372:INFO:               fugue: Not installed
2023-06-17 12:43:00,372:INFO:           streamlit: 1.23.1
2023-06-17 12:43:00,372:INFO:             prophet: Not installed
2023-06-17 12:43:00,372:INFO:None
2023-06-17 12:43:00,372:INFO:Set up data.
2023-06-17 12:43:02,366:INFO:PyCaret ClassificationExperiment
2023-06-17 12:43:02,366:INFO:Logging name: clf-default-name
2023-06-17 12:43:02,366:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:43:02,366:INFO:version 3.0.2
2023-06-17 12:43:02,366:INFO:Initializing setup()
2023-06-17 12:43:02,366:INFO:self.USI: 3163
2023-06-17 12:43:02,366:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:43:02,366:INFO:Checking environment
2023-06-17 12:43:02,366:INFO:python_version: 3.9.5
2023-06-17 12:43:02,366:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:43:02,366:INFO:machine: AMD64
2023-06-17 12:43:02,366:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:43:02,370:INFO:Memory: svmem(total=17102532608, available=9211850752, percent=46.1, used=7890681856, free=9211850752)
2023-06-17 12:43:02,370:INFO:Physical Core: 8
2023-06-17 12:43:02,370:INFO:Logical Core: 16
2023-06-17 12:43:02,370:INFO:Checking libraries
2023-06-17 12:43:02,370:INFO:System:
2023-06-17 12:43:02,371:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:43:02,371:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:43:02,371:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:43:02,371:INFO:PyCaret required dependencies:
2023-06-17 12:43:02,371:INFO:                 pip: 23.1.2
2023-06-17 12:43:02,371:INFO:          setuptools: 56.0.0
2023-06-17 12:43:02,371:INFO:             pycaret: 3.0.2
2023-06-17 12:43:02,371:INFO:             IPython: 8.14.0
2023-06-17 12:43:02,371:INFO:          ipywidgets: 8.0.6
2023-06-17 12:43:02,371:INFO:                tqdm: 4.65.0
2023-06-17 12:43:02,371:INFO:               numpy: 1.22.3
2023-06-17 12:43:02,371:INFO:              pandas: 1.4.2
2023-06-17 12:43:02,371:INFO:              jinja2: 3.1.2
2023-06-17 12:43:02,371:INFO:               scipy: 1.8.0
2023-06-17 12:43:02,371:INFO:              joblib: 1.2.0
2023-06-17 12:43:02,371:INFO:             sklearn: 1.2.2
2023-06-17 12:43:02,371:INFO:                pyod: 1.0.9
2023-06-17 12:43:02,371:INFO:            imblearn: 0.10.1
2023-06-17 12:43:02,371:INFO:   category_encoders: 2.6.1
2023-06-17 12:43:02,371:INFO:            lightgbm: 3.3.5
2023-06-17 12:43:02,371:INFO:               numba: 0.57.0
2023-06-17 12:43:02,371:INFO:            requests: 2.27.1
2023-06-17 12:43:02,371:INFO:          matplotlib: 3.5.1
2023-06-17 12:43:02,371:INFO:          scikitplot: 0.3.7
2023-06-17 12:43:02,371:INFO:         yellowbrick: 1.5
2023-06-17 12:43:02,371:INFO:              plotly: 5.10.0
2023-06-17 12:43:02,371:INFO:             kaleido: 0.2.1
2023-06-17 12:43:02,371:INFO:         statsmodels: 0.14.0
2023-06-17 12:43:02,371:INFO:              sktime: 0.17.0
2023-06-17 12:43:02,371:INFO:               tbats: 1.1.3
2023-06-17 12:43:02,372:INFO:            pmdarima: 2.0.3
2023-06-17 12:43:02,372:INFO:              psutil: 5.9.5
2023-06-17 12:43:02,372:INFO:PyCaret optional dependencies:
2023-06-17 12:43:02,372:INFO:                shap: Not installed
2023-06-17 12:43:02,372:INFO:           interpret: Not installed
2023-06-17 12:43:02,372:INFO:                umap: Not installed
2023-06-17 12:43:02,372:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:43:02,372:INFO:  explainerdashboard: Not installed
2023-06-17 12:43:02,372:INFO:             autoviz: Not installed
2023-06-17 12:43:02,372:INFO:           fairlearn: Not installed
2023-06-17 12:43:02,372:INFO:             xgboost: 1.7.4
2023-06-17 12:43:02,372:INFO:            catboost: Not installed
2023-06-17 12:43:02,372:INFO:              kmodes: Not installed
2023-06-17 12:43:02,372:INFO:             mlxtend: Not installed
2023-06-17 12:43:02,372:INFO:       statsforecast: Not installed
2023-06-17 12:43:02,372:INFO:        tune_sklearn: Not installed
2023-06-17 12:43:02,372:INFO:                 ray: Not installed
2023-06-17 12:43:02,372:INFO:            hyperopt: Not installed
2023-06-17 12:43:02,372:INFO:              optuna: Not installed
2023-06-17 12:43:02,372:INFO:               skopt: Not installed
2023-06-17 12:43:02,372:INFO:              mlflow: Not installed
2023-06-17 12:43:02,372:INFO:              gradio: Not installed
2023-06-17 12:43:02,372:INFO:             fastapi: Not installed
2023-06-17 12:43:02,372:INFO:             uvicorn: Not installed
2023-06-17 12:43:02,372:INFO:              m2cgen: Not installed
2023-06-17 12:43:02,372:INFO:           evidently: Not installed
2023-06-17 12:43:02,372:INFO:               fugue: Not installed
2023-06-17 12:43:02,372:INFO:           streamlit: 1.23.1
2023-06-17 12:43:02,372:INFO:             prophet: Not installed
2023-06-17 12:43:02,372:INFO:None
2023-06-17 12:43:02,372:INFO:Set up data.
2023-06-17 12:43:02,378:INFO:Set up train/test split.
2023-06-17 12:43:02,381:INFO:Set up index.
2023-06-17 12:43:02,381:INFO:Set up folding strategy.
2023-06-17 12:43:02,381:INFO:Assigning column types.
2023-06-17 12:43:02,383:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:43:02,427:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,427:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,455:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,457:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,501:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,501:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,529:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,531:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,531:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:43:02,575:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,601:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,604:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,647:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:43:02,674:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,677:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,677:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:43:02,748:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,751:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,822:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:43:02,824:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:43:02,825:INFO:Preparing preprocessing pipeline...
2023-06-17 12:43:02,826:INFO:Set up simple imputation.
2023-06-17 12:43:02,828:INFO:Set up encoding of ordinal features.
2023-06-17 12:43:02,829:INFO:Set up encoding of categorical features.
2023-06-17 12:43:04,992:INFO:PyCaret ClassificationExperiment
2023-06-17 12:43:04,993:INFO:Logging name: clf-default-name
2023-06-17 12:43:04,993:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:43:04,993:INFO:version 3.0.2
2023-06-17 12:43:04,993:INFO:Initializing setup()
2023-06-17 12:43:04,993:INFO:self.USI: 8d5f
2023-06-17 12:43:04,993:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:43:04,993:INFO:Checking environment
2023-06-17 12:43:04,993:INFO:python_version: 3.9.5
2023-06-17 12:43:04,993:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:43:04,993:INFO:machine: AMD64
2023-06-17 12:43:04,993:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:43:04,997:INFO:Memory: svmem(total=17102532608, available=9216151552, percent=46.1, used=7886381056, free=9216151552)
2023-06-17 12:43:04,997:INFO:Physical Core: 8
2023-06-17 12:43:04,997:INFO:Logical Core: 16
2023-06-17 12:43:04,997:INFO:Checking libraries
2023-06-17 12:43:04,997:INFO:System:
2023-06-17 12:43:04,997:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:43:04,997:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:43:04,997:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:43:04,997:INFO:PyCaret required dependencies:
2023-06-17 12:43:04,997:INFO:                 pip: 23.1.2
2023-06-17 12:43:04,997:INFO:          setuptools: 56.0.0
2023-06-17 12:43:04,997:INFO:             pycaret: 3.0.2
2023-06-17 12:43:04,997:INFO:             IPython: 8.14.0
2023-06-17 12:43:04,997:INFO:          ipywidgets: 8.0.6
2023-06-17 12:43:04,997:INFO:                tqdm: 4.65.0
2023-06-17 12:43:04,997:INFO:               numpy: 1.22.3
2023-06-17 12:43:04,997:INFO:              pandas: 1.4.2
2023-06-17 12:43:04,997:INFO:              jinja2: 3.1.2
2023-06-17 12:43:04,997:INFO:               scipy: 1.8.0
2023-06-17 12:43:04,998:INFO:              joblib: 1.2.0
2023-06-17 12:43:04,998:INFO:             sklearn: 1.2.2
2023-06-17 12:43:04,998:INFO:                pyod: 1.0.9
2023-06-17 12:43:04,998:INFO:            imblearn: 0.10.1
2023-06-17 12:43:04,998:INFO:   category_encoders: 2.6.1
2023-06-17 12:43:04,998:INFO:            lightgbm: 3.3.5
2023-06-17 12:43:04,998:INFO:               numba: 0.57.0
2023-06-17 12:43:04,998:INFO:            requests: 2.27.1
2023-06-17 12:43:04,998:INFO:          matplotlib: 3.5.1
2023-06-17 12:43:04,998:INFO:          scikitplot: 0.3.7
2023-06-17 12:43:04,998:INFO:         yellowbrick: 1.5
2023-06-17 12:43:04,998:INFO:              plotly: 5.10.0
2023-06-17 12:43:04,998:INFO:             kaleido: 0.2.1
2023-06-17 12:43:04,998:INFO:         statsmodels: 0.14.0
2023-06-17 12:43:04,998:INFO:              sktime: 0.17.0
2023-06-17 12:43:04,998:INFO:               tbats: 1.1.3
2023-06-17 12:43:04,998:INFO:            pmdarima: 2.0.3
2023-06-17 12:43:04,998:INFO:              psutil: 5.9.5
2023-06-17 12:43:04,998:INFO:PyCaret optional dependencies:
2023-06-17 12:43:04,998:INFO:                shap: Not installed
2023-06-17 12:43:04,998:INFO:           interpret: Not installed
2023-06-17 12:43:04,998:INFO:                umap: Not installed
2023-06-17 12:43:04,998:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:43:04,998:INFO:  explainerdashboard: Not installed
2023-06-17 12:43:04,998:INFO:             autoviz: Not installed
2023-06-17 12:43:04,998:INFO:           fairlearn: Not installed
2023-06-17 12:43:04,998:INFO:             xgboost: 1.7.4
2023-06-17 12:43:04,998:INFO:            catboost: Not installed
2023-06-17 12:43:04,998:INFO:              kmodes: Not installed
2023-06-17 12:43:04,998:INFO:             mlxtend: Not installed
2023-06-17 12:43:04,998:INFO:       statsforecast: Not installed
2023-06-17 12:43:04,998:INFO:        tune_sklearn: Not installed
2023-06-17 12:43:04,999:INFO:                 ray: Not installed
2023-06-17 12:43:04,999:INFO:            hyperopt: Not installed
2023-06-17 12:43:04,999:INFO:              optuna: Not installed
2023-06-17 12:43:04,999:INFO:               skopt: Not installed
2023-06-17 12:43:04,999:INFO:              mlflow: Not installed
2023-06-17 12:43:04,999:INFO:              gradio: Not installed
2023-06-17 12:43:04,999:INFO:             fastapi: Not installed
2023-06-17 12:43:04,999:INFO:             uvicorn: Not installed
2023-06-17 12:43:04,999:INFO:              m2cgen: Not installed
2023-06-17 12:43:04,999:INFO:           evidently: Not installed
2023-06-17 12:43:04,999:INFO:               fugue: Not installed
2023-06-17 12:43:04,999:INFO:           streamlit: 1.23.1
2023-06-17 12:43:04,999:INFO:             prophet: Not installed
2023-06-17 12:43:04,999:INFO:None
2023-06-17 12:43:04,999:INFO:Set up data.
2023-06-17 12:44:30,157:INFO:PyCaret ClassificationExperiment
2023-06-17 12:44:30,157:INFO:Logging name: clf-default-name
2023-06-17 12:44:30,157:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:44:30,157:INFO:version 3.0.2
2023-06-17 12:44:30,157:INFO:Initializing setup()
2023-06-17 12:44:30,157:INFO:self.USI: 7f1d
2023-06-17 12:44:30,157:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:44:30,157:INFO:Checking environment
2023-06-17 12:44:30,157:INFO:python_version: 3.9.5
2023-06-17 12:44:30,157:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:44:30,157:INFO:machine: AMD64
2023-06-17 12:44:30,157:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:44:30,162:INFO:Memory: svmem(total=17102532608, available=8994562048, percent=47.4, used=8107970560, free=8994562048)
2023-06-17 12:44:30,162:INFO:Physical Core: 8
2023-06-17 12:44:30,162:INFO:Logical Core: 16
2023-06-17 12:44:30,162:INFO:Checking libraries
2023-06-17 12:44:30,162:INFO:System:
2023-06-17 12:44:30,162:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:44:30,162:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:44:30,162:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:44:30,162:INFO:PyCaret required dependencies:
2023-06-17 12:44:30,162:INFO:                 pip: 23.1.2
2023-06-17 12:44:30,162:INFO:          setuptools: 56.0.0
2023-06-17 12:44:30,162:INFO:             pycaret: 3.0.2
2023-06-17 12:44:30,162:INFO:             IPython: 8.14.0
2023-06-17 12:44:30,162:INFO:          ipywidgets: 8.0.6
2023-06-17 12:44:30,162:INFO:                tqdm: 4.65.0
2023-06-17 12:44:30,162:INFO:               numpy: 1.22.3
2023-06-17 12:44:30,162:INFO:              pandas: 1.4.2
2023-06-17 12:44:30,162:INFO:              jinja2: 3.1.2
2023-06-17 12:44:30,162:INFO:               scipy: 1.8.0
2023-06-17 12:44:30,162:INFO:              joblib: 1.2.0
2023-06-17 12:44:30,162:INFO:             sklearn: 1.2.2
2023-06-17 12:44:30,162:INFO:                pyod: 1.0.9
2023-06-17 12:44:30,162:INFO:            imblearn: 0.10.1
2023-06-17 12:44:30,162:INFO:   category_encoders: 2.6.1
2023-06-17 12:44:30,162:INFO:            lightgbm: 3.3.5
2023-06-17 12:44:30,162:INFO:               numba: 0.57.0
2023-06-17 12:44:30,163:INFO:            requests: 2.27.1
2023-06-17 12:44:30,163:INFO:          matplotlib: 3.5.1
2023-06-17 12:44:30,163:INFO:          scikitplot: 0.3.7
2023-06-17 12:44:30,163:INFO:         yellowbrick: 1.5
2023-06-17 12:44:30,163:INFO:              plotly: 5.10.0
2023-06-17 12:44:30,163:INFO:             kaleido: 0.2.1
2023-06-17 12:44:30,163:INFO:         statsmodels: 0.14.0
2023-06-17 12:44:30,163:INFO:              sktime: 0.17.0
2023-06-17 12:44:30,163:INFO:               tbats: 1.1.3
2023-06-17 12:44:30,163:INFO:            pmdarima: 2.0.3
2023-06-17 12:44:30,163:INFO:              psutil: 5.9.5
2023-06-17 12:44:30,163:INFO:PyCaret optional dependencies:
2023-06-17 12:44:30,163:INFO:                shap: Not installed
2023-06-17 12:44:30,163:INFO:           interpret: Not installed
2023-06-17 12:44:30,163:INFO:                umap: Not installed
2023-06-17 12:44:30,163:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:44:30,163:INFO:  explainerdashboard: Not installed
2023-06-17 12:44:30,163:INFO:             autoviz: Not installed
2023-06-17 12:44:30,163:INFO:           fairlearn: Not installed
2023-06-17 12:44:30,163:INFO:             xgboost: 1.7.4
2023-06-17 12:44:30,163:INFO:            catboost: Not installed
2023-06-17 12:44:30,163:INFO:              kmodes: Not installed
2023-06-17 12:44:30,163:INFO:             mlxtend: Not installed
2023-06-17 12:44:30,163:INFO:       statsforecast: Not installed
2023-06-17 12:44:30,163:INFO:        tune_sklearn: Not installed
2023-06-17 12:44:30,163:INFO:                 ray: Not installed
2023-06-17 12:44:30,164:INFO:            hyperopt: Not installed
2023-06-17 12:44:30,164:INFO:              optuna: Not installed
2023-06-17 12:44:30,164:INFO:               skopt: Not installed
2023-06-17 12:44:30,164:INFO:              mlflow: Not installed
2023-06-17 12:44:30,164:INFO:              gradio: Not installed
2023-06-17 12:44:30,164:INFO:             fastapi: Not installed
2023-06-17 12:44:30,164:INFO:             uvicorn: Not installed
2023-06-17 12:44:30,164:INFO:              m2cgen: Not installed
2023-06-17 12:44:30,164:INFO:           evidently: Not installed
2023-06-17 12:44:30,164:INFO:               fugue: Not installed
2023-06-17 12:44:30,164:INFO:           streamlit: 1.23.1
2023-06-17 12:44:30,164:INFO:             prophet: Not installed
2023-06-17 12:44:30,164:INFO:None
2023-06-17 12:44:30,164:INFO:Set up data.
2023-06-17 12:44:30,169:INFO:Set up train/test split.
2023-06-17 12:44:30,177:INFO:Set up index.
2023-06-17 12:44:30,178:INFO:Set up folding strategy.
2023-06-17 12:44:30,178:INFO:Assigning column types.
2023-06-17 12:44:30,180:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:44:30,223:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,224:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,251:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,253:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,296:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,297:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,324:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,326:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,326:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:44:30,370:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,396:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,399:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,442:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:44:30,469:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,471:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,471:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:44:30,540:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,611:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,614:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:30,614:INFO:Preparing preprocessing pipeline...
2023-06-17 12:44:30,615:INFO:Set up label encoding.
2023-06-17 12:44:30,615:INFO:Set up simple imputation.
2023-06-17 12:44:30,617:INFO:Set up encoding of categorical features.
2023-06-17 12:44:30,617:INFO:Set up column name cleaning.
2023-06-17 12:44:30,696:INFO:Finished creating preprocessing pipeline.
2023-06-17 12:44:30,707:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=TargetEncoder(cols=['Million '
                                                                    'Plus '
                                                                    'Cities',
                                                                    'Cause '
                                                                    'Subcategory'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 12:44:30,707:INFO:Creating final display dataframe.
2023-06-17 12:44:30,886:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               3820
1                        Target                                Outcome of Incident
2                   Target type                                         Multiclass
3                Target mapping  Greviously Injured: 0, Minor Injury: 1, Person...
4           Original data shape                                          (9550, 5)
5        Transformed data shape                                         (9550, 10)
6   Transformed train set shape                                         (6685, 10)
7    Transformed test set shape                                         (2865, 10)
8              Numeric features                                                  1
9          Categorical features                                                  3
10     Rows with missing values                                               0.0%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               7f1d
2023-06-17 12:44:30,961:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:30,964:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:31,034:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:44:31,036:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:44:31,037:INFO:setup() successfully completed in 0.88s...............
2023-06-17 12:44:31,040:INFO:Initializing compare_models()
2023-06-17 12:44:31,040:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 12:44:31,040:INFO:Checking exceptions
2023-06-17 12:44:31,044:INFO:Preparing display monitor
2023-06-17 12:44:31,046:INFO:Initializing Logistic Regression
2023-06-17 12:44:31,046:INFO:Total runtime is 0.0 minutes
2023-06-17 12:44:31,047:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:31,047:INFO:Initializing create_model()
2023-06-17 12:44:31,047:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:31,047:INFO:Checking exceptions
2023-06-17 12:44:31,047:INFO:Importing libraries
2023-06-17 12:44:31,047:INFO:Copying training dataset
2023-06-17 12:44:31,050:INFO:Defining folds
2023-06-17 12:44:31,050:INFO:Declaring metric variables
2023-06-17 12:44:31,050:INFO:Importing untrained model
2023-06-17 12:44:31,051:INFO:Logistic Regression Imported successfully
2023-06-17 12:44:31,051:INFO:Starting cross validation
2023-06-17 12:44:31,052:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:34,903:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:34,906:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:34,909:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,009:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,013:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,017:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,024:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,028:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,033:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,067:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,071:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,074:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,081:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,087:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,092:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,128:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,129:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,131:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,131:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,132:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,134:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,140:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,143:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,147:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,548:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,553:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:35,558:INFO:Calculating mean and std
2023-06-17 12:44:35,559:INFO:Creating metrics dataframe
2023-06-17 12:44:35,568:INFO:Uploading results into container
2023-06-17 12:44:35,568:INFO:Uploading model into container now
2023-06-17 12:44:35,569:INFO:_master_model_container: 1
2023-06-17 12:44:35,569:INFO:_display_container: 2
2023-06-17 12:44:35,569:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=3820, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 12:44:35,569:INFO:create_model() successfully completed......................................
2023-06-17 12:44:35,697:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:35,697:INFO:Creating metrics dataframe
2023-06-17 12:44:35,700:INFO:Initializing K Neighbors Classifier
2023-06-17 12:44:35,700:INFO:Total runtime is 0.07756293217341105 minutes
2023-06-17 12:44:35,700:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:35,700:INFO:Initializing create_model()
2023-06-17 12:44:35,700:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:35,700:INFO:Checking exceptions
2023-06-17 12:44:35,700:INFO:Importing libraries
2023-06-17 12:44:35,701:INFO:Copying training dataset
2023-06-17 12:44:35,704:INFO:Defining folds
2023-06-17 12:44:35,704:INFO:Declaring metric variables
2023-06-17 12:44:35,704:INFO:Importing untrained model
2023-06-17 12:44:35,704:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:44:35,705:INFO:Starting cross validation
2023-06-17 12:44:35,706:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:36,093:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,097:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,102:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,103:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,104:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,106:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,108:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,109:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,113:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,123:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:36,129:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,870:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,874:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,875:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,877:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,878:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,878:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,880:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,880:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,882:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,883:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,884:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,885:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,887:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,887:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,890:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,896:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,899:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,902:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:37,908:INFO:Calculating mean and std
2023-06-17 12:44:37,909:INFO:Creating metrics dataframe
2023-06-17 12:44:37,918:INFO:Uploading results into container
2023-06-17 12:44:37,919:INFO:Uploading model into container now
2023-06-17 12:44:37,920:INFO:_master_model_container: 2
2023-06-17 12:44:37,920:INFO:_display_container: 2
2023-06-17 12:44:37,920:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:44:37,920:INFO:create_model() successfully completed......................................
2023-06-17 12:44:38,060:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:38,060:INFO:Creating metrics dataframe
2023-06-17 12:44:38,063:INFO:Initializing Naive Bayes
2023-06-17 12:44:38,063:INFO:Total runtime is 0.11694627205530803 minutes
2023-06-17 12:44:38,063:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:38,063:INFO:Initializing create_model()
2023-06-17 12:44:38,063:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:38,063:INFO:Checking exceptions
2023-06-17 12:44:38,063:INFO:Importing libraries
2023-06-17 12:44:38,064:INFO:Copying training dataset
2023-06-17 12:44:38,067:INFO:Defining folds
2023-06-17 12:44:38,067:INFO:Declaring metric variables
2023-06-17 12:44:38,067:INFO:Importing untrained model
2023-06-17 12:44:38,067:INFO:Naive Bayes Imported successfully
2023-06-17 12:44:38,067:INFO:Starting cross validation
2023-06-17 12:44:38,068:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:38,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,341:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,351:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,366:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,381:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,383:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,385:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,387:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,388:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,390:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,393:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,394:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:38,396:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,401:INFO:Calculating mean and std
2023-06-17 12:44:38,402:INFO:Creating metrics dataframe
2023-06-17 12:44:38,410:INFO:Uploading results into container
2023-06-17 12:44:38,411:INFO:Uploading model into container now
2023-06-17 12:44:38,411:INFO:_master_model_container: 3
2023-06-17 12:44:38,411:INFO:_display_container: 2
2023-06-17 12:44:38,411:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 12:44:38,412:INFO:create_model() successfully completed......................................
2023-06-17 12:44:38,528:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:38,528:INFO:Creating metrics dataframe
2023-06-17 12:44:38,531:INFO:Initializing Decision Tree Classifier
2023-06-17 12:44:38,531:INFO:Total runtime is 0.12474627097447713 minutes
2023-06-17 12:44:38,531:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:38,531:INFO:Initializing create_model()
2023-06-17 12:44:38,531:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:38,531:INFO:Checking exceptions
2023-06-17 12:44:38,531:INFO:Importing libraries
2023-06-17 12:44:38,531:INFO:Copying training dataset
2023-06-17 12:44:38,534:INFO:Defining folds
2023-06-17 12:44:38,535:INFO:Declaring metric variables
2023-06-17 12:44:38,535:INFO:Importing untrained model
2023-06-17 12:44:38,535:INFO:Decision Tree Classifier Imported successfully
2023-06-17 12:44:38,535:INFO:Starting cross validation
2023-06-17 12:44:38,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:38,796:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,801:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,806:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,823:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,826:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,835:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,840:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,841:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,844:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,852:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,854:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,856:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,857:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,859:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,861:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,862:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:38,880:INFO:Calculating mean and std
2023-06-17 12:44:38,881:INFO:Creating metrics dataframe
2023-06-17 12:44:38,889:INFO:Uploading results into container
2023-06-17 12:44:38,890:INFO:Uploading model into container now
2023-06-17 12:44:38,890:INFO:_master_model_container: 4
2023-06-17 12:44:38,890:INFO:_display_container: 2
2023-06-17 12:44:38,890:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3820, splitter='best')
2023-06-17 12:44:38,890:INFO:create_model() successfully completed......................................
2023-06-17 12:44:39,006:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:39,007:INFO:Creating metrics dataframe
2023-06-17 12:44:39,009:INFO:Initializing SVM - Linear Kernel
2023-06-17 12:44:39,010:INFO:Total runtime is 0.13272960583368937 minutes
2023-06-17 12:44:39,010:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:39,010:INFO:Initializing create_model()
2023-06-17 12:44:39,010:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:39,010:INFO:Checking exceptions
2023-06-17 12:44:39,010:INFO:Importing libraries
2023-06-17 12:44:39,010:INFO:Copying training dataset
2023-06-17 12:44:39,013:INFO:Defining folds
2023-06-17 12:44:39,013:INFO:Declaring metric variables
2023-06-17 12:44:39,013:INFO:Importing untrained model
2023-06-17 12:44:39,013:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:44:39,014:INFO:Starting cross validation
2023-06-17 12:44:39,014:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:39,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,318:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,321:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,322:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,324:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,327:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,330:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,333:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:44:39,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,360:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,361:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:39,366:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,376:INFO:Calculating mean and std
2023-06-17 12:44:39,376:INFO:Creating metrics dataframe
2023-06-17 12:44:39,385:INFO:Uploading results into container
2023-06-17 12:44:39,386:INFO:Uploading model into container now
2023-06-17 12:44:39,386:INFO:_master_model_container: 5
2023-06-17 12:44:39,386:INFO:_display_container: 2
2023-06-17 12:44:39,386:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=3820, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 12:44:39,386:INFO:create_model() successfully completed......................................
2023-06-17 12:44:39,505:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:39,505:INFO:Creating metrics dataframe
2023-06-17 12:44:39,508:INFO:Initializing Ridge Classifier
2023-06-17 12:44:39,508:INFO:Total runtime is 0.14102327426274616 minutes
2023-06-17 12:44:39,509:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:39,509:INFO:Initializing create_model()
2023-06-17 12:44:39,509:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:39,509:INFO:Checking exceptions
2023-06-17 12:44:39,509:INFO:Importing libraries
2023-06-17 12:44:39,509:INFO:Copying training dataset
2023-06-17 12:44:39,512:INFO:Defining folds
2023-06-17 12:44:39,512:INFO:Declaring metric variables
2023-06-17 12:44:39,512:INFO:Importing untrained model
2023-06-17 12:44:39,512:INFO:Ridge Classifier Imported successfully
2023-06-17 12:44:39,512:INFO:Starting cross validation
2023-06-17 12:44:39,513:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:39,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,721:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,722:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,724:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,724:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,727:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,727:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,733:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,735:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,738:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,739:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,741:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,742:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,745:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,748:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,751:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,754:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,757:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,759:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,761:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,761:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,762:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,764:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,765:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:44:39,765:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,766:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,767:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,768:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,769:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,772:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:39,780:INFO:Calculating mean and std
2023-06-17 12:44:39,780:INFO:Creating metrics dataframe
2023-06-17 12:44:39,789:INFO:Uploading results into container
2023-06-17 12:44:39,789:INFO:Uploading model into container now
2023-06-17 12:44:39,790:INFO:_master_model_container: 6
2023-06-17 12:44:39,790:INFO:_display_container: 2
2023-06-17 12:44:39,790:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3820, solver='auto',
                tol=0.0001)
2023-06-17 12:44:39,790:INFO:create_model() successfully completed......................................
2023-06-17 12:44:39,906:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:39,906:INFO:Creating metrics dataframe
2023-06-17 12:44:39,909:INFO:Initializing Random Forest Classifier
2023-06-17 12:44:39,909:INFO:Total runtime is 0.14770660797754923 minutes
2023-06-17 12:44:39,910:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:39,910:INFO:Initializing create_model()
2023-06-17 12:44:39,910:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:39,910:INFO:Checking exceptions
2023-06-17 12:44:39,910:INFO:Importing libraries
2023-06-17 12:44:39,910:INFO:Copying training dataset
2023-06-17 12:44:39,913:INFO:Defining folds
2023-06-17 12:44:39,913:INFO:Declaring metric variables
2023-06-17 12:44:39,913:INFO:Importing untrained model
2023-06-17 12:44:39,913:INFO:Random Forest Classifier Imported successfully
2023-06-17 12:44:39,913:INFO:Starting cross validation
2023-06-17 12:44:39,914:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:41,148:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,153:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,158:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,167:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,172:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,173:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,182:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,189:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,195:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,199:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,216:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,219:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,223:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,232:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,236:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,240:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,257:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,260:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,314:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,373:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,379:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,386:INFO:Calculating mean and std
2023-06-17 12:44:41,387:INFO:Creating metrics dataframe
2023-06-17 12:44:41,400:INFO:Uploading results into container
2023-06-17 12:44:41,401:INFO:Uploading model into container now
2023-06-17 12:44:41,401:INFO:_master_model_container: 7
2023-06-17 12:44:41,401:INFO:_display_container: 2
2023-06-17 12:44:41,402:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3820, verbose=0, warm_start=False)
2023-06-17 12:44:41,402:INFO:create_model() successfully completed......................................
2023-06-17 12:44:41,520:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:41,520:INFO:Creating metrics dataframe
2023-06-17 12:44:41,523:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 12:44:41,523:INFO:Total runtime is 0.1746066133181254 minutes
2023-06-17 12:44:41,523:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:41,523:INFO:Initializing create_model()
2023-06-17 12:44:41,523:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:41,523:INFO:Checking exceptions
2023-06-17 12:44:41,523:INFO:Importing libraries
2023-06-17 12:44:41,523:INFO:Copying training dataset
2023-06-17 12:44:41,526:INFO:Defining folds
2023-06-17 12:44:41,526:INFO:Declaring metric variables
2023-06-17 12:44:41,527:INFO:Importing untrained model
2023-06-17 12:44:41,527:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:44:41,527:INFO:Starting cross validation
2023-06-17 12:44:41,528:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:41,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,700:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,701:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,715:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:44:41,815:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,819:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,822:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,823:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,824:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,825:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,827:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,828:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,829:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,831:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,832:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,835:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:41,836:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,837:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,837:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,839:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,839:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,842:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,844:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:41,845:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,846:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,847:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,849:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,855:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:41,897:INFO:Calculating mean and std
2023-06-17 12:44:41,898:INFO:Creating metrics dataframe
2023-06-17 12:44:41,912:INFO:Uploading results into container
2023-06-17 12:44:41,912:INFO:Uploading model into container now
2023-06-17 12:44:41,912:INFO:_master_model_container: 8
2023-06-17 12:44:41,912:INFO:_display_container: 2
2023-06-17 12:44:41,913:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-17 12:44:41,913:INFO:create_model() successfully completed......................................
2023-06-17 12:44:42,029:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:42,029:INFO:Creating metrics dataframe
2023-06-17 12:44:42,032:INFO:Initializing Ada Boost Classifier
2023-06-17 12:44:42,032:INFO:Total runtime is 0.18308993975321453 minutes
2023-06-17 12:44:42,032:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:42,033:INFO:Initializing create_model()
2023-06-17 12:44:42,033:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:42,033:INFO:Checking exceptions
2023-06-17 12:44:42,033:INFO:Importing libraries
2023-06-17 12:44:42,033:INFO:Copying training dataset
2023-06-17 12:44:42,036:INFO:Defining folds
2023-06-17 12:44:42,036:INFO:Declaring metric variables
2023-06-17 12:44:42,036:INFO:Importing untrained model
2023-06-17 12:44:42,036:INFO:Ada Boost Classifier Imported successfully
2023-06-17 12:44:42,036:INFO:Starting cross validation
2023-06-17 12:44:42,037:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:42,626:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,631:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,636:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,644:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,645:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,646:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,648:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,649:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,649:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,651:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,651:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,653:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,654:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,655:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,658:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,660:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,664:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,665:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,668:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,669:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,671:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,679:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,688:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,697:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:42,738:INFO:Calculating mean and std
2023-06-17 12:44:42,739:INFO:Creating metrics dataframe
2023-06-17 12:44:42,757:INFO:Uploading results into container
2023-06-17 12:44:42,757:INFO:Uploading model into container now
2023-06-17 12:44:42,758:INFO:_master_model_container: 9
2023-06-17 12:44:42,758:INFO:_display_container: 2
2023-06-17 12:44:42,758:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3820)
2023-06-17 12:44:42,758:INFO:create_model() successfully completed......................................
2023-06-17 12:44:42,880:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:42,880:INFO:Creating metrics dataframe
2023-06-17 12:44:42,883:INFO:Initializing Gradient Boosting Classifier
2023-06-17 12:44:42,883:INFO:Total runtime is 0.1972732981046041 minutes
2023-06-17 12:44:42,884:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:42,884:INFO:Initializing create_model()
2023-06-17 12:44:42,884:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:42,884:INFO:Checking exceptions
2023-06-17 12:44:42,884:INFO:Importing libraries
2023-06-17 12:44:42,884:INFO:Copying training dataset
2023-06-17 12:44:42,887:INFO:Defining folds
2023-06-17 12:44:42,887:INFO:Declaring metric variables
2023-06-17 12:44:42,887:INFO:Importing untrained model
2023-06-17 12:44:42,887:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:44:42,888:INFO:Starting cross validation
2023-06-17 12:44:42,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:46,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,345:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,373:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,378:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,379:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,382:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,397:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,400:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,403:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,424:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,425:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,427:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,428:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,429:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,431:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,454:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,457:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,476:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,479:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,482:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,487:INFO:Calculating mean and std
2023-06-17 12:44:46,488:INFO:Creating metrics dataframe
2023-06-17 12:44:46,512:INFO:Uploading results into container
2023-06-17 12:44:46,512:INFO:Uploading model into container now
2023-06-17 12:44:46,512:INFO:_master_model_container: 10
2023-06-17 12:44:46,513:INFO:_display_container: 2
2023-06-17 12:44:46,513:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:44:46,513:INFO:create_model() successfully completed......................................
2023-06-17 12:44:46,629:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:46,629:INFO:Creating metrics dataframe
2023-06-17 12:44:46,632:INFO:Initializing Linear Discriminant Analysis
2023-06-17 12:44:46,632:INFO:Total runtime is 0.259756608804067 minutes
2023-06-17 12:44:46,633:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:46,633:INFO:Initializing create_model()
2023-06-17 12:44:46,633:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:46,633:INFO:Checking exceptions
2023-06-17 12:44:46,633:INFO:Importing libraries
2023-06-17 12:44:46,633:INFO:Copying training dataset
2023-06-17 12:44:46,637:INFO:Defining folds
2023-06-17 12:44:46,637:INFO:Declaring metric variables
2023-06-17 12:44:46,637:INFO:Importing untrained model
2023-06-17 12:44:46,637:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 12:44:46,637:INFO:Starting cross validation
2023-06-17 12:44:46,638:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:46,903:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,908:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,913:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,919:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,922:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,927:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,927:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,929:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,935:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,937:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,938:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:46,939:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:46,940:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,941:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,943:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,946:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,949:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,961:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,966:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,969:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,971:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,972:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,974:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,979:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:46,983:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:47,052:INFO:Calculating mean and std
2023-06-17 12:44:47,053:INFO:Creating metrics dataframe
2023-06-17 12:44:47,076:INFO:Uploading results into container
2023-06-17 12:44:47,077:INFO:Uploading model into container now
2023-06-17 12:44:47,077:INFO:_master_model_container: 11
2023-06-17 12:44:47,077:INFO:_display_container: 2
2023-06-17 12:44:47,078:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 12:44:47,078:INFO:create_model() successfully completed......................................
2023-06-17 12:44:47,195:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:47,195:INFO:Creating metrics dataframe
2023-06-17 12:44:47,198:INFO:Initializing Extra Trees Classifier
2023-06-17 12:44:47,198:INFO:Total runtime is 0.26918994983037314 minutes
2023-06-17 12:44:47,198:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:47,199:INFO:Initializing create_model()
2023-06-17 12:44:47,199:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:47,199:INFO:Checking exceptions
2023-06-17 12:44:47,199:INFO:Importing libraries
2023-06-17 12:44:47,199:INFO:Copying training dataset
2023-06-17 12:44:47,202:INFO:Defining folds
2023-06-17 12:44:47,202:INFO:Declaring metric variables
2023-06-17 12:44:47,202:INFO:Importing untrained model
2023-06-17 12:44:47,202:INFO:Extra Trees Classifier Imported successfully
2023-06-17 12:44:47,202:INFO:Starting cross validation
2023-06-17 12:44:47,203:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:48,621:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,625:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,626:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,629:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,633:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,663:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,667:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,668:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,671:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,673:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,676:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,717:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,723:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,759:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,762:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,765:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,772:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,779:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,834:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,841:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,858:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,861:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,861:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,864:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:48,864:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:49,033:INFO:Calculating mean and std
2023-06-17 12:44:49,034:INFO:Creating metrics dataframe
2023-06-17 12:44:49,062:INFO:Uploading results into container
2023-06-17 12:44:49,063:INFO:Uploading model into container now
2023-06-17 12:44:49,063:INFO:_master_model_container: 12
2023-06-17 12:44:49,063:INFO:_display_container: 2
2023-06-17 12:44:49,063:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3820, verbose=0, warm_start=False)
2023-06-17 12:44:49,063:INFO:create_model() successfully completed......................................
2023-06-17 12:44:49,180:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:49,181:INFO:Creating metrics dataframe
2023-06-17 12:44:49,184:INFO:Initializing Extreme Gradient Boosting
2023-06-17 12:44:49,184:INFO:Total runtime is 0.3022899429003398 minutes
2023-06-17 12:44:49,184:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:49,184:INFO:Initializing create_model()
2023-06-17 12:44:49,184:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:49,184:INFO:Checking exceptions
2023-06-17 12:44:49,184:INFO:Importing libraries
2023-06-17 12:44:49,184:INFO:Copying training dataset
2023-06-17 12:44:49,187:INFO:Defining folds
2023-06-17 12:44:49,187:INFO:Declaring metric variables
2023-06-17 12:44:49,187:INFO:Importing untrained model
2023-06-17 12:44:49,188:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 12:44:49,188:INFO:Starting cross validation
2023-06-17 12:44:49,189:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:51,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,358:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,362:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,385:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,388:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,390:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,393:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,395:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,454:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,457:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,466:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,469:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,472:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,486:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,487:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,487:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,489:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,490:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,492:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,493:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,494:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,495:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,528:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,533:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:51,567:INFO:Calculating mean and std
2023-06-17 12:44:51,568:INFO:Creating metrics dataframe
2023-06-17 12:44:51,601:INFO:Uploading results into container
2023-06-17 12:44:51,602:INFO:Uploading model into container now
2023-06-17 12:44:51,602:INFO:_master_model_container: 13
2023-06-17 12:44:51,602:INFO:_display_container: 2
2023-06-17 12:44:51,603:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 12:44:51,603:INFO:create_model() successfully completed......................................
2023-06-17 12:44:51,719:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:51,719:INFO:Creating metrics dataframe
2023-06-17 12:44:51,722:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 12:44:51,722:INFO:Total runtime is 0.34458994070688886 minutes
2023-06-17 12:44:51,722:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:51,723:INFO:Initializing create_model()
2023-06-17 12:44:51,723:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:51,723:INFO:Checking exceptions
2023-06-17 12:44:51,723:INFO:Importing libraries
2023-06-17 12:44:51,723:INFO:Copying training dataset
2023-06-17 12:44:51,726:INFO:Defining folds
2023-06-17 12:44:51,726:INFO:Declaring metric variables
2023-06-17 12:44:51,727:INFO:Importing untrained model
2023-06-17 12:44:51,727:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 12:44:51,727:INFO:Starting cross validation
2023-06-17 12:44:51,728:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:52,865:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,870:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,875:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,911:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,921:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,921:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,924:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,927:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,951:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,952:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,954:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,957:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,957:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,959:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,959:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,963:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,965:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,967:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,983:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,984:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,986:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,987:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,989:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,990:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,993:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:52,997:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,000:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,105:INFO:Calculating mean and std
2023-06-17 12:44:53,106:INFO:Creating metrics dataframe
2023-06-17 12:44:53,144:INFO:Uploading results into container
2023-06-17 12:44:53,144:INFO:Uploading model into container now
2023-06-17 12:44:53,145:INFO:_master_model_container: 14
2023-06-17 12:44:53,145:INFO:_display_container: 2
2023-06-17 12:44:53,145:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3820, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 12:44:53,145:INFO:create_model() successfully completed......................................
2023-06-17 12:44:53,267:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:53,267:INFO:Creating metrics dataframe
2023-06-17 12:44:53,270:INFO:Initializing Dummy Classifier
2023-06-17 12:44:53,270:INFO:Total runtime is 0.3703899701436361 minutes
2023-06-17 12:44:53,270:INFO:SubProcess create_model() called ==================================
2023-06-17 12:44:53,270:INFO:Initializing create_model()
2023-06-17 12:44:53,270:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D410B550>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:53,271:INFO:Checking exceptions
2023-06-17 12:44:53,271:INFO:Importing libraries
2023-06-17 12:44:53,271:INFO:Copying training dataset
2023-06-17 12:44:53,274:INFO:Defining folds
2023-06-17 12:44:53,274:INFO:Declaring metric variables
2023-06-17 12:44:53,274:INFO:Importing untrained model
2023-06-17 12:44:53,274:INFO:Dummy Classifier Imported successfully
2023-06-17 12:44:53,274:INFO:Starting cross validation
2023-06-17 12:44:53,275:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:44:53,541:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,545:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,546:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,549:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,550:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,553:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,557:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,561:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,562:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,564:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,566:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,566:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,569:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,570:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,579:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,582:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,584:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,586:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,586:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,588:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,589:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,590:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,597:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,602:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,604:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,606:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,611:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,613:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,614:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,614:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,617:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,618:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:44:53,620:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:44:53,765:INFO:Calculating mean and std
2023-06-17 12:44:53,765:INFO:Creating metrics dataframe
2023-06-17 12:44:53,803:INFO:Uploading results into container
2023-06-17 12:44:53,804:INFO:Uploading model into container now
2023-06-17 12:44:53,804:INFO:_master_model_container: 15
2023-06-17 12:44:53,804:INFO:_display_container: 2
2023-06-17 12:44:53,804:INFO:DummyClassifier(constant=None, random_state=3820, strategy='prior')
2023-06-17 12:44:53,804:INFO:create_model() successfully completed......................................
2023-06-17 12:44:53,926:INFO:SubProcess create_model() end ==================================
2023-06-17 12:44:53,926:INFO:Creating metrics dataframe
2023-06-17 12:44:53,930:INFO:Initializing create_model()
2023-06-17 12:44:53,930:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478880>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:44:53,930:INFO:Checking exceptions
2023-06-17 12:44:53,931:INFO:Importing libraries
2023-06-17 12:44:53,931:INFO:Copying training dataset
2023-06-17 12:44:53,934:INFO:Defining folds
2023-06-17 12:44:53,934:INFO:Declaring metric variables
2023-06-17 12:44:53,934:INFO:Importing untrained model
2023-06-17 12:44:53,934:INFO:Declaring custom model
2023-06-17 12:44:53,934:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:44:53,935:INFO:Cross validation set to False
2023-06-17 12:44:53,935:INFO:Fitting Model
2023-06-17 12:44:56,230:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:44:56,230:INFO:create_model() successfully completed......................................
2023-06-17 12:44:56,361:INFO:_master_model_container: 15
2023-06-17 12:44:56,362:INFO:_display_container: 2
2023-06-17 12:44:56,362:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:44:56,362:INFO:compare_models() successfully completed......................................
2023-06-17 12:44:56,369:INFO:Initializing save_model()
2023-06-17 12:44:56,370:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=3820, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=TargetEncoder(cols=['Million '
                                                                    'Plus '
                                                                    'Cities',
                                                                    'Cause '
                                                                    'Subcategory'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 12:44:56,370:INFO:Adding model into prep_pipe
2023-06-17 12:44:56,389:INFO:best_model.pkl saved in current working directory
2023-06-17 12:44:56,398:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=3820, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-06-17 12:44:56,398:INFO:save_model() successfully completed......................................
2023-06-17 12:45:28,711:INFO:PyCaret RegressionExperiment
2023-06-17 12:45:28,712:INFO:Logging name: reg-default-name
2023-06-17 12:45:28,712:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:45:28,712:INFO:version 3.0.2
2023-06-17 12:45:28,712:INFO:Initializing setup()
2023-06-17 12:45:28,712:INFO:self.USI: 035c
2023-06-17 12:45:28,712:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:28,712:INFO:Checking environment
2023-06-17 12:45:28,712:INFO:python_version: 3.9.5
2023-06-17 12:45:28,712:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:28,712:INFO:machine: AMD64
2023-06-17 12:45:28,712:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:28,716:INFO:Memory: svmem(total=17102532608, available=7408541696, percent=56.7, used=9693990912, free=7408541696)
2023-06-17 12:45:28,716:INFO:Physical Core: 8
2023-06-17 12:45:28,716:INFO:Logical Core: 16
2023-06-17 12:45:28,716:INFO:Checking libraries
2023-06-17 12:45:28,716:INFO:System:
2023-06-17 12:45:28,716:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:28,716:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:28,716:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:28,716:INFO:PyCaret required dependencies:
2023-06-17 12:45:28,716:INFO:                 pip: 23.1.2
2023-06-17 12:45:28,716:INFO:          setuptools: 56.0.0
2023-06-17 12:45:28,716:INFO:             pycaret: 3.0.2
2023-06-17 12:45:28,716:INFO:             IPython: 8.14.0
2023-06-17 12:45:28,716:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:28,716:INFO:                tqdm: 4.65.0
2023-06-17 12:45:28,716:INFO:               numpy: 1.22.3
2023-06-17 12:45:28,716:INFO:              pandas: 1.4.2
2023-06-17 12:45:28,717:INFO:              jinja2: 3.1.2
2023-06-17 12:45:28,717:INFO:               scipy: 1.8.0
2023-06-17 12:45:28,717:INFO:              joblib: 1.2.0
2023-06-17 12:45:28,717:INFO:             sklearn: 1.2.2
2023-06-17 12:45:28,717:INFO:                pyod: 1.0.9
2023-06-17 12:45:28,717:INFO:            imblearn: 0.10.1
2023-06-17 12:45:28,717:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:28,717:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:28,717:INFO:               numba: 0.57.0
2023-06-17 12:45:28,717:INFO:            requests: 2.27.1
2023-06-17 12:45:28,717:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:28,717:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:28,717:INFO:         yellowbrick: 1.5
2023-06-17 12:45:28,717:INFO:              plotly: 5.10.0
2023-06-17 12:45:28,717:INFO:             kaleido: 0.2.1
2023-06-17 12:45:28,717:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:28,717:INFO:              sktime: 0.17.0
2023-06-17 12:45:28,717:INFO:               tbats: 1.1.3
2023-06-17 12:45:28,717:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:28,717:INFO:              psutil: 5.9.5
2023-06-17 12:45:28,717:INFO:PyCaret optional dependencies:
2023-06-17 12:45:28,717:INFO:                shap: Not installed
2023-06-17 12:45:28,717:INFO:           interpret: Not installed
2023-06-17 12:45:28,717:INFO:                umap: Not installed
2023-06-17 12:45:28,717:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:28,717:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:28,717:INFO:             autoviz: Not installed
2023-06-17 12:45:28,717:INFO:           fairlearn: Not installed
2023-06-17 12:45:28,717:INFO:             xgboost: 1.7.4
2023-06-17 12:45:28,717:INFO:            catboost: Not installed
2023-06-17 12:45:28,717:INFO:              kmodes: Not installed
2023-06-17 12:45:28,717:INFO:             mlxtend: Not installed
2023-06-17 12:45:28,717:INFO:       statsforecast: Not installed
2023-06-17 12:45:28,718:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:28,718:INFO:                 ray: Not installed
2023-06-17 12:45:28,718:INFO:            hyperopt: Not installed
2023-06-17 12:45:28,718:INFO:              optuna: Not installed
2023-06-17 12:45:28,718:INFO:               skopt: Not installed
2023-06-17 12:45:28,718:INFO:              mlflow: Not installed
2023-06-17 12:45:28,718:INFO:              gradio: Not installed
2023-06-17 12:45:28,718:INFO:             fastapi: Not installed
2023-06-17 12:45:28,718:INFO:             uvicorn: Not installed
2023-06-17 12:45:28,718:INFO:              m2cgen: Not installed
2023-06-17 12:45:28,718:INFO:           evidently: Not installed
2023-06-17 12:45:28,718:INFO:               fugue: Not installed
2023-06-17 12:45:28,718:INFO:           streamlit: 1.23.1
2023-06-17 12:45:28,718:INFO:             prophet: Not installed
2023-06-17 12:45:28,718:INFO:None
2023-06-17 12:45:28,718:INFO:Set up data.
2023-06-17 12:45:28,724:INFO:Set up train/test split.
2023-06-17 12:45:28,727:INFO:Set up index.
2023-06-17 12:45:28,727:INFO:Set up folding strategy.
2023-06-17 12:45:28,727:INFO:Assigning column types.
2023-06-17 12:45:28,729:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:28,729:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,734:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,739:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,798:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,845:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,846:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:28,849:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:28,850:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,855:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,859:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,919:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,963:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,964:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:28,966:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:28,967:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:45:28,971:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:28,976:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,033:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,078:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,079:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,081:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,086:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,091:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,148:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,192:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,193:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,195:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,196:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:45:29,205:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,263:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,308:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,308:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,311:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,320:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,375:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,420:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,421:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,423:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,424:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:45:29,489:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,535:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,538:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,610:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,655:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,656:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,659:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,659:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:29,732:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,777:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,780:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,846:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:29,892:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:29,895:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:29,895:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:45:30,007:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,010:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,122:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,124:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,126:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:30,126:INFO:Set up simple imputation.
2023-06-17 12:45:30,128:INFO:Set up encoding of categorical features.
2023-06-17 12:45:30,128:INFO:Set up column name cleaning.
2023-06-17 12:45:30,224:INFO:PyCaret RegressionExperiment
2023-06-17 12:45:30,224:INFO:Logging name: reg-default-name
2023-06-17 12:45:30,224:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:45:30,224:INFO:version 3.0.2
2023-06-17 12:45:30,224:INFO:Initializing setup()
2023-06-17 12:45:30,224:INFO:self.USI: 47a9
2023-06-17 12:45:30,224:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:30,224:INFO:Checking environment
2023-06-17 12:45:30,224:INFO:python_version: 3.9.5
2023-06-17 12:45:30,224:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:30,224:INFO:machine: AMD64
2023-06-17 12:45:30,224:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:30,228:INFO:Memory: svmem(total=17102532608, available=7404507136, percent=56.7, used=9698025472, free=7404507136)
2023-06-17 12:45:30,228:INFO:Physical Core: 8
2023-06-17 12:45:30,228:INFO:Logical Core: 16
2023-06-17 12:45:30,228:INFO:Checking libraries
2023-06-17 12:45:30,228:INFO:System:
2023-06-17 12:45:30,228:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:30,228:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:30,228:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:30,228:INFO:PyCaret required dependencies:
2023-06-17 12:45:30,229:INFO:                 pip: 23.1.2
2023-06-17 12:45:30,229:INFO:          setuptools: 56.0.0
2023-06-17 12:45:30,229:INFO:             pycaret: 3.0.2
2023-06-17 12:45:30,229:INFO:             IPython: 8.14.0
2023-06-17 12:45:30,229:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:30,229:INFO:                tqdm: 4.65.0
2023-06-17 12:45:30,229:INFO:               numpy: 1.22.3
2023-06-17 12:45:30,229:INFO:              pandas: 1.4.2
2023-06-17 12:45:30,230:INFO:              jinja2: 3.1.2
2023-06-17 12:45:30,230:INFO:               scipy: 1.8.0
2023-06-17 12:45:30,230:INFO:              joblib: 1.2.0
2023-06-17 12:45:30,230:INFO:             sklearn: 1.2.2
2023-06-17 12:45:30,230:INFO:                pyod: 1.0.9
2023-06-17 12:45:30,230:INFO:            imblearn: 0.10.1
2023-06-17 12:45:30,230:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:30,230:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:30,230:INFO:               numba: 0.57.0
2023-06-17 12:45:30,231:INFO:            requests: 2.27.1
2023-06-17 12:45:30,231:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:30,231:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:30,231:INFO:         yellowbrick: 1.5
2023-06-17 12:45:30,231:INFO:              plotly: 5.10.0
2023-06-17 12:45:30,231:INFO:             kaleido: 0.2.1
2023-06-17 12:45:30,231:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:30,231:INFO:              sktime: 0.17.0
2023-06-17 12:45:30,231:INFO:               tbats: 1.1.3
2023-06-17 12:45:30,231:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:30,231:INFO:              psutil: 5.9.5
2023-06-17 12:45:30,231:INFO:PyCaret optional dependencies:
2023-06-17 12:45:30,231:INFO:                shap: Not installed
2023-06-17 12:45:30,231:INFO:           interpret: Not installed
2023-06-17 12:45:30,232:INFO:                umap: Not installed
2023-06-17 12:45:30,232:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:30,232:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:30,232:INFO:             autoviz: Not installed
2023-06-17 12:45:30,232:INFO:           fairlearn: Not installed
2023-06-17 12:45:30,232:INFO:             xgboost: 1.7.4
2023-06-17 12:45:30,232:INFO:            catboost: Not installed
2023-06-17 12:45:30,232:INFO:              kmodes: Not installed
2023-06-17 12:45:30,232:INFO:             mlxtend: Not installed
2023-06-17 12:45:30,232:INFO:       statsforecast: Not installed
2023-06-17 12:45:30,232:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:30,232:INFO:                 ray: Not installed
2023-06-17 12:45:30,232:INFO:            hyperopt: Not installed
2023-06-17 12:45:30,232:INFO:              optuna: Not installed
2023-06-17 12:45:30,232:INFO:               skopt: Not installed
2023-06-17 12:45:30,232:INFO:              mlflow: Not installed
2023-06-17 12:45:30,232:INFO:              gradio: Not installed
2023-06-17 12:45:30,232:INFO:             fastapi: Not installed
2023-06-17 12:45:30,232:INFO:             uvicorn: Not installed
2023-06-17 12:45:30,232:INFO:              m2cgen: Not installed
2023-06-17 12:45:30,232:INFO:           evidently: Not installed
2023-06-17 12:45:30,232:INFO:               fugue: Not installed
2023-06-17 12:45:30,232:INFO:           streamlit: 1.23.1
2023-06-17 12:45:30,232:INFO:             prophet: Not installed
2023-06-17 12:45:30,232:INFO:None
2023-06-17 12:45:30,232:INFO:Set up data.
2023-06-17 12:45:30,238:INFO:Set up train/test split.
2023-06-17 12:45:30,241:INFO:Set up index.
2023-06-17 12:45:30,241:INFO:Set up folding strategy.
2023-06-17 12:45:30,242:INFO:Assigning column types.
2023-06-17 12:45:30,244:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:30,244:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,249:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,253:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,316:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,359:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,360:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,363:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,363:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,368:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,372:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,553:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,596:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,596:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,599:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,599:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:45:30,603:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,608:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,662:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,705:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,705:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,707:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,712:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,716:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,771:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,813:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,814:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,816:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,816:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:45:30,825:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,881:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,923:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,924:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:30,927:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:30,936:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:30,996:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,042:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,042:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,045:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,045:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:45:31,112:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,155:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,155:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,158:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,221:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,264:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,264:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,267:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,267:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:31,330:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,373:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,376:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,440:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:31,484:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,487:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,487:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:45:31,592:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,595:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,709:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:31,712:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:31,713:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:31,713:INFO:Set up simple imputation.
2023-06-17 12:45:31,715:INFO:Set up encoding of categorical features.
2023-06-17 12:45:31,716:INFO:Set up column name cleaning.
2023-06-17 12:45:32,301:INFO:PyCaret RegressionExperiment
2023-06-17 12:45:32,301:INFO:Logging name: reg-default-name
2023-06-17 12:45:32,301:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:45:32,301:INFO:version 3.0.2
2023-06-17 12:45:32,301:INFO:Initializing setup()
2023-06-17 12:45:32,301:INFO:self.USI: c0eb
2023-06-17 12:45:32,301:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:32,301:INFO:Checking environment
2023-06-17 12:45:32,302:INFO:python_version: 3.9.5
2023-06-17 12:45:32,302:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:32,302:INFO:machine: AMD64
2023-06-17 12:45:32,302:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:32,305:INFO:Memory: svmem(total=17102532608, available=7402790912, percent=56.7, used=9699741696, free=7402790912)
2023-06-17 12:45:32,305:INFO:Physical Core: 8
2023-06-17 12:45:32,305:INFO:Logical Core: 16
2023-06-17 12:45:32,305:INFO:Checking libraries
2023-06-17 12:45:32,305:INFO:System:
2023-06-17 12:45:32,305:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:32,306:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:32,306:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:32,306:INFO:PyCaret required dependencies:
2023-06-17 12:45:32,306:INFO:                 pip: 23.1.2
2023-06-17 12:45:32,306:INFO:          setuptools: 56.0.0
2023-06-17 12:45:32,306:INFO:             pycaret: 3.0.2
2023-06-17 12:45:32,306:INFO:             IPython: 8.14.0
2023-06-17 12:45:32,306:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:32,306:INFO:                tqdm: 4.65.0
2023-06-17 12:45:32,306:INFO:               numpy: 1.22.3
2023-06-17 12:45:32,306:INFO:              pandas: 1.4.2
2023-06-17 12:45:32,306:INFO:              jinja2: 3.1.2
2023-06-17 12:45:32,306:INFO:               scipy: 1.8.0
2023-06-17 12:45:32,306:INFO:              joblib: 1.2.0
2023-06-17 12:45:32,306:INFO:             sklearn: 1.2.2
2023-06-17 12:45:32,306:INFO:                pyod: 1.0.9
2023-06-17 12:45:32,306:INFO:            imblearn: 0.10.1
2023-06-17 12:45:32,306:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:32,306:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:32,306:INFO:               numba: 0.57.0
2023-06-17 12:45:32,306:INFO:            requests: 2.27.1
2023-06-17 12:45:32,306:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:32,306:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:32,306:INFO:         yellowbrick: 1.5
2023-06-17 12:45:32,306:INFO:              plotly: 5.10.0
2023-06-17 12:45:32,306:INFO:             kaleido: 0.2.1
2023-06-17 12:45:32,307:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:32,307:INFO:              sktime: 0.17.0
2023-06-17 12:45:32,307:INFO:               tbats: 1.1.3
2023-06-17 12:45:32,307:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:32,307:INFO:              psutil: 5.9.5
2023-06-17 12:45:32,307:INFO:PyCaret optional dependencies:
2023-06-17 12:45:32,307:INFO:                shap: Not installed
2023-06-17 12:45:32,307:INFO:           interpret: Not installed
2023-06-17 12:45:32,307:INFO:                umap: Not installed
2023-06-17 12:45:32,307:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:32,307:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:32,307:INFO:             autoviz: Not installed
2023-06-17 12:45:32,307:INFO:           fairlearn: Not installed
2023-06-17 12:45:32,307:INFO:             xgboost: 1.7.4
2023-06-17 12:45:32,307:INFO:            catboost: Not installed
2023-06-17 12:45:32,307:INFO:              kmodes: Not installed
2023-06-17 12:45:32,307:INFO:             mlxtend: Not installed
2023-06-17 12:45:32,307:INFO:       statsforecast: Not installed
2023-06-17 12:45:32,307:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:32,307:INFO:                 ray: Not installed
2023-06-17 12:45:32,307:INFO:            hyperopt: Not installed
2023-06-17 12:45:32,307:INFO:              optuna: Not installed
2023-06-17 12:45:32,307:INFO:               skopt: Not installed
2023-06-17 12:45:32,307:INFO:              mlflow: Not installed
2023-06-17 12:45:32,307:INFO:              gradio: Not installed
2023-06-17 12:45:32,307:INFO:             fastapi: Not installed
2023-06-17 12:45:32,307:INFO:             uvicorn: Not installed
2023-06-17 12:45:32,307:INFO:              m2cgen: Not installed
2023-06-17 12:45:32,307:INFO:           evidently: Not installed
2023-06-17 12:45:32,307:INFO:               fugue: Not installed
2023-06-17 12:45:32,307:INFO:           streamlit: 1.23.1
2023-06-17 12:45:32,307:INFO:             prophet: Not installed
2023-06-17 12:45:32,308:INFO:None
2023-06-17 12:45:32,308:INFO:Set up data.
2023-06-17 12:45:32,313:INFO:Set up train/test split.
2023-06-17 12:45:32,316:INFO:Set up index.
2023-06-17 12:45:32,316:INFO:Set up folding strategy.
2023-06-17 12:45:32,316:INFO:Assigning column types.
2023-06-17 12:45:32,318:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:32,318:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,322:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,327:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,381:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,423:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,424:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,426:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,427:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,431:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,436:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,491:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,534:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,534:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,537:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,537:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:45:32,541:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,545:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,599:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,641:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,642:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,644:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,649:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,653:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,707:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,749:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,750:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,752:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,752:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:45:32,761:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,814:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,857:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,857:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,860:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,869:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,922:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,964:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:32,965:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:32,967:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:32,967:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:45:33,031:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,073:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,073:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,076:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,139:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,181:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,182:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,184:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,184:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:33,249:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,292:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,294:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,362:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:33,406:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,409:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,409:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:45:33,519:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,522:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,632:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:33,634:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:33,635:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:33,635:INFO:Set up simple imputation.
2023-06-17 12:45:33,637:INFO:Set up encoding of categorical features.
2023-06-17 12:45:33,637:INFO:Set up column name cleaning.
2023-06-17 12:45:36,887:INFO:PyCaret RegressionExperiment
2023-06-17 12:45:36,887:INFO:Logging name: reg-default-name
2023-06-17 12:45:36,888:INFO:ML Usecase: MLUsecase.REGRESSION
2023-06-17 12:45:36,888:INFO:version 3.0.2
2023-06-17 12:45:36,888:INFO:Initializing setup()
2023-06-17 12:45:36,888:INFO:self.USI: fabd
2023-06-17 12:45:36,888:INFO:self._variable_keys: {'pipeline', 'target_param', 'seed', 'X_test', 'y_test', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'transform_target_param', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:36,888:INFO:Checking environment
2023-06-17 12:45:36,888:INFO:python_version: 3.9.5
2023-06-17 12:45:36,888:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:36,888:INFO:machine: AMD64
2023-06-17 12:45:36,888:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:36,892:INFO:Memory: svmem(total=17102532608, available=7411216384, percent=56.7, used=9691316224, free=7411216384)
2023-06-17 12:45:36,892:INFO:Physical Core: 8
2023-06-17 12:45:36,892:INFO:Logical Core: 16
2023-06-17 12:45:36,892:INFO:Checking libraries
2023-06-17 12:45:36,892:INFO:System:
2023-06-17 12:45:36,892:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:36,892:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:36,892:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:36,892:INFO:PyCaret required dependencies:
2023-06-17 12:45:36,892:INFO:                 pip: 23.1.2
2023-06-17 12:45:36,892:INFO:          setuptools: 56.0.0
2023-06-17 12:45:36,892:INFO:             pycaret: 3.0.2
2023-06-17 12:45:36,892:INFO:             IPython: 8.14.0
2023-06-17 12:45:36,892:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:36,892:INFO:                tqdm: 4.65.0
2023-06-17 12:45:36,892:INFO:               numpy: 1.22.3
2023-06-17 12:45:36,892:INFO:              pandas: 1.4.2
2023-06-17 12:45:36,892:INFO:              jinja2: 3.1.2
2023-06-17 12:45:36,892:INFO:               scipy: 1.8.0
2023-06-17 12:45:36,892:INFO:              joblib: 1.2.0
2023-06-17 12:45:36,893:INFO:             sklearn: 1.2.2
2023-06-17 12:45:36,893:INFO:                pyod: 1.0.9
2023-06-17 12:45:36,893:INFO:            imblearn: 0.10.1
2023-06-17 12:45:36,893:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:36,893:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:36,893:INFO:               numba: 0.57.0
2023-06-17 12:45:36,893:INFO:            requests: 2.27.1
2023-06-17 12:45:36,893:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:36,893:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:36,893:INFO:         yellowbrick: 1.5
2023-06-17 12:45:36,893:INFO:              plotly: 5.10.0
2023-06-17 12:45:36,893:INFO:             kaleido: 0.2.1
2023-06-17 12:45:36,893:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:36,893:INFO:              sktime: 0.17.0
2023-06-17 12:45:36,893:INFO:               tbats: 1.1.3
2023-06-17 12:45:36,893:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:36,893:INFO:              psutil: 5.9.5
2023-06-17 12:45:36,893:INFO:PyCaret optional dependencies:
2023-06-17 12:45:36,893:INFO:                shap: Not installed
2023-06-17 12:45:36,893:INFO:           interpret: Not installed
2023-06-17 12:45:36,893:INFO:                umap: Not installed
2023-06-17 12:45:36,893:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:36,893:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:36,893:INFO:             autoviz: Not installed
2023-06-17 12:45:36,893:INFO:           fairlearn: Not installed
2023-06-17 12:45:36,893:INFO:             xgboost: 1.7.4
2023-06-17 12:45:36,893:INFO:            catboost: Not installed
2023-06-17 12:45:36,893:INFO:              kmodes: Not installed
2023-06-17 12:45:36,893:INFO:             mlxtend: Not installed
2023-06-17 12:45:36,893:INFO:       statsforecast: Not installed
2023-06-17 12:45:36,893:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:36,893:INFO:                 ray: Not installed
2023-06-17 12:45:36,894:INFO:            hyperopt: Not installed
2023-06-17 12:45:36,894:INFO:              optuna: Not installed
2023-06-17 12:45:36,894:INFO:               skopt: Not installed
2023-06-17 12:45:36,894:INFO:              mlflow: Not installed
2023-06-17 12:45:36,894:INFO:              gradio: Not installed
2023-06-17 12:45:36,894:INFO:             fastapi: Not installed
2023-06-17 12:45:36,894:INFO:             uvicorn: Not installed
2023-06-17 12:45:36,894:INFO:              m2cgen: Not installed
2023-06-17 12:45:36,894:INFO:           evidently: Not installed
2023-06-17 12:45:36,894:INFO:               fugue: Not installed
2023-06-17 12:45:36,894:INFO:           streamlit: 1.23.1
2023-06-17 12:45:36,894:INFO:             prophet: Not installed
2023-06-17 12:45:36,894:INFO:None
2023-06-17 12:45:36,894:INFO:Set up data.
2023-06-17 12:45:36,899:INFO:Set up train/test split.
2023-06-17 12:45:36,902:INFO:Set up index.
2023-06-17 12:45:36,902:INFO:Set up folding strategy.
2023-06-17 12:45:36,902:INFO:Assigning column types.
2023-06-17 12:45:36,904:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:36,904:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:36,909:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:36,913:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:36,970:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,013:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,014:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,016:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,016:INFO:Engine for model 'lasso' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,021:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,025:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,081:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,124:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,125:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,127:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,127:INFO:Engine successfully changes for model 'lasso' to 'sklearn'.
2023-06-17 12:45:37,132:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,136:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,191:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,234:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,235:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,237:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,242:INFO:Engine for model 'ridge' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,246:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,301:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,344:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,344:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,347:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,347:INFO:Engine successfully changes for model 'ridge' to 'sklearn'.
2023-06-17 12:45:37,356:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,411:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,455:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,456:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,458:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,467:INFO:Engine for model 'en' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,523:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,566:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,566:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,569:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,569:INFO:Engine successfully changes for model 'en' to 'sklearn'.
2023-06-17 12:45:37,635:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,679:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,680:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,682:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,748:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,791:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,791:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,793:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,794:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:37,858:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:37,902:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:37,905:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:37,970:INFO:Engine for model 'svm' has not been set explicitly, hence returning None.
2023-06-17 12:45:38,014:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:38,017:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:38,017:INFO:Engine successfully changes for model 'svm' to 'sklearn'.
2023-06-17 12:45:38,125:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:38,128:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:38,235:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:38,238:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:38,239:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:38,239:INFO:Set up simple imputation.
2023-06-17 12:45:38,241:INFO:Set up encoding of categorical features.
2023-06-17 12:45:38,241:INFO:Set up column name cleaning.
2023-06-17 12:45:58,950:INFO:PyCaret ClassificationExperiment
2023-06-17 12:45:58,950:INFO:Logging name: clf-default-name
2023-06-17 12:45:58,950:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:45:58,950:INFO:version 3.0.2
2023-06-17 12:45:58,950:INFO:Initializing setup()
2023-06-17 12:45:58,950:INFO:self.USI: 4891
2023-06-17 12:45:58,950:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:45:58,951:INFO:Checking environment
2023-06-17 12:45:58,951:INFO:python_version: 3.9.5
2023-06-17 12:45:58,951:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:45:58,951:INFO:machine: AMD64
2023-06-17 12:45:58,951:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:45:58,954:INFO:Memory: svmem(total=17102532608, available=7470927872, percent=56.3, used=9631604736, free=7470927872)
2023-06-17 12:45:58,954:INFO:Physical Core: 8
2023-06-17 12:45:58,954:INFO:Logical Core: 16
2023-06-17 12:45:58,954:INFO:Checking libraries
2023-06-17 12:45:58,954:INFO:System:
2023-06-17 12:45:58,954:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:45:58,954:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:45:58,954:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:45:58,954:INFO:PyCaret required dependencies:
2023-06-17 12:45:58,954:INFO:                 pip: 23.1.2
2023-06-17 12:45:58,954:INFO:          setuptools: 56.0.0
2023-06-17 12:45:58,954:INFO:             pycaret: 3.0.2
2023-06-17 12:45:58,954:INFO:             IPython: 8.14.0
2023-06-17 12:45:58,954:INFO:          ipywidgets: 8.0.6
2023-06-17 12:45:58,954:INFO:                tqdm: 4.65.0
2023-06-17 12:45:58,954:INFO:               numpy: 1.22.3
2023-06-17 12:45:58,954:INFO:              pandas: 1.4.2
2023-06-17 12:45:58,954:INFO:              jinja2: 3.1.2
2023-06-17 12:45:58,954:INFO:               scipy: 1.8.0
2023-06-17 12:45:58,954:INFO:              joblib: 1.2.0
2023-06-17 12:45:58,954:INFO:             sklearn: 1.2.2
2023-06-17 12:45:58,954:INFO:                pyod: 1.0.9
2023-06-17 12:45:58,954:INFO:            imblearn: 0.10.1
2023-06-17 12:45:58,954:INFO:   category_encoders: 2.6.1
2023-06-17 12:45:58,954:INFO:            lightgbm: 3.3.5
2023-06-17 12:45:58,955:INFO:               numba: 0.57.0
2023-06-17 12:45:58,955:INFO:            requests: 2.27.1
2023-06-17 12:45:58,955:INFO:          matplotlib: 3.5.1
2023-06-17 12:45:58,955:INFO:          scikitplot: 0.3.7
2023-06-17 12:45:58,955:INFO:         yellowbrick: 1.5
2023-06-17 12:45:58,955:INFO:              plotly: 5.10.0
2023-06-17 12:45:58,955:INFO:             kaleido: 0.2.1
2023-06-17 12:45:58,955:INFO:         statsmodels: 0.14.0
2023-06-17 12:45:58,955:INFO:              sktime: 0.17.0
2023-06-17 12:45:58,955:INFO:               tbats: 1.1.3
2023-06-17 12:45:58,955:INFO:            pmdarima: 2.0.3
2023-06-17 12:45:58,955:INFO:              psutil: 5.9.5
2023-06-17 12:45:58,955:INFO:PyCaret optional dependencies:
2023-06-17 12:45:58,955:INFO:                shap: Not installed
2023-06-17 12:45:58,955:INFO:           interpret: Not installed
2023-06-17 12:45:58,955:INFO:                umap: Not installed
2023-06-17 12:45:58,955:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:45:58,955:INFO:  explainerdashboard: Not installed
2023-06-17 12:45:58,955:INFO:             autoviz: Not installed
2023-06-17 12:45:58,955:INFO:           fairlearn: Not installed
2023-06-17 12:45:58,955:INFO:             xgboost: 1.7.4
2023-06-17 12:45:58,955:INFO:            catboost: Not installed
2023-06-17 12:45:58,955:INFO:              kmodes: Not installed
2023-06-17 12:45:58,955:INFO:             mlxtend: Not installed
2023-06-17 12:45:58,955:INFO:       statsforecast: Not installed
2023-06-17 12:45:58,955:INFO:        tune_sklearn: Not installed
2023-06-17 12:45:58,955:INFO:                 ray: Not installed
2023-06-17 12:45:58,955:INFO:            hyperopt: Not installed
2023-06-17 12:45:58,955:INFO:              optuna: Not installed
2023-06-17 12:45:58,955:INFO:               skopt: Not installed
2023-06-17 12:45:58,955:INFO:              mlflow: Not installed
2023-06-17 12:45:58,955:INFO:              gradio: Not installed
2023-06-17 12:45:58,955:INFO:             fastapi: Not installed
2023-06-17 12:45:58,956:INFO:             uvicorn: Not installed
2023-06-17 12:45:58,956:INFO:              m2cgen: Not installed
2023-06-17 12:45:58,956:INFO:           evidently: Not installed
2023-06-17 12:45:58,956:INFO:               fugue: Not installed
2023-06-17 12:45:58,956:INFO:           streamlit: 1.23.1
2023-06-17 12:45:58,956:INFO:             prophet: Not installed
2023-06-17 12:45:58,956:INFO:None
2023-06-17 12:45:58,956:INFO:Set up data.
2023-06-17 12:45:58,961:INFO:Set up train/test split.
2023-06-17 12:45:58,968:INFO:Set up index.
2023-06-17 12:45:58,968:INFO:Set up folding strategy.
2023-06-17 12:45:58,968:INFO:Assigning column types.
2023-06-17 12:45:58,970:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:45:59,014:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,015:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,042:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,044:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,087:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,088:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,115:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,118:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,118:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:45:59,162:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,189:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,192:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,236:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:45:59,263:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,265:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,265:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:45:59,335:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,338:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,407:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,410:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,410:INFO:Preparing preprocessing pipeline...
2023-06-17 12:45:59,411:INFO:Set up label encoding.
2023-06-17 12:45:59,411:INFO:Set up simple imputation.
2023-06-17 12:45:59,413:INFO:Set up encoding of categorical features.
2023-06-17 12:45:59,413:INFO:Set up column name cleaning.
2023-06-17 12:45:59,490:INFO:Finished creating preprocessing pipeline.
2023-06-17 12:45:59,496:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=TargetEncoder(cols=['Million '
                                                                    'Plus '
                                                                    'Cities',
                                                                    'Cause '
                                                                    'Subcategory'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 12:45:59,496:INFO:Creating final display dataframe.
2023-06-17 12:45:59,674:INFO:Setup _display_container:                     Description                                              Value
0                    Session id                                               2151
1                        Target                                Outcome of Incident
2                   Target type                                         Multiclass
3                Target mapping  Greviously Injured: 0, Minor Injury: 1, Person...
4           Original data shape                                          (9550, 5)
5        Transformed data shape                                         (9550, 10)
6   Transformed train set shape                                         (6685, 10)
7    Transformed test set shape                                         (2865, 10)
8              Numeric features                                                  1
9          Categorical features                                                  3
10     Rows with missing values                                               0.0%
11                   Preprocess                                               True
12              Imputation type                                             simple
13           Numeric imputation                                               mean
14       Categorical imputation                                               mode
15     Maximum one-hot encoding                                                 25
16              Encoding method                                               None
17               Fold Generator                                    StratifiedKFold
18                  Fold Number                                                 10
19                     CPU Jobs                                                 -1
20                      Use GPU                                              False
21               Log Experiment                                              False
22              Experiment Name                                   clf-default-name
23                          USI                                               4891
2023-06-17 12:45:59,751:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,754:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,823:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:45:59,825:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:45:59,826:INFO:setup() successfully completed in 0.9s...............
2023-06-17 12:45:59,828:INFO:Initializing compare_models()
2023-06-17 12:45:59,828:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 12:45:59,828:INFO:Checking exceptions
2023-06-17 12:45:59,831:INFO:Preparing display monitor
2023-06-17 12:45:59,833:INFO:Initializing Logistic Regression
2023-06-17 12:45:59,833:INFO:Total runtime is 0.0 minutes
2023-06-17 12:45:59,833:INFO:SubProcess create_model() called ==================================
2023-06-17 12:45:59,833:INFO:Initializing create_model()
2023-06-17 12:45:59,833:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:45:59,834:INFO:Checking exceptions
2023-06-17 12:45:59,834:INFO:Importing libraries
2023-06-17 12:45:59,834:INFO:Copying training dataset
2023-06-17 12:45:59,837:INFO:Defining folds
2023-06-17 12:45:59,837:INFO:Declaring metric variables
2023-06-17 12:45:59,837:INFO:Importing untrained model
2023-06-17 12:45:59,837:INFO:Logistic Regression Imported successfully
2023-06-17 12:45:59,837:INFO:Starting cross validation
2023-06-17 12:45:59,838:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:00,289:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,292:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,295:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,491:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,495:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,499:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,511:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,515:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,519:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,592:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,596:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,599:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,604:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,607:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,610:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,621:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,624:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,625:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,627:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,688:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,744:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,750:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,758:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,760:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,763:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:00,784:INFO:Calculating mean and std
2023-06-17 12:46:00,785:INFO:Creating metrics dataframe
2023-06-17 12:46:00,829:INFO:Uploading results into container
2023-06-17 12:46:00,829:INFO:Uploading model into container now
2023-06-17 12:46:00,829:INFO:_master_model_container: 1
2023-06-17 12:46:00,830:INFO:_display_container: 2
2023-06-17 12:46:00,830:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=2151, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 12:46:00,830:INFO:create_model() successfully completed......................................
2023-06-17 12:46:00,958:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:00,958:INFO:Creating metrics dataframe
2023-06-17 12:46:00,961:INFO:Initializing K Neighbors Classifier
2023-06-17 12:46:00,961:INFO:Total runtime is 0.018797135353088378 minutes
2023-06-17 12:46:00,961:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:00,961:INFO:Initializing create_model()
2023-06-17 12:46:00,961:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:00,961:INFO:Checking exceptions
2023-06-17 12:46:00,961:INFO:Importing libraries
2023-06-17 12:46:00,962:INFO:Copying training dataset
2023-06-17 12:46:00,966:INFO:Defining folds
2023-06-17 12:46:00,966:INFO:Declaring metric variables
2023-06-17 12:46:00,966:INFO:Importing untrained model
2023-06-17 12:46:00,966:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:46:00,966:INFO:Starting cross validation
2023-06-17 12:46:00,967:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:01,307:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,321:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,330:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,331:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,334:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,339:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,351:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,355:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,360:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,369:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,372:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,377:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,559:INFO:Calculating mean and std
2023-06-17 12:46:01,560:INFO:Creating metrics dataframe
2023-06-17 12:46:01,602:INFO:Uploading results into container
2023-06-17 12:46:01,603:INFO:Uploading model into container now
2023-06-17 12:46:01,603:INFO:_master_model_container: 2
2023-06-17 12:46:01,603:INFO:_display_container: 2
2023-06-17 12:46:01,603:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:46:01,603:INFO:create_model() successfully completed......................................
2023-06-17 12:46:01,721:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:01,721:INFO:Creating metrics dataframe
2023-06-17 12:46:01,724:INFO:Initializing Naive Bayes
2023-06-17 12:46:01,724:INFO:Total runtime is 0.031516150633494056 minutes
2023-06-17 12:46:01,724:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:01,725:INFO:Initializing create_model()
2023-06-17 12:46:01,725:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:01,725:INFO:Checking exceptions
2023-06-17 12:46:01,725:INFO:Importing libraries
2023-06-17 12:46:01,725:INFO:Copying training dataset
2023-06-17 12:46:01,728:INFO:Defining folds
2023-06-17 12:46:01,729:INFO:Declaring metric variables
2023-06-17 12:46:01,729:INFO:Importing untrained model
2023-06-17 12:46:01,729:INFO:Naive Bayes Imported successfully
2023-06-17 12:46:01,729:INFO:Starting cross validation
2023-06-17 12:46:01,730:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:01,991:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:01,996:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,001:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,002:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,008:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,013:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,016:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,018:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,021:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,023:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,025:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,025:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,028:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,030:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,034:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,035:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,039:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,042:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,045:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,045:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,049:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,050:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,053:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,056:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,063:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,066:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,069:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,234:INFO:Calculating mean and std
2023-06-17 12:46:02,235:INFO:Creating metrics dataframe
2023-06-17 12:46:02,279:INFO:Uploading results into container
2023-06-17 12:46:02,280:INFO:Uploading model into container now
2023-06-17 12:46:02,280:INFO:_master_model_container: 3
2023-06-17 12:46:02,280:INFO:_display_container: 2
2023-06-17 12:46:02,281:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 12:46:02,281:INFO:create_model() successfully completed......................................
2023-06-17 12:46:02,397:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:02,397:INFO:Creating metrics dataframe
2023-06-17 12:46:02,401:INFO:Initializing Decision Tree Classifier
2023-06-17 12:46:02,401:INFO:Total runtime is 0.04279949267705281 minutes
2023-06-17 12:46:02,401:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:02,401:INFO:Initializing create_model()
2023-06-17 12:46:02,401:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:02,401:INFO:Checking exceptions
2023-06-17 12:46:02,401:INFO:Importing libraries
2023-06-17 12:46:02,401:INFO:Copying training dataset
2023-06-17 12:46:02,405:INFO:Defining folds
2023-06-17 12:46:02,405:INFO:Declaring metric variables
2023-06-17 12:46:02,405:INFO:Importing untrained model
2023-06-17 12:46:02,405:INFO:Decision Tree Classifier Imported successfully
2023-06-17 12:46:02,406:INFO:Starting cross validation
2023-06-17 12:46:02,407:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:02,690:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,693:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,697:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,699:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,702:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,711:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,715:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,718:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,719:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,721:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,722:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,723:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,725:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,726:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,727:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,730:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,731:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,731:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,732:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,736:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,738:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,744:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,748:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,751:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:02,925:INFO:Calculating mean and std
2023-06-17 12:46:02,926:INFO:Creating metrics dataframe
2023-06-17 12:46:02,968:INFO:Uploading results into container
2023-06-17 12:46:02,969:INFO:Uploading model into container now
2023-06-17 12:46:02,969:INFO:_master_model_container: 4
2023-06-17 12:46:02,969:INFO:_display_container: 2
2023-06-17 12:46:02,969:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=2151, splitter='best')
2023-06-17 12:46:02,969:INFO:create_model() successfully completed......................................
2023-06-17 12:46:03,085:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:03,085:INFO:Creating metrics dataframe
2023-06-17 12:46:03,088:INFO:Initializing SVM - Linear Kernel
2023-06-17 12:46:03,088:INFO:Total runtime is 0.05425012509028117 minutes
2023-06-17 12:46:03,088:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:03,088:INFO:Initializing create_model()
2023-06-17 12:46:03,088:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:03,088:INFO:Checking exceptions
2023-06-17 12:46:03,088:INFO:Importing libraries
2023-06-17 12:46:03,088:INFO:Copying training dataset
2023-06-17 12:46:03,091:INFO:Defining folds
2023-06-17 12:46:03,091:INFO:Declaring metric variables
2023-06-17 12:46:03,092:INFO:Importing untrained model
2023-06-17 12:46:03,092:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:46:03,092:INFO:Starting cross validation
2023-06-17 12:46:03,093:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:03,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,360:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,363:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,365:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,370:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,394:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,396:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,401:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,402:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,403:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,404:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,406:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,409:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,412:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,414:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,416:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,417:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,420:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,422:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,423:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,435:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,436:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,438:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,439:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,440:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,441:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,442:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,443:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,443:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,445:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,446:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,447:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,448:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,449:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,450:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,451:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:46:03,452:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,453:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,453:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,456:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,456:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,457:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:03,458:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,617:INFO:Calculating mean and std
2023-06-17 12:46:03,618:INFO:Creating metrics dataframe
2023-06-17 12:46:03,662:INFO:Uploading results into container
2023-06-17 12:46:03,663:INFO:Uploading model into container now
2023-06-17 12:46:03,663:INFO:_master_model_container: 5
2023-06-17 12:46:03,663:INFO:_display_container: 2
2023-06-17 12:46:03,663:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=2151, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 12:46:03,663:INFO:create_model() successfully completed......................................
2023-06-17 12:46:03,784:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:03,784:INFO:Creating metrics dataframe
2023-06-17 12:46:03,787:INFO:Initializing Ridge Classifier
2023-06-17 12:46:03,787:INFO:Total runtime is 0.06590015093485514 minutes
2023-06-17 12:46:03,787:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:03,788:INFO:Initializing create_model()
2023-06-17 12:46:03,788:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:03,788:INFO:Checking exceptions
2023-06-17 12:46:03,788:INFO:Importing libraries
2023-06-17 12:46:03,788:INFO:Copying training dataset
2023-06-17 12:46:03,791:INFO:Defining folds
2023-06-17 12:46:03,791:INFO:Declaring metric variables
2023-06-17 12:46:03,791:INFO:Importing untrained model
2023-06-17 12:46:03,791:INFO:Ridge Classifier Imported successfully
2023-06-17 12:46:03,792:INFO:Starting cross validation
2023-06-17 12:46:03,792:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:03,972:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:03,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,980:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,985:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:03,997:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:03,998:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,003:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,004:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,006:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,007:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,011:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,015:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,015:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,016:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,019:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,019:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,021:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,024:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,026:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,029:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,030:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,031:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,031:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,032:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,035:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,036:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,036:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,037:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,037:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,040:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,043:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,045:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,047:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,057:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:46:04,058:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,061:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,064:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:04,232:INFO:Calculating mean and std
2023-06-17 12:46:04,233:INFO:Creating metrics dataframe
2023-06-17 12:46:04,278:INFO:Uploading results into container
2023-06-17 12:46:04,279:INFO:Uploading model into container now
2023-06-17 12:46:04,279:INFO:_master_model_container: 6
2023-06-17 12:46:04,279:INFO:_display_container: 2
2023-06-17 12:46:04,279:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=2151, solver='auto',
                tol=0.0001)
2023-06-17 12:46:04,279:INFO:create_model() successfully completed......................................
2023-06-17 12:46:04,396:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:04,396:INFO:Creating metrics dataframe
2023-06-17 12:46:04,399:INFO:Initializing Random Forest Classifier
2023-06-17 12:46:04,399:INFO:Total runtime is 0.07610011498133341 minutes
2023-06-17 12:46:04,400:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:04,400:INFO:Initializing create_model()
2023-06-17 12:46:04,400:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:04,400:INFO:Checking exceptions
2023-06-17 12:46:04,400:INFO:Importing libraries
2023-06-17 12:46:04,400:INFO:Copying training dataset
2023-06-17 12:46:04,403:INFO:Defining folds
2023-06-17 12:46:04,403:INFO:Declaring metric variables
2023-06-17 12:46:04,403:INFO:Importing untrained model
2023-06-17 12:46:04,403:INFO:Random Forest Classifier Imported successfully
2023-06-17 12:46:04,403:INFO:Starting cross validation
2023-06-17 12:46:04,404:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:05,678:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,680:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,682:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,684:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,687:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,689:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,689:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,692:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,704:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,709:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,713:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,714:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,720:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,725:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,744:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,749:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,754:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,780:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,783:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,863:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,866:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,869:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,890:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,893:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,894:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,897:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,897:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:05,900:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,020:INFO:Calculating mean and std
2023-06-17 12:46:06,021:INFO:Creating metrics dataframe
2023-06-17 12:46:06,073:INFO:Uploading results into container
2023-06-17 12:46:06,074:INFO:Uploading model into container now
2023-06-17 12:46:06,074:INFO:_master_model_container: 7
2023-06-17 12:46:06,074:INFO:_display_container: 2
2023-06-17 12:46:06,075:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=2151, verbose=0, warm_start=False)
2023-06-17 12:46:06,075:INFO:create_model() successfully completed......................................
2023-06-17 12:46:06,199:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:06,199:INFO:Creating metrics dataframe
2023-06-17 12:46:06,202:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 12:46:06,202:INFO:Total runtime is 0.10613641738891602 minutes
2023-06-17 12:46:06,202:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:06,203:INFO:Initializing create_model()
2023-06-17 12:46:06,203:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:06,203:INFO:Checking exceptions
2023-06-17 12:46:06,203:INFO:Importing libraries
2023-06-17 12:46:06,203:INFO:Copying training dataset
2023-06-17 12:46:06,206:INFO:Defining folds
2023-06-17 12:46:06,206:INFO:Declaring metric variables
2023-06-17 12:46:06,206:INFO:Importing untrained model
2023-06-17 12:46:06,206:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:46:06,207:INFO:Starting cross validation
2023-06-17 12:46:06,207:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:06,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,373:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,375:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,375:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,386:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,390:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,393:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,394:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,409:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:46:06,492:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,494:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,498:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,501:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,506:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,507:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,511:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,513:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,517:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,517:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,521:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,526:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,526:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,532:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,533:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,535:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,536:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,536:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,537:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,538:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,540:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,540:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,541:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,543:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,543:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,544:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,545:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,550:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:06,769:INFO:Calculating mean and std
2023-06-17 12:46:06,769:INFO:Creating metrics dataframe
2023-06-17 12:46:06,819:INFO:Uploading results into container
2023-06-17 12:46:06,819:INFO:Uploading model into container now
2023-06-17 12:46:06,820:INFO:_master_model_container: 8
2023-06-17 12:46:06,820:INFO:_display_container: 2
2023-06-17 12:46:06,820:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-17 12:46:06,820:INFO:create_model() successfully completed......................................
2023-06-17 12:46:06,937:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:06,937:INFO:Creating metrics dataframe
2023-06-17 12:46:06,940:INFO:Initializing Ada Boost Classifier
2023-06-17 12:46:06,940:INFO:Total runtime is 0.11843642393747966 minutes
2023-06-17 12:46:06,940:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:06,941:INFO:Initializing create_model()
2023-06-17 12:46:06,941:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:06,941:INFO:Checking exceptions
2023-06-17 12:46:06,941:INFO:Importing libraries
2023-06-17 12:46:06,941:INFO:Copying training dataset
2023-06-17 12:46:06,944:INFO:Defining folds
2023-06-17 12:46:06,944:INFO:Declaring metric variables
2023-06-17 12:46:06,944:INFO:Importing untrained model
2023-06-17 12:46:06,944:INFO:Ada Boost Classifier Imported successfully
2023-06-17 12:46:06,944:INFO:Starting cross validation
2023-06-17 12:46:06,945:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:07,507:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,510:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,513:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,524:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,531:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,536:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,547:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,554:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,582:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,585:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,586:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,588:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,591:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,591:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,594:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,599:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,602:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,603:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,608:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,616:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,618:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,619:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,621:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,622:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,624:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:07,812:INFO:Calculating mean and std
2023-06-17 12:46:07,813:INFO:Creating metrics dataframe
2023-06-17 12:46:07,867:INFO:Uploading results into container
2023-06-17 12:46:07,867:INFO:Uploading model into container now
2023-06-17 12:46:07,868:INFO:_master_model_container: 9
2023-06-17 12:46:07,868:INFO:_display_container: 2
2023-06-17 12:46:07,868:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=2151)
2023-06-17 12:46:07,868:INFO:create_model() successfully completed......................................
2023-06-17 12:46:07,988:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:07,988:INFO:Creating metrics dataframe
2023-06-17 12:46:07,992:INFO:Initializing Gradient Boosting Classifier
2023-06-17 12:46:07,992:INFO:Total runtime is 0.1359697659810384 minutes
2023-06-17 12:46:07,992:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:07,992:INFO:Initializing create_model()
2023-06-17 12:46:07,992:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:07,992:INFO:Checking exceptions
2023-06-17 12:46:07,992:INFO:Importing libraries
2023-06-17 12:46:07,992:INFO:Copying training dataset
2023-06-17 12:46:07,995:INFO:Defining folds
2023-06-17 12:46:07,995:INFO:Declaring metric variables
2023-06-17 12:46:07,995:INFO:Importing untrained model
2023-06-17 12:46:07,996:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:46:07,996:INFO:Starting cross validation
2023-06-17 12:46:07,997:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:11,303:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,329:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,333:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,337:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,337:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,341:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,343:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,346:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,347:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,347:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,347:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,348:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,351:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,366:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,372:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,376:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,377:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,380:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,408:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,410:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,411:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,412:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,413:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,415:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:11,656:INFO:Calculating mean and std
2023-06-17 12:46:11,656:INFO:Creating metrics dataframe
2023-06-17 12:46:11,717:INFO:Uploading results into container
2023-06-17 12:46:11,718:INFO:Uploading model into container now
2023-06-17 12:46:11,718:INFO:_master_model_container: 10
2023-06-17 12:46:11,718:INFO:_display_container: 2
2023-06-17 12:46:11,719:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:46:11,719:INFO:create_model() successfully completed......................................
2023-06-17 12:46:11,835:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:11,835:INFO:Creating metrics dataframe
2023-06-17 12:46:11,838:INFO:Initializing Linear Discriminant Analysis
2023-06-17 12:46:11,838:INFO:Total runtime is 0.20007067918777466 minutes
2023-06-17 12:46:11,838:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:11,838:INFO:Initializing create_model()
2023-06-17 12:46:11,838:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:11,838:INFO:Checking exceptions
2023-06-17 12:46:11,838:INFO:Importing libraries
2023-06-17 12:46:11,838:INFO:Copying training dataset
2023-06-17 12:46:11,842:INFO:Defining folds
2023-06-17 12:46:11,842:INFO:Declaring metric variables
2023-06-17 12:46:11,842:INFO:Importing untrained model
2023-06-17 12:46:11,842:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 12:46:11,842:INFO:Starting cross validation
2023-06-17 12:46:11,843:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:12,091:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,094:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,097:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,133:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,135:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,137:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,137:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,139:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,140:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,142:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,142:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,142:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,145:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,147:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,149:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,155:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,156:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,157:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,159:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,161:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,164:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,167:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,170:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,174:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,177:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,181:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:12,428:INFO:Calculating mean and std
2023-06-17 12:46:12,428:INFO:Creating metrics dataframe
2023-06-17 12:46:12,486:INFO:Uploading results into container
2023-06-17 12:46:12,487:INFO:Uploading model into container now
2023-06-17 12:46:12,487:INFO:_master_model_container: 11
2023-06-17 12:46:12,487:INFO:_display_container: 2
2023-06-17 12:46:12,488:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 12:46:12,488:INFO:create_model() successfully completed......................................
2023-06-17 12:46:12,605:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:12,605:INFO:Creating metrics dataframe
2023-06-17 12:46:12,608:INFO:Initializing Extra Trees Classifier
2023-06-17 12:46:12,608:INFO:Total runtime is 0.21290401617685953 minutes
2023-06-17 12:46:12,608:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:12,609:INFO:Initializing create_model()
2023-06-17 12:46:12,609:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:12,609:INFO:Checking exceptions
2023-06-17 12:46:12,609:INFO:Importing libraries
2023-06-17 12:46:12,609:INFO:Copying training dataset
2023-06-17 12:46:12,612:INFO:Defining folds
2023-06-17 12:46:12,612:INFO:Declaring metric variables
2023-06-17 12:46:12,612:INFO:Importing untrained model
2023-06-17 12:46:12,612:INFO:Extra Trees Classifier Imported successfully
2023-06-17 12:46:12,612:INFO:Starting cross validation
2023-06-17 12:46:12,613:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:13,957:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,959:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,964:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,967:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,968:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,974:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,978:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,983:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,988:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,992:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:13,997:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,002:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,006:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,010:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,034:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,038:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,041:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,043:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,046:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,050:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,053:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,058:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,062:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,075:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,079:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,082:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,086:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,089:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,092:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:14,390:INFO:Calculating mean and std
2023-06-17 12:46:14,391:INFO:Creating metrics dataframe
2023-06-17 12:46:14,457:INFO:Uploading results into container
2023-06-17 12:46:14,458:INFO:Uploading model into container now
2023-06-17 12:46:14,458:INFO:_master_model_container: 12
2023-06-17 12:46:14,458:INFO:_display_container: 2
2023-06-17 12:46:14,458:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=2151, verbose=0, warm_start=False)
2023-06-17 12:46:14,458:INFO:create_model() successfully completed......................................
2023-06-17 12:46:14,575:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:14,575:INFO:Creating metrics dataframe
2023-06-17 12:46:14,578:INFO:Initializing Extreme Gradient Boosting
2023-06-17 12:46:14,578:INFO:Total runtime is 0.24573734601338704 minutes
2023-06-17 12:46:14,578:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:14,578:INFO:Initializing create_model()
2023-06-17 12:46:14,578:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:14,578:INFO:Checking exceptions
2023-06-17 12:46:14,578:INFO:Importing libraries
2023-06-17 12:46:14,578:INFO:Copying training dataset
2023-06-17 12:46:14,581:INFO:Defining folds
2023-06-17 12:46:14,581:INFO:Declaring metric variables
2023-06-17 12:46:14,582:INFO:Importing untrained model
2023-06-17 12:46:14,582:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 12:46:14,582:INFO:Starting cross validation
2023-06-17 12:46:14,583:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:16,549:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,552:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,630:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,633:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,637:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,654:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,657:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,660:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,719:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,721:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,724:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,724:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,726:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,743:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,747:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,752:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,773:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,775:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,779:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,781:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,784:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,794:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,797:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,799:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,809:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,811:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,814:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:16,994:INFO:Calculating mean and std
2023-06-17 12:46:16,995:INFO:Creating metrics dataframe
2023-06-17 12:46:17,064:INFO:Uploading results into container
2023-06-17 12:46:17,064:INFO:Uploading model into container now
2023-06-17 12:46:17,065:INFO:_master_model_container: 13
2023-06-17 12:46:17,065:INFO:_display_container: 2
2023-06-17 12:46:17,065:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 12:46:17,065:INFO:create_model() successfully completed......................................
2023-06-17 12:46:17,188:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:17,188:INFO:Creating metrics dataframe
2023-06-17 12:46:17,191:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 12:46:17,191:INFO:Total runtime is 0.2892873764038086 minutes
2023-06-17 12:46:17,191:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:17,191:INFO:Initializing create_model()
2023-06-17 12:46:17,191:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:17,191:INFO:Checking exceptions
2023-06-17 12:46:17,191:INFO:Importing libraries
2023-06-17 12:46:17,191:INFO:Copying training dataset
2023-06-17 12:46:17,195:INFO:Defining folds
2023-06-17 12:46:17,195:INFO:Declaring metric variables
2023-06-17 12:46:17,195:INFO:Importing untrained model
2023-06-17 12:46:17,195:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 12:46:17,196:INFO:Starting cross validation
2023-06-17 12:46:17,196:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:18,397:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,401:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,405:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,406:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,410:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,414:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,415:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,419:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,422:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,429:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,434:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,438:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,442:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,445:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,450:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,458:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,459:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,462:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,463:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,464:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,465:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,467:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,467:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,468:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,470:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,527:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,530:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:18,809:INFO:Calculating mean and std
2023-06-17 12:46:18,810:INFO:Creating metrics dataframe
2023-06-17 12:46:18,883:INFO:Uploading results into container
2023-06-17 12:46:18,883:INFO:Uploading model into container now
2023-06-17 12:46:18,884:INFO:_master_model_container: 14
2023-06-17 12:46:18,884:INFO:_display_container: 2
2023-06-17 12:46:18,884:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=2151, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 12:46:18,884:INFO:create_model() successfully completed......................................
2023-06-17 12:46:19,002:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:19,002:INFO:Creating metrics dataframe
2023-06-17 12:46:19,005:INFO:Initializing Dummy Classifier
2023-06-17 12:46:19,005:INFO:Total runtime is 0.3195206761360168 minutes
2023-06-17 12:46:19,005:INFO:SubProcess create_model() called ==================================
2023-06-17 12:46:19,006:INFO:Initializing create_model()
2023-06-17 12:46:19,006:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D1731310>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:19,006:INFO:Checking exceptions
2023-06-17 12:46:19,006:INFO:Importing libraries
2023-06-17 12:46:19,006:INFO:Copying training dataset
2023-06-17 12:46:19,010:INFO:Defining folds
2023-06-17 12:46:19,010:INFO:Declaring metric variables
2023-06-17 12:46:19,010:INFO:Importing untrained model
2023-06-17 12:46:19,010:INFO:Dummy Classifier Imported successfully
2023-06-17 12:46:19,010:INFO:Starting cross validation
2023-06-17 12:46:19,011:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:46:19,275:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,278:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,280:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,281:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,295:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,298:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,300:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,301:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,302:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,304:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,306:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,307:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,308:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,309:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,310:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,311:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,311:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,312:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,313:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,314:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,314:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,316:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,319:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,322:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,327:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,333:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,336:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,338:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 in labels with no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:46:19,340:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1396: UserWarning: Note that pos_label (set to 'Total number of Accidents') is ignored when average != 'binary' (got 'weighted'). You may use labels=[pos_label] to specify a single positive class.
  warnings.warn(

2023-06-17 12:46:19,688:INFO:Calculating mean and std
2023-06-17 12:46:19,688:INFO:Creating metrics dataframe
2023-06-17 12:46:19,761:INFO:Uploading results into container
2023-06-17 12:46:19,761:INFO:Uploading model into container now
2023-06-17 12:46:19,762:INFO:_master_model_container: 15
2023-06-17 12:46:19,762:INFO:_display_container: 2
2023-06-17 12:46:19,762:INFO:DummyClassifier(constant=None, random_state=2151, strategy='prior')
2023-06-17 12:46:19,762:INFO:create_model() successfully completed......................................
2023-06-17 12:46:19,881:INFO:SubProcess create_model() end ==================================
2023-06-17 12:46:19,881:INFO:Creating metrics dataframe
2023-06-17 12:46:19,885:INFO:Initializing create_model()
2023-06-17 12:46:19,885:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214D0478FA0>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:46:19,885:INFO:Checking exceptions
2023-06-17 12:46:19,886:INFO:Importing libraries
2023-06-17 12:46:19,886:INFO:Copying training dataset
2023-06-17 12:46:19,889:INFO:Defining folds
2023-06-17 12:46:19,889:INFO:Declaring metric variables
2023-06-17 12:46:19,889:INFO:Importing untrained model
2023-06-17 12:46:19,889:INFO:Declaring custom model
2023-06-17 12:46:19,889:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:46:19,890:INFO:Cross validation set to False
2023-06-17 12:46:19,890:INFO:Fitting Model
2023-06-17 12:46:22,223:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:46:22,224:INFO:create_model() successfully completed......................................
2023-06-17 12:46:22,354:INFO:_master_model_container: 15
2023-06-17 12:46:22,354:INFO:_display_container: 2
2023-06-17 12:46:22,355:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:46:22,355:INFO:compare_models() successfully completed......................................
2023-06-17 12:46:22,362:INFO:Initializing save_model()
2023-06-17 12:46:22,362:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=2151, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                    transformer=TargetEncoder(cols=['Million '
                                                                    'Plus '
                                                                    'Cities',
                                                                    'Cause '
                                                                    'Subcategory'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 12:46:22,362:INFO:Adding model into prep_pipe
2023-06-17 12:46:22,381:INFO:best_model.pkl saved in current working directory
2023-06-17 12:46:22,388:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None, include=['Count'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=2151, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-06-17 12:46:22,388:INFO:save_model() successfully completed......................................
2023-06-17 12:48:56,189:INFO:PyCaret ClassificationExperiment
2023-06-17 12:48:56,190:INFO:Logging name: clf-default-name
2023-06-17 12:48:56,190:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:48:56,190:INFO:version 3.0.2
2023-06-17 12:48:56,190:INFO:Initializing setup()
2023-06-17 12:48:56,190:INFO:self.USI: 4c83
2023-06-17 12:48:56,190:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:48:56,190:INFO:Checking environment
2023-06-17 12:48:56,190:INFO:python_version: 3.9.5
2023-06-17 12:48:56,190:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:48:56,190:INFO:machine: AMD64
2023-06-17 12:48:56,190:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:48:56,194:INFO:Memory: svmem(total=17102532608, available=7365263360, percent=56.9, used=9737269248, free=7365263360)
2023-06-17 12:48:56,194:INFO:Physical Core: 8
2023-06-17 12:48:56,194:INFO:Logical Core: 16
2023-06-17 12:48:56,194:INFO:Checking libraries
2023-06-17 12:48:56,194:INFO:System:
2023-06-17 12:48:56,194:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:48:56,194:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:48:56,194:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:48:56,194:INFO:PyCaret required dependencies:
2023-06-17 12:48:56,194:INFO:                 pip: 23.1.2
2023-06-17 12:48:56,194:INFO:          setuptools: 56.0.0
2023-06-17 12:48:56,194:INFO:             pycaret: 3.0.2
2023-06-17 12:48:56,194:INFO:             IPython: 8.14.0
2023-06-17 12:48:56,194:INFO:          ipywidgets: 8.0.6
2023-06-17 12:48:56,194:INFO:                tqdm: 4.65.0
2023-06-17 12:48:56,194:INFO:               numpy: 1.22.3
2023-06-17 12:48:56,194:INFO:              pandas: 1.4.2
2023-06-17 12:48:56,194:INFO:              jinja2: 3.1.2
2023-06-17 12:48:56,194:INFO:               scipy: 1.8.0
2023-06-17 12:48:56,194:INFO:              joblib: 1.2.0
2023-06-17 12:48:56,194:INFO:             sklearn: 1.2.2
2023-06-17 12:48:56,194:INFO:                pyod: 1.0.9
2023-06-17 12:48:56,194:INFO:            imblearn: 0.10.1
2023-06-17 12:48:56,195:INFO:   category_encoders: 2.6.1
2023-06-17 12:48:56,195:INFO:            lightgbm: 3.3.5
2023-06-17 12:48:56,195:INFO:               numba: 0.57.0
2023-06-17 12:48:56,195:INFO:            requests: 2.27.1
2023-06-17 12:48:56,195:INFO:          matplotlib: 3.5.1
2023-06-17 12:48:56,195:INFO:          scikitplot: 0.3.7
2023-06-17 12:48:56,195:INFO:         yellowbrick: 1.5
2023-06-17 12:48:56,195:INFO:              plotly: 5.10.0
2023-06-17 12:48:56,195:INFO:             kaleido: 0.2.1
2023-06-17 12:48:56,195:INFO:         statsmodels: 0.14.0
2023-06-17 12:48:56,195:INFO:              sktime: 0.17.0
2023-06-17 12:48:56,195:INFO:               tbats: 1.1.3
2023-06-17 12:48:56,195:INFO:            pmdarima: 2.0.3
2023-06-17 12:48:56,195:INFO:              psutil: 5.9.5
2023-06-17 12:48:56,195:INFO:PyCaret optional dependencies:
2023-06-17 12:48:56,195:INFO:                shap: Not installed
2023-06-17 12:48:56,195:INFO:           interpret: Not installed
2023-06-17 12:48:56,195:INFO:                umap: Not installed
2023-06-17 12:48:56,195:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:48:56,195:INFO:  explainerdashboard: Not installed
2023-06-17 12:48:56,195:INFO:             autoviz: Not installed
2023-06-17 12:48:56,195:INFO:           fairlearn: Not installed
2023-06-17 12:48:56,195:INFO:             xgboost: 1.7.4
2023-06-17 12:48:56,195:INFO:            catboost: Not installed
2023-06-17 12:48:56,195:INFO:              kmodes: Not installed
2023-06-17 12:48:56,195:INFO:             mlxtend: Not installed
2023-06-17 12:48:56,195:INFO:       statsforecast: Not installed
2023-06-17 12:48:56,195:INFO:        tune_sklearn: Not installed
2023-06-17 12:48:56,195:INFO:                 ray: Not installed
2023-06-17 12:48:56,195:INFO:            hyperopt: Not installed
2023-06-17 12:48:56,195:INFO:              optuna: Not installed
2023-06-17 12:48:56,195:INFO:               skopt: Not installed
2023-06-17 12:48:56,195:INFO:              mlflow: Not installed
2023-06-17 12:48:56,195:INFO:              gradio: Not installed
2023-06-17 12:48:56,196:INFO:             fastapi: Not installed
2023-06-17 12:48:56,196:INFO:             uvicorn: Not installed
2023-06-17 12:48:56,196:INFO:              m2cgen: Not installed
2023-06-17 12:48:56,196:INFO:           evidently: Not installed
2023-06-17 12:48:56,196:INFO:               fugue: Not installed
2023-06-17 12:48:56,196:INFO:           streamlit: 1.23.1
2023-06-17 12:48:56,196:INFO:             prophet: Not installed
2023-06-17 12:48:56,196:INFO:None
2023-06-17 12:48:56,196:INFO:Set up data.
2023-06-17 12:48:56,208:INFO:Set up train/test split.
2023-06-17 12:48:56,217:INFO:Set up index.
2023-06-17 12:48:56,217:INFO:Set up folding strategy.
2023-06-17 12:48:56,217:INFO:Assigning column types.
2023-06-17 12:48:56,220:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:48:56,263:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,264:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,290:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,293:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,335:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,336:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,363:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,365:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,365:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:48:56,408:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,434:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,437:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,479:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:48:56,505:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,508:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,508:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:48:56,578:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,580:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,649:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:56,651:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:56,652:INFO:Preparing preprocessing pipeline...
2023-06-17 12:48:56,654:INFO:Set up label encoding.
2023-06-17 12:48:56,654:INFO:Set up simple imputation.
2023-06-17 12:48:56,658:INFO:Set up encoding of categorical features.
2023-06-17 12:48:56,658:INFO:Set up column name cleaning.
2023-06-17 12:48:56,920:INFO:Finished creating preprocessing pipeline.
2023-06-17 12:48:56,926:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'ID',
                                             'Number of Bags', 'Aroma',
                                             'Flavor', 'Aftertaste', 'Acidity',
                                             'Body', 'Balance', 'Uniformity...
                                                                    'Weight',
                                                                    'Grading '
                                                                    'Date',
                                                                    'Owner',
                                                                    'Variety',
                                                                    'Expiration'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False)
2023-06-17 12:48:56,926:INFO:Creating final display dataframe.
2023-06-17 12:48:57,464:INFO:Setup _display_container:                     Description             Value
0                    Session id              3961
1                        Target         Clean Cup
2                   Target type        Multiclass
3                Target mapping           10.0: 0
4           Original data shape         (207, 41)
5        Transformed data shape        (207, 156)
6   Transformed train set shape        (144, 156)
7    Transformed test set shape         (63, 156)
8              Numeric features                18
9          Categorical features                22
10     Rows with missing values             66.7%
11                   Preprocess              True
12              Imputation type            simple
13           Numeric imputation              mean
14       Categorical imputation              mode
15     Maximum one-hot encoding                25
16              Encoding method              None
17               Fold Generator   StratifiedKFold
18                  Fold Number                10
19                     CPU Jobs                -1
20                      Use GPU             False
21               Log Experiment             False
22              Experiment Name  clf-default-name
23                          USI              4c83
2023-06-17 12:48:57,540:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:57,542:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:57,611:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:48:57,613:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:48:57,614:INFO:setup() successfully completed in 1.46s...............
2023-06-17 12:48:57,616:INFO:Initializing compare_models()
2023-06-17 12:48:57,616:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 12:48:57,616:INFO:Checking exceptions
2023-06-17 12:48:57,620:INFO:Preparing display monitor
2023-06-17 12:48:57,622:INFO:Initializing Logistic Regression
2023-06-17 12:48:57,622:INFO:Total runtime is 0.0 minutes
2023-06-17 12:48:57,622:INFO:SubProcess create_model() called ==================================
2023-06-17 12:48:57,622:INFO:Initializing create_model()
2023-06-17 12:48:57,622:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:48:57,622:INFO:Checking exceptions
2023-06-17 12:48:57,622:INFO:Importing libraries
2023-06-17 12:48:57,623:INFO:Copying training dataset
2023-06-17 12:48:57,626:INFO:Defining folds
2023-06-17 12:48:57,626:INFO:Declaring metric variables
2023-06-17 12:48:57,626:INFO:Importing untrained model
2023-06-17 12:48:57,627:INFO:Logistic Regression Imported successfully
2023-06-17 12:48:57,627:INFO:Starting cross validation
2023-06-17 12:48:57,629:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:48:58,435:WARNING:create_model() for lr raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 12:48:58,437:WARNING:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py", line 1241, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2023-06-17 12:48:58,437:INFO:Initializing create_model()
2023-06-17 12:48:58,437:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:48:58,437:INFO:Checking exceptions
2023-06-17 12:48:58,437:INFO:Importing libraries
2023-06-17 12:48:58,438:INFO:Copying training dataset
2023-06-17 12:48:58,442:INFO:Defining folds
2023-06-17 12:48:58,442:INFO:Declaring metric variables
2023-06-17 12:48:58,442:INFO:Importing untrained model
2023-06-17 12:48:58,443:INFO:Logistic Regression Imported successfully
2023-06-17 12:48:58,443:INFO:Starting cross validation
2023-06-17 12:48:58,446:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:48:59,265:ERROR:create_model() for lr raised an exception or returned all 0.0:
2023-06-17 12:48:59,266:ERROR:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py", line 1241, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py", line 1241, in fit
    raise ValueError(
ValueError: This solver needs samples of at least 2 classes in the data, but the data contains only one class: 0


2023-06-17 12:48:59,376:INFO:Initializing K Neighbors Classifier
2023-06-17 12:48:59,376:INFO:Total runtime is 0.029233264923095702 minutes
2023-06-17 12:48:59,376:INFO:SubProcess create_model() called ==================================
2023-06-17 12:48:59,376:INFO:Initializing create_model()
2023-06-17 12:48:59,376:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:48:59,377:INFO:Checking exceptions
2023-06-17 12:48:59,377:INFO:Importing libraries
2023-06-17 12:48:59,377:INFO:Copying training dataset
2023-06-17 12:48:59,381:INFO:Defining folds
2023-06-17 12:48:59,381:INFO:Declaring metric variables
2023-06-17 12:48:59,381:INFO:Importing untrained model
2023-06-17 12:48:59,381:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:48:59,381:INFO:Starting cross validation
2023-06-17 12:48:59,383:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:00,225:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,231:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,294:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,300:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,324:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,324:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,335:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,342:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,352:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,353:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,520:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,525:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,570:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:00,574:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:00,689:INFO:Calculating mean and std
2023-06-17 12:49:00,690:INFO:Creating metrics dataframe
2023-06-17 12:49:00,769:INFO:Uploading results into container
2023-06-17 12:49:00,770:INFO:Uploading model into container now
2023-06-17 12:49:00,770:INFO:_master_model_container: 1
2023-06-17 12:49:00,770:INFO:_display_container: 2
2023-06-17 12:49:00,771:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:49:00,771:INFO:create_model() successfully completed......................................
2023-06-17 12:49:00,891:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:00,892:INFO:Creating metrics dataframe
2023-06-17 12:49:00,894:INFO:Initializing Naive Bayes
2023-06-17 12:49:00,894:INFO:Total runtime is 0.05453330675760905 minutes
2023-06-17 12:49:00,894:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:00,895:INFO:Initializing create_model()
2023-06-17 12:49:00,895:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:00,895:INFO:Checking exceptions
2023-06-17 12:49:00,895:INFO:Importing libraries
2023-06-17 12:49:00,895:INFO:Copying training dataset
2023-06-17 12:49:00,898:INFO:Defining folds
2023-06-17 12:49:00,899:INFO:Declaring metric variables
2023-06-17 12:49:00,899:INFO:Importing untrained model
2023-06-17 12:49:00,899:INFO:Naive Bayes Imported successfully
2023-06-17 12:49:00,899:INFO:Starting cross validation
2023-06-17 12:49:00,901:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:01,640:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,647:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,683:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,687:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,695:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,699:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,728:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,729:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,733:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,734:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,760:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,766:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,777:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,783:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,787:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,793:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,805:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,809:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:01,838:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:01,843:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:02,109:INFO:Calculating mean and std
2023-06-17 12:49:02,110:INFO:Creating metrics dataframe
2023-06-17 12:49:02,191:INFO:Uploading results into container
2023-06-17 12:49:02,191:INFO:Uploading model into container now
2023-06-17 12:49:02,192:INFO:_master_model_container: 2
2023-06-17 12:49:02,192:INFO:_display_container: 2
2023-06-17 12:49:02,192:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 12:49:02,192:INFO:create_model() successfully completed......................................
2023-06-17 12:49:02,309:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:02,309:INFO:Creating metrics dataframe
2023-06-17 12:49:02,312:INFO:Initializing Decision Tree Classifier
2023-06-17 12:49:02,312:INFO:Total runtime is 0.0781666358311971 minutes
2023-06-17 12:49:02,313:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:02,313:INFO:Initializing create_model()
2023-06-17 12:49:02,313:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:02,313:INFO:Checking exceptions
2023-06-17 12:49:02,313:INFO:Importing libraries
2023-06-17 12:49:02,313:INFO:Copying training dataset
2023-06-17 12:49:02,316:INFO:Defining folds
2023-06-17 12:49:02,316:INFO:Declaring metric variables
2023-06-17 12:49:02,317:INFO:Importing untrained model
2023-06-17 12:49:02,317:INFO:Decision Tree Classifier Imported successfully
2023-06-17 12:49:02,317:INFO:Starting cross validation
2023-06-17 12:49:02,319:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:03,066:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,073:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,082:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,087:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,120:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,156:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,171:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,175:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,181:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,186:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,198:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,203:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,216:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,222:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,229:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,232:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:03,233:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,237:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:03,545:INFO:Calculating mean and std
2023-06-17 12:49:03,545:INFO:Creating metrics dataframe
2023-06-17 12:49:03,631:INFO:Uploading results into container
2023-06-17 12:49:03,631:INFO:Uploading model into container now
2023-06-17 12:49:03,632:INFO:_master_model_container: 3
2023-06-17 12:49:03,632:INFO:_display_container: 2
2023-06-17 12:49:03,632:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=3961, splitter='best')
2023-06-17 12:49:03,632:INFO:create_model() successfully completed......................................
2023-06-17 12:49:03,754:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:03,754:INFO:Creating metrics dataframe
2023-06-17 12:49:03,757:INFO:Initializing SVM - Linear Kernel
2023-06-17 12:49:03,757:INFO:Total runtime is 0.10225818157196044 minutes
2023-06-17 12:49:03,757:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:03,757:INFO:Initializing create_model()
2023-06-17 12:49:03,757:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:03,758:INFO:Checking exceptions
2023-06-17 12:49:03,758:INFO:Importing libraries
2023-06-17 12:49:03,758:INFO:Copying training dataset
2023-06-17 12:49:03,761:INFO:Defining folds
2023-06-17 12:49:03,761:INFO:Declaring metric variables
2023-06-17 12:49:03,762:INFO:Importing untrained model
2023-06-17 12:49:03,762:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:49:03,762:INFO:Starting cross validation
2023-06-17 12:49:03,764:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:04,599:WARNING:create_model() for svm raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 12:49:04,600:WARNING:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 894, in fit
    return self._fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 683, in _fit
    self._partial_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 637, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2023-06-17 12:49:04,600:INFO:Initializing create_model()
2023-06-17 12:49:04,600:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:04,600:INFO:Checking exceptions
2023-06-17 12:49:04,600:INFO:Importing libraries
2023-06-17 12:49:04,600:INFO:Copying training dataset
2023-06-17 12:49:04,605:INFO:Defining folds
2023-06-17 12:49:04,605:INFO:Declaring metric variables
2023-06-17 12:49:04,605:INFO:Importing untrained model
2023-06-17 12:49:04,605:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:49:04,606:INFO:Starting cross validation
2023-06-17 12:49:04,608:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:05,499:ERROR:create_model() for svm raised an exception or returned all 0.0:
2023-06-17 12:49:05,499:ERROR:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 894, in fit
    return self._fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 683, in _fit
    self._partial_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 637, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 894, in fit
    return self._fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 683, in _fit
    self._partial_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 637, in _partial_fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2023-06-17 12:49:05,624:INFO:Initializing Ridge Classifier
2023-06-17 12:49:05,625:INFO:Total runtime is 0.13339148759841918 minutes
2023-06-17 12:49:05,625:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:05,625:INFO:Initializing create_model()
2023-06-17 12:49:05,625:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:05,625:INFO:Checking exceptions
2023-06-17 12:49:05,625:INFO:Importing libraries
2023-06-17 12:49:05,625:INFO:Copying training dataset
2023-06-17 12:49:05,629:INFO:Defining folds
2023-06-17 12:49:05,629:INFO:Declaring metric variables
2023-06-17 12:49:05,629:INFO:Importing untrained model
2023-06-17 12:49:05,629:INFO:Ridge Classifier Imported successfully
2023-06-17 12:49:05,630:INFO:Starting cross validation
2023-06-17 12:49:05,632:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:06,294:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,298:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,320:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,328:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,332:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,350:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,357:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

led and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,364:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,367:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,412:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,419:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,428:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,432:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,437:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,441:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,456:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:49:06,461:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:06,773:INFO:Calculating mean and std
2023-06-17 12:49:06,774:INFO:Creating metrics dataframe
2023-06-17 12:49:06,861:INFO:Uploading results into container
2023-06-17 12:49:06,862:INFO:Uploading model into container now
2023-06-17 12:49:06,862:INFO:_master_model_container: 4
2023-06-17 12:49:06,862:INFO:_display_container: 2
2023-06-17 12:49:06,862:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=3961, solver='auto',
                tol=0.0001)
2023-06-17 12:49:06,862:INFO:create_model() successfully completed......................................
2023-06-17 12:49:06,981:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:06,981:INFO:Creating metrics dataframe
2023-06-17 12:49:06,985:INFO:Initializing Random Forest Classifier
2023-06-17 12:49:06,985:INFO:Total runtime is 0.15606017112731932 minutes
2023-06-17 12:49:06,985:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:06,985:INFO:Initializing create_model()
2023-06-17 12:49:06,985:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:06,985:INFO:Checking exceptions
2023-06-17 12:49:06,985:INFO:Importing libraries
2023-06-17 12:49:06,985:INFO:Copying training dataset
2023-06-17 12:49:06,989:INFO:Defining folds
2023-06-17 12:49:06,990:INFO:Declaring metric variables
2023-06-17 12:49:06,990:INFO:Importing untrained model
2023-06-17 12:49:06,990:INFO:Random Forest Classifier Imported successfully
2023-06-17 12:49:06,990:INFO:Starting cross validation
2023-06-17 12:49:06,992:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:08,386:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,392:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,399:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,400:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,405:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,430:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,437:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,447:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,449:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,452:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,466:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,472:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,491:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,498:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,516:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,521:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,546:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:08,551:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:08,909:INFO:Calculating mean and std
2023-06-17 12:49:08,910:INFO:Creating metrics dataframe
2023-06-17 12:49:09,006:INFO:Uploading results into container
2023-06-17 12:49:09,007:INFO:Uploading model into container now
2023-06-17 12:49:09,007:INFO:_master_model_container: 5
2023-06-17 12:49:09,007:INFO:_display_container: 2
2023-06-17 12:49:09,008:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=3961, verbose=0, warm_start=False)
2023-06-17 12:49:09,008:INFO:create_model() successfully completed......................................
2023-06-17 12:49:09,125:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:09,125:INFO:Creating metrics dataframe
2023-06-17 12:49:09,129:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 12:49:09,129:INFO:Total runtime is 0.1917914867401123 minutes
2023-06-17 12:49:09,130:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:09,130:INFO:Initializing create_model()
2023-06-17 12:49:09,130:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:09,130:INFO:Checking exceptions
2023-06-17 12:49:09,130:INFO:Importing libraries
2023-06-17 12:49:09,130:INFO:Copying training dataset
2023-06-17 12:49:09,134:INFO:Defining folds
2023-06-17 12:49:09,134:INFO:Declaring metric variables
2023-06-17 12:49:09,134:INFO:Importing untrained model
2023-06-17 12:49:09,134:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:49:09,135:INFO:Starting cross validation
2023-06-17 12:49:09,137:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:10,031:WARNING:create_model() for qda raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 12:49:10,031:WARNING:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 896, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2023-06-17 12:49:10,031:INFO:Initializing create_model()
2023-06-17 12:49:10,031:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:10,031:INFO:Checking exceptions
2023-06-17 12:49:10,032:INFO:Importing libraries
2023-06-17 12:49:10,032:INFO:Copying training dataset
2023-06-17 12:49:10,036:INFO:Defining folds
2023-06-17 12:49:10,036:INFO:Declaring metric variables
2023-06-17 12:49:10,037:INFO:Importing untrained model
2023-06-17 12:49:10,037:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:49:10,037:INFO:Starting cross validation
2023-06-17 12:49:10,039:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:10,967:ERROR:create_model() for qda raised an exception or returned all 0.0:
2023-06-17 12:49:10,968:ERROR:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 896, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 896, in fit
    raise ValueError(
ValueError: The number of classes has to be greater than one; got 1 class


2023-06-17 12:49:11,109:INFO:Initializing Ada Boost Classifier
2023-06-17 12:49:11,109:INFO:Total runtime is 0.22479142745335895 minutes
2023-06-17 12:49:11,109:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:11,109:INFO:Initializing create_model()
2023-06-17 12:49:11,109:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:11,109:INFO:Checking exceptions
2023-06-17 12:49:11,109:INFO:Importing libraries
2023-06-17 12:49:11,109:INFO:Copying training dataset
2023-06-17 12:49:11,113:INFO:Defining folds
2023-06-17 12:49:11,113:INFO:Declaring metric variables
2023-06-17 12:49:11,113:INFO:Importing untrained model
2023-06-17 12:49:11,114:INFO:Ada Boost Classifier Imported successfully
2023-06-17 12:49:11,114:INFO:Starting cross validation
2023-06-17 12:49:11,116:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:11,776:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,780:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,853:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,857:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,865:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,869:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,892:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,898:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,911:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,916:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,932:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,938:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,942:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,952:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,959:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:11,994:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:11,998:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:12,001:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:12,005:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:12,336:INFO:Calculating mean and std
2023-06-17 12:49:12,337:INFO:Creating metrics dataframe
2023-06-17 12:49:12,438:INFO:Uploading results into container
2023-06-17 12:49:12,439:INFO:Uploading model into container now
2023-06-17 12:49:12,439:INFO:_master_model_container: 6
2023-06-17 12:49:12,439:INFO:_display_container: 2
2023-06-17 12:49:12,439:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=3961)
2023-06-17 12:49:12,439:INFO:create_model() successfully completed......................................
2023-06-17 12:49:12,557:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:12,557:INFO:Creating metrics dataframe
2023-06-17 12:49:12,560:INFO:Initializing Gradient Boosting Classifier
2023-06-17 12:49:12,560:INFO:Total runtime is 0.24897479216257729 minutes
2023-06-17 12:49:12,560:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:12,560:INFO:Initializing create_model()
2023-06-17 12:49:12,560:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:12,560:INFO:Checking exceptions
2023-06-17 12:49:12,560:INFO:Importing libraries
2023-06-17 12:49:12,560:INFO:Copying training dataset
2023-06-17 12:49:12,564:INFO:Defining folds
2023-06-17 12:49:12,564:INFO:Declaring metric variables
2023-06-17 12:49:12,564:INFO:Importing untrained model
2023-06-17 12:49:12,564:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:49:12,565:INFO:Starting cross validation
2023-06-17 12:49:12,567:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:13,431:WARNING:create_model() for gbc raised an exception or returned all 0.0, trying without fit_kwargs:
2023-06-17 12:49:13,432:WARNING:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 440, in fit
    y = self._validate_y(y, sample_weight)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 1232, in _validate_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2023-06-17 12:49:13,432:INFO:Initializing create_model()
2023-06-17 12:49:13,432:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:13,432:INFO:Checking exceptions
2023-06-17 12:49:13,432:INFO:Importing libraries
2023-06-17 12:49:13,432:INFO:Copying training dataset
2023-06-17 12:49:13,437:INFO:Defining folds
2023-06-17 12:49:13,437:INFO:Declaring metric variables
2023-06-17 12:49:13,437:INFO:Importing untrained model
2023-06-17 12:49:13,437:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:49:13,438:INFO:Starting cross validation
2023-06-17 12:49:13,440:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:14,357:ERROR:create_model() for gbc raised an exception or returned all 0.0:
2023-06-17 12:49:14,357:ERROR:Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 792, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 440, in fit
    y = self._validate_y(y, sample_weight)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 1232, in _validate_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 808, in compare_models
    model, model_fit_time = self._create_model(**create_model_args)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1519, in _create_model
    model, model_fit_time, model_results, _ = self._create_model_with_cv(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pycaret_experiment\supervised_experiment.py", line 1114, in _create_model_with_cv
    scores = cross_validate(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 285, in cross_validate
    _warn_or_raise_about_fit_failures(results, error_score)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 367, in _warn_or_raise_about_fit_failures
    raise ValueError(all_fits_failed_message)
ValueError: 
All the 10 fits failed.
It is very likely that your model is misconfigured.
You can try to debug the error by setting error_score='raise'.

Below are more details about the failures:
--------------------------------------------------------------------------------
10 fits failed with the following error:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\model_selection\_validation.py", line 686, in _fit_and_score
    estimator.fit(X_train, y_train, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 260, in fit
    fitted_estimator = self._memory_fit(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\joblib\memory.py", line 594, in __call__
    return self._cached_call(args, kwargs)[0]
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 398, in _cached_call
    out, metadata = self.call(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\memory.py", line 309, in call
    output = self.func(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 66, in _fit_one
    transformer.fit(*args, **fit_params)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 440, in fit
    y = self._validate_y(y, sample_weight)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\ensemble\_gb.py", line 1232, in _validate_y
    raise ValueError(
ValueError: y contains 1 class after sample_weight trimmed classes with zero weights, while a minimum of 2 classes are required.


2023-06-17 12:49:14,501:INFO:Initializing Linear Discriminant Analysis
2023-06-17 12:49:14,502:INFO:Total runtime is 0.28134141763051346 minutes
2023-06-17 12:49:14,502:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:14,502:INFO:Initializing create_model()
2023-06-17 12:49:14,502:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:14,502:INFO:Checking exceptions
2023-06-17 12:49:14,502:INFO:Importing libraries
2023-06-17 12:49:14,502:INFO:Copying training dataset
2023-06-17 12:49:14,506:INFO:Defining folds
2023-06-17 12:49:14,506:INFO:Declaring metric variables
2023-06-17 12:49:14,506:INFO:Importing untrained model
2023-06-17 12:49:14,506:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 12:49:14,507:INFO:Starting cross validation
2023-06-17 12:49:14,509:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:15,262:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,267:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,269:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,274:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,304:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,311:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,317:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,321:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,323:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,326:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,334:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,341:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,349:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,349:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,354:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,362:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,391:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 321, in predict_proba
    return self.steps[-1][-1].predict_proba(X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py", line 697, in predict_proba
    return softmax(decision)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\extmath.py", line 886, in softmax
    max_prob = xp.reshape(xp.max(X, axis=1), (-1, 1))
  File "<__array_function__ internals>", line 180, in amax
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 2791, in amax
    return _wrapreduction(a, np.maximum, 'max', axis, None, out,
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\numpy\core\fromnumeric.py", line 86, in _wrapreduction
    return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
numpy.AxisError: axis 1 is out of bounds for array of dimension 1

  warnings.warn(

2023-06-17 12:49:15,396:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:15,813:INFO:Calculating mean and std
2023-06-17 12:49:15,814:INFO:Creating metrics dataframe
2023-06-17 12:49:15,919:INFO:Uploading results into container
2023-06-17 12:49:15,919:INFO:Uploading model into container now
2023-06-17 12:49:15,919:INFO:_master_model_container: 7
2023-06-17 12:49:15,920:INFO:_display_container: 2
2023-06-17 12:49:15,920:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 12:49:15,920:INFO:create_model() successfully completed......................................
2023-06-17 12:49:16,038:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:16,038:INFO:Creating metrics dataframe
2023-06-17 12:49:16,041:INFO:Initializing Extra Trees Classifier
2023-06-17 12:49:16,041:INFO:Total runtime is 0.3069848457972208 minutes
2023-06-17 12:49:16,041:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:16,041:INFO:Initializing create_model()
2023-06-17 12:49:16,041:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:16,041:INFO:Checking exceptions
2023-06-17 12:49:16,041:INFO:Importing libraries
2023-06-17 12:49:16,041:INFO:Copying training dataset
2023-06-17 12:49:16,045:INFO:Defining folds
2023-06-17 12:49:16,045:INFO:Declaring metric variables
2023-06-17 12:49:16,045:INFO:Importing untrained model
2023-06-17 12:49:16,045:INFO:Extra Trees Classifier Imported successfully
2023-06-17 12:49:16,045:INFO:Starting cross validation
2023-06-17 12:49:16,047:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:17,108:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,112:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,182:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,291:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,295:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,368:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,374:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,375:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,379:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,417:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,422:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,429:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,434:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,434:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,438:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,439:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,456:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:17,462:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:17,787:INFO:Calculating mean and std
2023-06-17 12:49:17,788:INFO:Creating metrics dataframe
2023-06-17 12:49:17,896:INFO:Uploading results into container
2023-06-17 12:49:17,896:INFO:Uploading model into container now
2023-06-17 12:49:17,897:INFO:_master_model_container: 8
2023-06-17 12:49:17,897:INFO:_display_container: 2
2023-06-17 12:49:17,897:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=3961, verbose=0, warm_start=False)
2023-06-17 12:49:17,897:INFO:create_model() successfully completed......................................
2023-06-17 12:49:18,015:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:18,015:INFO:Creating metrics dataframe
2023-06-17 12:49:18,018:INFO:Initializing Extreme Gradient Boosting
2023-06-17 12:49:18,018:INFO:Total runtime is 0.33993484576543165 minutes
2023-06-17 12:49:18,019:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:18,019:INFO:Initializing create_model()
2023-06-17 12:49:18,019:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:18,019:INFO:Checking exceptions
2023-06-17 12:49:18,019:INFO:Importing libraries
2023-06-17 12:49:18,019:INFO:Copying training dataset
2023-06-17 12:49:18,023:INFO:Defining folds
2023-06-17 12:49:18,023:INFO:Declaring metric variables
2023-06-17 12:49:18,024:INFO:Importing untrained model
2023-06-17 12:49:18,024:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 12:49:18,024:INFO:Starting cross validation
2023-06-17 12:49:18,026:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:18,844:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,848:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,867:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,873:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,908:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,915:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,918:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,923:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,936:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,940:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:18,953:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:18,958:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,066:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:19,070:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,136:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:19,140:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,148:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:19,148:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:19,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,152:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:19,461:INFO:Calculating mean and std
2023-06-17 12:49:19,462:INFO:Creating metrics dataframe
2023-06-17 12:49:19,572:INFO:Uploading results into container
2023-06-17 12:49:19,573:INFO:Uploading model into container now
2023-06-17 12:49:19,573:INFO:_master_model_container: 9
2023-06-17 12:49:19,573:INFO:_display_container: 2
2023-06-17 12:49:19,574:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 12:49:19,574:INFO:create_model() successfully completed......................................
2023-06-17 12:49:19,695:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:19,695:INFO:Creating metrics dataframe
2023-06-17 12:49:19,698:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 12:49:19,698:INFO:Total runtime is 0.36793484687805167 minutes
2023-06-17 12:49:19,698:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:19,698:INFO:Initializing create_model()
2023-06-17 12:49:19,698:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:19,698:INFO:Checking exceptions
2023-06-17 12:49:19,698:INFO:Importing libraries
2023-06-17 12:49:19,698:INFO:Copying training dataset
2023-06-17 12:49:19,702:INFO:Defining folds
2023-06-17 12:49:19,702:INFO:Declaring metric variables
2023-06-17 12:49:19,702:INFO:Importing untrained model
2023-06-17 12:49:19,702:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 12:49:19,703:INFO:Starting cross validation
2023-06-17 12:49:19,704:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:20,399:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,403:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,440:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,448:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,455:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,460:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,465:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,524:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,530:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,539:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,544:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,545:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,549:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,555:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,559:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,601:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,605:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:20,613:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 188, in _select_proba_binary
    pos_label = self._kwargs.get("pos_label", classes[1])
IndexError: index 1 is out of bounds for axis 0 with size 1

  warnings.warn(

2023-06-17 12:49:20,617:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:21,036:INFO:Calculating mean and std
2023-06-17 12:49:21,036:INFO:Creating metrics dataframe
2023-06-17 12:49:21,155:INFO:Uploading results into container
2023-06-17 12:49:21,156:INFO:Uploading model into container now
2023-06-17 12:49:21,156:INFO:_master_model_container: 10
2023-06-17 12:49:21,156:INFO:_display_container: 2
2023-06-17 12:49:21,157:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=3961, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 12:49:21,157:INFO:create_model() successfully completed......................................
2023-06-17 12:49:21,278:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:21,278:INFO:Creating metrics dataframe
2023-06-17 12:49:21,281:INFO:Initializing Dummy Classifier
2023-06-17 12:49:21,281:INFO:Total runtime is 0.39431817531585683 minutes
2023-06-17 12:49:21,281:INFO:SubProcess create_model() called ==================================
2023-06-17 12:49:21,281:INFO:Initializing create_model()
2023-06-17 12:49:21,281:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0CEE130>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:21,282:INFO:Checking exceptions
2023-06-17 12:49:21,282:INFO:Importing libraries
2023-06-17 12:49:21,282:INFO:Copying training dataset
2023-06-17 12:49:21,285:INFO:Defining folds
2023-06-17 12:49:21,285:INFO:Declaring metric variables
2023-06-17 12:49:21,286:INFO:Importing untrained model
2023-06-17 12:49:21,286:INFO:Dummy Classifier Imported successfully
2023-06-17 12:49:21,286:INFO:Starting cross validation
2023-06-17 12:49:21,288:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:49:21,962:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:21,969:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:21,980:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:21,987:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,052:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,058:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,062:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,069:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,072:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,075:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,078:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,080:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,100:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (15, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,104:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,121:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,129:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,130:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 321, in _score
    y_pred = self._select_proba_binary(y_pred, clf.classes_)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 198, in _select_proba_binary
    raise ValueError(err_msg)
ValueError: Got predict_proba of shape (14, 1), but need classifier with two classes for roc_auc_score scoring

  warnings.warn(

2023-06-17 12:49:22,133:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,137:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:673: RuntimeWarning: invalid value encountered in true_divide
  k = np.sum(w_mat * confusion) / np.sum(w_mat * expected)

2023-06-17 12:49:22,612:INFO:Calculating mean and std
2023-06-17 12:49:22,613:INFO:Creating metrics dataframe
2023-06-17 12:49:22,733:INFO:Uploading results into container
2023-06-17 12:49:22,734:INFO:Uploading model into container now
2023-06-17 12:49:22,734:INFO:_master_model_container: 11
2023-06-17 12:49:22,734:INFO:_display_container: 2
2023-06-17 12:49:22,734:INFO:DummyClassifier(constant=None, random_state=3961, strategy='prior')
2023-06-17 12:49:22,734:INFO:create_model() successfully completed......................................
2023-06-17 12:49:22,852:INFO:SubProcess create_model() end ==================================
2023-06-17 12:49:22,853:INFO:Creating metrics dataframe
2023-06-17 12:49:22,857:INFO:Initializing create_model()
2023-06-17 12:49:22,857:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214CFA8AF40>, estimator=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:49:22,857:INFO:Checking exceptions
2023-06-17 12:49:22,858:INFO:Importing libraries
2023-06-17 12:49:22,858:INFO:Copying training dataset
2023-06-17 12:49:22,862:INFO:Defining folds
2023-06-17 12:49:22,862:INFO:Declaring metric variables
2023-06-17 12:49:22,862:INFO:Importing untrained model
2023-06-17 12:49:22,862:INFO:Declaring custom model
2023-06-17 12:49:22,863:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:49:22,865:INFO:Cross validation set to False
2023-06-17 12:49:22,865:INFO:Fitting Model
2023-06-17 12:49:23,187:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:49:23,187:INFO:create_model() successfully completed......................................
2023-06-17 12:49:23,314:INFO:_master_model_container: 11
2023-06-17 12:49:23,314:INFO:_display_container: 2
2023-06-17 12:49:23,314:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:49:23,314:INFO:compare_models() successfully completed......................................
2023-06-17 12:49:23,322:INFO:Initializing save_model()
2023-06-17 12:49:23,323:INFO:save_model(model=KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform'), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'ID',
                                             'Number of Bags', 'Aroma',
                                             'Flavor', 'Aftertaste', 'Acidity',
                                             'Body', 'Balance', 'Uniformity...
                                                                    'Weight',
                                                                    'Grading '
                                                                    'Date',
                                                                    'Owner',
                                                                    'Variety',
                                                                    'Expiration'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              hierarchy=None,
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+')))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 12:49:23,323:INFO:Adding model into prep_pipe
2023-06-17 12:49:23,347:INFO:best_model.pkl saved in current working directory
2023-06-17 12:49:23,354:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('label_encoding',
                 TransformerWrapperWithInverse(exclude=None, include=None,
                                               transformer=LabelEncoder())),
                ('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['Unnamed: 0', 'ID',
                                             'Number of Bags', 'Aroma',
                                             'Flavor', 'Aftertaste', 'Acidity',
                                             'Body', 'Balance', 'Uniformity...
                                                              min_samples_leaf=20,
                                                              return_df=True,
                                                              smoothing=10,
                                                              verbose=0))),
                ('clean_column_names',
                 TransformerWrapper(exclude=None, include=None,
                                    transformer=CleanColumnNames(match='[\\]\\[\\,\\{\\}\\"\\:]+'))),
                ('trained_model',
                 KNeighborsClassifier(algorithm='auto', leaf_size=30,
                                      metric='minkowski', metric_params=None,
                                      n_jobs=-1, n_neighbors=5, p=2,
                                      weights='uniform'))],
         verbose=False)
2023-06-17 12:49:23,354:INFO:save_model() successfully completed......................................
2023-06-17 12:49:43,514:INFO:PyCaret ClassificationExperiment
2023-06-17 12:49:43,514:INFO:Logging name: clf-default-name
2023-06-17 12:49:43,514:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:49:43,514:INFO:version 3.0.2
2023-06-17 12:49:43,514:INFO:Initializing setup()
2023-06-17 12:49:43,514:INFO:self.USI: 3847
2023-06-17 12:49:43,514:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:49:43,514:INFO:Checking environment
2023-06-17 12:49:43,514:INFO:python_version: 3.9.5
2023-06-17 12:49:43,514:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:49:43,514:INFO:machine: AMD64
2023-06-17 12:49:43,514:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:49:43,517:INFO:Memory: svmem(total=17102532608, available=7366762496, percent=56.9, used=9735770112, free=7366762496)
2023-06-17 12:49:43,518:INFO:Physical Core: 8
2023-06-17 12:49:43,518:INFO:Logical Core: 16
2023-06-17 12:49:43,518:INFO:Checking libraries
2023-06-17 12:49:43,518:INFO:System:
2023-06-17 12:49:43,518:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:49:43,518:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:49:43,518:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:49:43,518:INFO:PyCaret required dependencies:
2023-06-17 12:49:43,518:INFO:                 pip: 23.1.2
2023-06-17 12:49:43,518:INFO:          setuptools: 56.0.0
2023-06-17 12:49:43,518:INFO:             pycaret: 3.0.2
2023-06-17 12:49:43,518:INFO:             IPython: 8.14.0
2023-06-17 12:49:43,518:INFO:          ipywidgets: 8.0.6
2023-06-17 12:49:43,518:INFO:                tqdm: 4.65.0
2023-06-17 12:49:43,518:INFO:               numpy: 1.22.3
2023-06-17 12:49:43,518:INFO:              pandas: 1.4.2
2023-06-17 12:49:43,518:INFO:              jinja2: 3.1.2
2023-06-17 12:49:43,518:INFO:               scipy: 1.8.0
2023-06-17 12:49:43,518:INFO:              joblib: 1.2.0
2023-06-17 12:49:43,518:INFO:             sklearn: 1.2.2
2023-06-17 12:49:43,518:INFO:                pyod: 1.0.9
2023-06-17 12:49:43,518:INFO:            imblearn: 0.10.1
2023-06-17 12:49:43,518:INFO:   category_encoders: 2.6.1
2023-06-17 12:49:43,518:INFO:            lightgbm: 3.3.5
2023-06-17 12:49:43,518:INFO:               numba: 0.57.0
2023-06-17 12:49:43,518:INFO:            requests: 2.27.1
2023-06-17 12:49:43,518:INFO:          matplotlib: 3.5.1
2023-06-17 12:49:43,518:INFO:          scikitplot: 0.3.7
2023-06-17 12:49:43,518:INFO:         yellowbrick: 1.5
2023-06-17 12:49:43,518:INFO:              plotly: 5.10.0
2023-06-17 12:49:43,518:INFO:             kaleido: 0.2.1
2023-06-17 12:49:43,519:INFO:         statsmodels: 0.14.0
2023-06-17 12:49:43,519:INFO:              sktime: 0.17.0
2023-06-17 12:49:43,519:INFO:               tbats: 1.1.3
2023-06-17 12:49:43,519:INFO:            pmdarima: 2.0.3
2023-06-17 12:49:43,519:INFO:              psutil: 5.9.5
2023-06-17 12:49:43,519:INFO:PyCaret optional dependencies:
2023-06-17 12:49:43,519:INFO:                shap: Not installed
2023-06-17 12:49:43,519:INFO:           interpret: Not installed
2023-06-17 12:49:43,519:INFO:                umap: Not installed
2023-06-17 12:49:43,519:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:49:43,519:INFO:  explainerdashboard: Not installed
2023-06-17 12:49:43,519:INFO:             autoviz: Not installed
2023-06-17 12:49:43,519:INFO:           fairlearn: Not installed
2023-06-17 12:49:43,519:INFO:             xgboost: 1.7.4
2023-06-17 12:49:43,519:INFO:            catboost: Not installed
2023-06-17 12:49:43,519:INFO:              kmodes: Not installed
2023-06-17 12:49:43,519:INFO:             mlxtend: Not installed
2023-06-17 12:49:43,519:INFO:       statsforecast: Not installed
2023-06-17 12:49:43,519:INFO:        tune_sklearn: Not installed
2023-06-17 12:49:43,519:INFO:                 ray: Not installed
2023-06-17 12:49:43,519:INFO:            hyperopt: Not installed
2023-06-17 12:49:43,519:INFO:              optuna: Not installed
2023-06-17 12:49:43,519:INFO:               skopt: Not installed
2023-06-17 12:49:43,519:INFO:              mlflow: Not installed
2023-06-17 12:49:43,519:INFO:              gradio: Not installed
2023-06-17 12:49:43,519:INFO:             fastapi: Not installed
2023-06-17 12:49:43,519:INFO:             uvicorn: Not installed
2023-06-17 12:49:43,519:INFO:              m2cgen: Not installed
2023-06-17 12:49:43,519:INFO:           evidently: Not installed
2023-06-17 12:49:43,519:INFO:               fugue: Not installed
2023-06-17 12:49:43,519:INFO:           streamlit: 1.23.1
2023-06-17 12:49:43,519:INFO:             prophet: Not installed
2023-06-17 12:49:43,519:INFO:None
2023-06-17 12:49:43,520:INFO:Set up data.
2023-06-17 12:49:43,531:INFO:Set up train/test split.
2023-06-17 12:55:21,305:INFO:PyCaret ClassificationExperiment
2023-06-17 12:55:21,305:INFO:Logging name: clf-default-name
2023-06-17 12:55:21,305:INFO:ML Usecase: MLUsecase.CLASSIFICATION
2023-06-17 12:55:21,305:INFO:version 3.0.2
2023-06-17 12:55:21,305:INFO:Initializing setup()
2023-06-17 12:55:21,305:INFO:self.USI: 5cdc
2023-06-17 12:55:21,305:INFO:self._variable_keys: {'pipeline', 'target_param', 'is_multiclass', 'seed', 'X_test', 'y_test', 'fix_imbalance', 'log_plots_param', 'fold_generator', 'data', 'html_param', 'fold_groups_param', 'y', 'USI', 'gpu_n_jobs_param', 'memory', 'exp_id', 'gpu_param', 'fold_shuffle_param', 'X', '_ml_usecase', 'exp_name_log', '_available_plots', 'X_train', 'logging_param', 'idx', 'y_train', 'n_jobs_param'}
2023-06-17 12:55:21,305:INFO:Checking environment
2023-06-17 12:55:21,305:INFO:python_version: 3.9.5
2023-06-17 12:55:21,305:INFO:python_build: ('tags/v3.9.5:0a7dcbd', 'May  3 2021 17:27:52')
2023-06-17 12:55:21,305:INFO:machine: AMD64
2023-06-17 12:55:21,305:INFO:platform: Windows-10-10.0.19044-SP0
2023-06-17 12:55:21,309:INFO:Memory: svmem(total=17102532608, available=9377624064, percent=45.2, used=7724908544, free=9377624064)
2023-06-17 12:55:21,309:INFO:Physical Core: 8
2023-06-17 12:55:21,309:INFO:Logical Core: 16
2023-06-17 12:55:21,309:INFO:Checking libraries
2023-06-17 12:55:21,309:INFO:System:
2023-06-17 12:55:21,309:INFO:    python: 3.9.5 (tags/v3.9.5:0a7dcbd, May  3 2021, 17:27:52) [MSC v.1928 64 bit (AMD64)]
2023-06-17 12:55:21,309:INFO:executable: c:\users\brand\appdata\local\programs\python\python39\python.exe
2023-06-17 12:55:21,309:INFO:   machine: Windows-10-10.0.19044-SP0
2023-06-17 12:55:21,309:INFO:PyCaret required dependencies:
2023-06-17 12:55:21,309:INFO:                 pip: 23.1.2
2023-06-17 12:55:21,309:INFO:          setuptools: 56.0.0
2023-06-17 12:55:21,309:INFO:             pycaret: 3.0.2
2023-06-17 12:55:21,309:INFO:             IPython: 8.14.0
2023-06-17 12:55:21,309:INFO:          ipywidgets: 8.0.6
2023-06-17 12:55:21,310:INFO:                tqdm: 4.65.0
2023-06-17 12:55:21,310:INFO:               numpy: 1.22.3
2023-06-17 12:55:21,310:INFO:              pandas: 1.4.2
2023-06-17 12:55:21,310:INFO:              jinja2: 3.1.2
2023-06-17 12:55:21,310:INFO:               scipy: 1.8.0
2023-06-17 12:55:21,310:INFO:              joblib: 1.2.0
2023-06-17 12:55:21,310:INFO:             sklearn: 1.2.2
2023-06-17 12:55:21,310:INFO:                pyod: 1.0.9
2023-06-17 12:55:21,310:INFO:            imblearn: 0.10.1
2023-06-17 12:55:21,310:INFO:   category_encoders: 2.6.1
2023-06-17 12:55:21,310:INFO:            lightgbm: 3.3.5
2023-06-17 12:55:21,310:INFO:               numba: 0.57.0
2023-06-17 12:55:21,310:INFO:            requests: 2.27.1
2023-06-17 12:55:21,310:INFO:          matplotlib: 3.5.1
2023-06-17 12:55:21,310:INFO:          scikitplot: 0.3.7
2023-06-17 12:55:21,310:INFO:         yellowbrick: 1.5
2023-06-17 12:55:21,310:INFO:              plotly: 5.10.0
2023-06-17 12:55:21,310:INFO:             kaleido: 0.2.1
2023-06-17 12:55:21,310:INFO:         statsmodels: 0.14.0
2023-06-17 12:55:21,310:INFO:              sktime: 0.17.0
2023-06-17 12:55:21,310:INFO:               tbats: 1.1.3
2023-06-17 12:55:21,310:INFO:            pmdarima: 2.0.3
2023-06-17 12:55:21,310:INFO:              psutil: 5.9.5
2023-06-17 12:55:21,310:INFO:PyCaret optional dependencies:
2023-06-17 12:55:21,310:INFO:                shap: Not installed
2023-06-17 12:55:21,310:INFO:           interpret: Not installed
2023-06-17 12:55:21,310:INFO:                umap: Not installed
2023-06-17 12:55:21,310:INFO:    pandas_profiling: 4.2.0
2023-06-17 12:55:21,310:INFO:  explainerdashboard: Not installed
2023-06-17 12:55:21,310:INFO:             autoviz: Not installed
2023-06-17 12:55:21,310:INFO:           fairlearn: Not installed
2023-06-17 12:55:21,310:INFO:             xgboost: 1.7.4
2023-06-17 12:55:21,311:INFO:            catboost: Not installed
2023-06-17 12:55:21,311:INFO:              kmodes: Not installed
2023-06-17 12:55:21,311:INFO:             mlxtend: Not installed
2023-06-17 12:55:21,311:INFO:       statsforecast: Not installed
2023-06-17 12:55:21,311:INFO:        tune_sklearn: Not installed
2023-06-17 12:55:21,311:INFO:                 ray: Not installed
2023-06-17 12:55:21,311:INFO:            hyperopt: Not installed
2023-06-17 12:55:21,311:INFO:              optuna: Not installed
2023-06-17 12:55:21,311:INFO:               skopt: Not installed
2023-06-17 12:55:21,311:INFO:              mlflow: Not installed
2023-06-17 12:55:21,311:INFO:              gradio: Not installed
2023-06-17 12:55:21,311:INFO:             fastapi: Not installed
2023-06-17 12:55:21,311:INFO:             uvicorn: Not installed
2023-06-17 12:55:21,311:INFO:              m2cgen: Not installed
2023-06-17 12:55:21,311:INFO:           evidently: Not installed
2023-06-17 12:55:21,311:INFO:               fugue: Not installed
2023-06-17 12:55:21,311:INFO:           streamlit: 1.23.1
2023-06-17 12:55:21,311:INFO:             prophet: Not installed
2023-06-17 12:55:21,311:INFO:None
2023-06-17 12:55:21,311:INFO:Set up data.
2023-06-17 12:55:21,332:INFO:Set up train/test split.
2023-06-17 12:55:21,361:INFO:Set up index.
2023-06-17 12:55:21,363:INFO:Set up folding strategy.
2023-06-17 12:55:21,363:INFO:Assigning column types.
2023-06-17 12:55:21,371:INFO:Engine successfully changes for model 'lr' to 'sklearn'.
2023-06-17 12:55:21,415:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,416:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,442:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,445:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,487:INFO:Engine for model 'knn' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,488:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,514:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,517:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,517:INFO:Engine successfully changes for model 'knn' to 'sklearn'.
2023-06-17 12:55:21,560:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,587:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,589:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,631:INFO:Engine for model 'rbfsvm' has not been set explicitly, hence returning None.
2023-06-17 12:55:21,657:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,660:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,660:INFO:Engine successfully changes for model 'rbfsvm' to 'sklearn'.
2023-06-17 12:55:21,730:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,732:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,801:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:21,803:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:21,804:INFO:Preparing preprocessing pipeline...
2023-06-17 12:55:21,806:INFO:Set up simple imputation.
2023-06-17 12:55:21,812:INFO:Set up encoding of categorical features.
2023-06-17 12:55:21,946:INFO:Finished creating preprocessing pipeline.
2023-06-17 12:55:21,950:INFO:Pipeline: Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'smoking_history'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False)
2023-06-17 12:55:21,950:INFO:Creating final display dataframe.
2023-06-17 12:55:22,311:INFO:Setup _display_container:                     Description             Value
0                    Session id              7833
1                        Target          diabetes
2                   Target type            Binary
3           Original data shape       (100000, 9)
4        Transformed data shape      (100000, 16)
5   Transformed train set shape       (70000, 16)
6    Transformed test set shape       (30000, 16)
7              Numeric features                 6
8          Categorical features                 2
9                    Preprocess              True
10              Imputation type            simple
11           Numeric imputation              mean
12       Categorical imputation              mode
13     Maximum one-hot encoding                25
14              Encoding method              None
15               Fold Generator   StratifiedKFold
16                  Fold Number                10
17                     CPU Jobs                -1
18                      Use GPU             False
19               Log Experiment             False
20              Experiment Name  clf-default-name
21                          USI              5cdc
2023-06-17 12:55:22,386:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:22,389:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:22,461:INFO:Soft dependency imported: xgboost: 1.7.4
2023-06-17 12:55:22,463:WARNING:
'catboost' is a soft dependency and not included in the pycaret installation. Please run: `pip install catboost` to install.
Alternately, you can install this by running `pip install pycaret[models]`
2023-06-17 12:55:22,464:INFO:setup() successfully completed in 1.22s...............
2023-06-17 12:55:22,466:INFO:Initializing compare_models()
2023-06-17 12:55:22,466:INFO:compare_models(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, include=None, fold=None, round=4, cross_validation=True, sort=Accuracy, n_select=1, budget_time=None, turbo=True, errors=ignore, fit_kwargs=None, groups=None, experiment_custom_tags=None, probability_threshold=None, verbose=True, parallel=None, caller_params={'self': <pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, 'include': None, 'exclude': None, 'fold': None, 'round': 4, 'cross_validation': True, 'sort': 'Accuracy', 'n_select': 1, 'budget_time': None, 'turbo': True, 'errors': 'ignore', 'fit_kwargs': None, 'groups': None, 'experiment_custom_tags': None, 'probability_threshold': None, 'engine': None, 'verbose': True, 'parallel': None, '__class__': <class 'pycaret.classification.oop.ClassificationExperiment'>}, exclude=None)
2023-06-17 12:55:22,466:INFO:Checking exceptions
2023-06-17 12:55:22,475:INFO:Preparing display monitor
2023-06-17 12:55:22,477:INFO:Initializing Logistic Regression
2023-06-17 12:55:22,477:INFO:Total runtime is 0.0 minutes
2023-06-17 12:55:22,477:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:22,478:INFO:Initializing create_model()
2023-06-17 12:55:22,478:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=lr, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:22,478:INFO:Checking exceptions
2023-06-17 12:55:22,478:INFO:Importing libraries
2023-06-17 12:55:22,478:INFO:Copying training dataset
2023-06-17 12:55:22,493:INFO:Defining folds
2023-06-17 12:55:22,493:INFO:Declaring metric variables
2023-06-17 12:55:22,494:INFO:Importing untrained model
2023-06-17 12:55:22,494:INFO:Logistic Regression Imported successfully
2023-06-17 12:55:22,494:INFO:Starting cross validation
2023-06-17 12:55:22,495:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:39,777:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,048:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,126:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,159:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,178:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,266:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,285:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,371:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,384:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,433:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_logistic.py:458: ConvergenceWarning: lbfgs failed to converge (status=1):
STOP: TOTAL NO. of ITERATIONS REACHED LIMIT.

Increase the number of iterations (max_iter) or scale the data as shown in:
    https://scikit-learn.org/stable/modules/preprocessing.html
Please also refer to the documentation for alternative solver options:
    https://scikit-learn.org/stable/modules/linear_model.html#logistic-regression
  n_iter_i = _check_optimize_result(

2023-06-17 12:55:40,934:INFO:Calculating mean and std
2023-06-17 12:55:40,935:INFO:Creating metrics dataframe
2023-06-17 12:55:41,061:INFO:Uploading results into container
2023-06-17 12:55:41,062:INFO:Uploading model into container now
2023-06-17 12:55:41,062:INFO:_master_model_container: 1
2023-06-17 12:55:41,062:INFO:_display_container: 2
2023-06-17 12:55:41,062:INFO:LogisticRegression(C=1.0, class_weight=None, dual=False, fit_intercept=True,
                   intercept_scaling=1, l1_ratio=None, max_iter=1000,
                   multi_class='auto', n_jobs=None, penalty='l2',
                   random_state=7833, solver='lbfgs', tol=0.0001, verbose=0,
                   warm_start=False)
2023-06-17 12:55:41,062:INFO:create_model() successfully completed......................................
2023-06-17 12:55:41,184:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:41,184:INFO:Creating metrics dataframe
2023-06-17 12:55:41,187:INFO:Initializing K Neighbors Classifier
2023-06-17 12:55:41,187:INFO:Total runtime is 0.3118354280789693 minutes
2023-06-17 12:55:41,187:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:41,187:INFO:Initializing create_model()
2023-06-17 12:55:41,187:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=knn, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:41,188:INFO:Checking exceptions
2023-06-17 12:55:41,188:INFO:Importing libraries
2023-06-17 12:55:41,188:INFO:Copying training dataset
2023-06-17 12:55:41,200:INFO:Defining folds
2023-06-17 12:55:41,200:INFO:Declaring metric variables
2023-06-17 12:55:41,200:INFO:Importing untrained model
2023-06-17 12:55:41,200:INFO:K Neighbors Classifier Imported successfully
2023-06-17 12:55:41,201:INFO:Starting cross validation
2023-06-17 12:55:41,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:44,928:INFO:Calculating mean and std
2023-06-17 12:55:44,929:INFO:Creating metrics dataframe
2023-06-17 12:55:45,063:INFO:Uploading results into container
2023-06-17 12:55:45,064:INFO:Uploading model into container now
2023-06-17 12:55:45,064:INFO:_master_model_container: 2
2023-06-17 12:55:45,064:INFO:_display_container: 2
2023-06-17 12:55:45,064:INFO:KNeighborsClassifier(algorithm='auto', leaf_size=30, metric='minkowski',
                     metric_params=None, n_jobs=-1, n_neighbors=5, p=2,
                     weights='uniform')
2023-06-17 12:55:45,065:INFO:create_model() successfully completed......................................
2023-06-17 12:55:45,183:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:45,183:INFO:Creating metrics dataframe
2023-06-17 12:55:45,186:INFO:Initializing Naive Bayes
2023-06-17 12:55:45,186:INFO:Total runtime is 0.37848543326059975 minutes
2023-06-17 12:55:45,186:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:45,186:INFO:Initializing create_model()
2023-06-17 12:55:45,186:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=nb, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:45,186:INFO:Checking exceptions
2023-06-17 12:55:45,186:INFO:Importing libraries
2023-06-17 12:55:45,186:INFO:Copying training dataset
2023-06-17 12:55:45,199:INFO:Defining folds
2023-06-17 12:55:45,199:INFO:Declaring metric variables
2023-06-17 12:55:45,199:INFO:Importing untrained model
2023-06-17 12:55:45,200:INFO:Naive Bayes Imported successfully
2023-06-17 12:55:45,200:INFO:Starting cross validation
2023-06-17 12:55:45,201:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:46,411:INFO:Calculating mean and std
2023-06-17 12:55:46,411:INFO:Creating metrics dataframe
2023-06-17 12:55:46,550:INFO:Uploading results into container
2023-06-17 12:55:46,551:INFO:Uploading model into container now
2023-06-17 12:55:46,551:INFO:_master_model_container: 3
2023-06-17 12:55:46,551:INFO:_display_container: 2
2023-06-17 12:55:46,552:INFO:GaussianNB(priors=None, var_smoothing=1e-09)
2023-06-17 12:55:46,552:INFO:create_model() successfully completed......................................
2023-06-17 12:55:46,673:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:46,673:INFO:Creating metrics dataframe
2023-06-17 12:55:46,676:INFO:Initializing Decision Tree Classifier
2023-06-17 12:55:46,676:INFO:Total runtime is 0.4033187707265218 minutes
2023-06-17 12:55:46,676:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:46,677:INFO:Initializing create_model()
2023-06-17 12:55:46,677:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=dt, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:46,677:INFO:Checking exceptions
2023-06-17 12:55:46,677:INFO:Importing libraries
2023-06-17 12:55:46,677:INFO:Copying training dataset
2023-06-17 12:55:46,690:INFO:Defining folds
2023-06-17 12:55:46,690:INFO:Declaring metric variables
2023-06-17 12:55:46,690:INFO:Importing untrained model
2023-06-17 12:55:46,690:INFO:Decision Tree Classifier Imported successfully
2023-06-17 12:55:46,690:INFO:Starting cross validation
2023-06-17 12:55:46,691:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:48,036:INFO:Calculating mean and std
2023-06-17 12:55:48,036:INFO:Creating metrics dataframe
2023-06-17 12:55:48,184:INFO:Uploading results into container
2023-06-17 12:55:48,184:INFO:Uploading model into container now
2023-06-17 12:55:48,185:INFO:_master_model_container: 4
2023-06-17 12:55:48,185:INFO:_display_container: 2
2023-06-17 12:55:48,185:INFO:DecisionTreeClassifier(ccp_alpha=0.0, class_weight=None, criterion='gini',
                       max_depth=None, max_features=None, max_leaf_nodes=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       random_state=7833, splitter='best')
2023-06-17 12:55:48,185:INFO:create_model() successfully completed......................................
2023-06-17 12:55:48,302:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:48,302:INFO:Creating metrics dataframe
2023-06-17 12:55:48,305:INFO:Initializing SVM - Linear Kernel
2023-06-17 12:55:48,305:INFO:Total runtime is 0.4304687658945719 minutes
2023-06-17 12:55:48,305:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:48,306:INFO:Initializing create_model()
2023-06-17 12:55:48,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=svm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:48,306:INFO:Checking exceptions
2023-06-17 12:55:48,306:INFO:Importing libraries
2023-06-17 12:55:48,306:INFO:Copying training dataset
2023-06-17 12:55:48,318:INFO:Defining folds
2023-06-17 12:55:48,319:INFO:Declaring metric variables
2023-06-17 12:55:48,319:INFO:Importing untrained model
2023-06-17 12:55:48,319:INFO:SVM - Linear Kernel Imported successfully
2023-06-17 12:55:48,319:INFO:Starting cross validation
2023-06-17 12:55:48,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:49,685:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:49,762:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:49,796:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:49,850:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:49,975:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,076:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,097:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,100:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,145:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,171:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\utils\_available_if.py", line 32, in __get__
    if not self.check(obj):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\linear_model\_stochastic_gradient.py", line 1235, in _check_proba
    raise AttributeError(
AttributeError: probability estimates are not available for loss='hinge'

  warnings.warn(

2023-06-17 12:55:50,528:INFO:Calculating mean and std
2023-06-17 12:55:50,529:INFO:Creating metrics dataframe
2023-06-17 12:55:50,677:INFO:Uploading results into container
2023-06-17 12:55:50,678:INFO:Uploading model into container now
2023-06-17 12:55:50,678:INFO:_master_model_container: 5
2023-06-17 12:55:50,678:INFO:_display_container: 2
2023-06-17 12:55:50,679:INFO:SGDClassifier(alpha=0.0001, average=False, class_weight=None,
              early_stopping=False, epsilon=0.1, eta0=0.001, fit_intercept=True,
              l1_ratio=0.15, learning_rate='optimal', loss='hinge',
              max_iter=1000, n_iter_no_change=5, n_jobs=-1, penalty='l2',
              power_t=0.5, random_state=7833, shuffle=True, tol=0.001,
              validation_fraction=0.1, verbose=0, warm_start=False)
2023-06-17 12:55:50,679:INFO:create_model() successfully completed......................................
2023-06-17 12:55:50,797:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:50,797:INFO:Creating metrics dataframe
2023-06-17 12:55:50,800:INFO:Initializing Ridge Classifier
2023-06-17 12:55:50,801:INFO:Total runtime is 0.47206879059473666 minutes
2023-06-17 12:55:50,801:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:50,801:INFO:Initializing create_model()
2023-06-17 12:55:50,801:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=ridge, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:50,801:INFO:Checking exceptions
2023-06-17 12:55:50,801:INFO:Importing libraries
2023-06-17 12:55:50,801:INFO:Copying training dataset
2023-06-17 12:55:50,816:INFO:Defining folds
2023-06-17 12:55:50,816:INFO:Declaring metric variables
2023-06-17 12:55:50,816:INFO:Importing untrained model
2023-06-17 12:55:50,816:INFO:Ridge Classifier Imported successfully
2023-06-17 12:55:50,816:INFO:Starting cross validation
2023-06-17 12:55:50,817:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:51,125:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,132:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,133:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,143:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,162:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,177:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,186:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,194:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,216:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,221:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py:138: FitFailedWarning: Metric 'make_scorer(roc_auc_score, needs_proba=True, error_score=0.0, average=weighted, multi_class=ovr)' failed and error score 0.0 has been returned instead. If this is a custom metric, this usually means that the error is in the metric code. Full exception below:
Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 76, in _cached_call
    return cache[method]
KeyError: 'predict_proba'

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\metrics.py", line 130, in _score
    return super()._score(
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 316, in _score
    y_pred = method_caller(clf, "predict_proba", X)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_scorer.py", line 78, in _cached_call
    result = getattr(estimator, method)(*args, **kwargs)
  File "c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py", line 121, in __getattr__
    return getattr(self._final_estimator, name)
AttributeError: 'RidgeClassifier' object has no attribute 'predict_proba'

  warnings.warn(

2023-06-17 12:55:51,924:INFO:Calculating mean and std
2023-06-17 12:55:51,924:INFO:Creating metrics dataframe
2023-06-17 12:55:52,068:INFO:Uploading results into container
2023-06-17 12:55:52,068:INFO:Uploading model into container now
2023-06-17 12:55:52,069:INFO:_master_model_container: 6
2023-06-17 12:55:52,069:INFO:_display_container: 2
2023-06-17 12:55:52,069:INFO:RidgeClassifier(alpha=1.0, class_weight=None, copy_X=True, fit_intercept=True,
                max_iter=None, positive=False, random_state=7833, solver='auto',
                tol=0.0001)
2023-06-17 12:55:52,069:INFO:create_model() successfully completed......................................
2023-06-17 12:55:52,189:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:52,190:INFO:Creating metrics dataframe
2023-06-17 12:55:52,193:INFO:Initializing Random Forest Classifier
2023-06-17 12:55:52,193:INFO:Total runtime is 0.49526876211166376 minutes
2023-06-17 12:55:52,193:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:52,193:INFO:Initializing create_model()
2023-06-17 12:55:52,193:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=rf, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:52,193:INFO:Checking exceptions
2023-06-17 12:55:52,193:INFO:Importing libraries
2023-06-17 12:55:52,193:INFO:Copying training dataset
2023-06-17 12:55:52,208:INFO:Defining folds
2023-06-17 12:55:52,208:INFO:Declaring metric variables
2023-06-17 12:55:52,208:INFO:Importing untrained model
2023-06-17 12:55:52,208:INFO:Random Forest Classifier Imported successfully
2023-06-17 12:55:52,208:INFO:Starting cross validation
2023-06-17 12:55:52,209:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:55,028:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.53s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:55:55,359:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.12s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:55:55,362:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 1.12s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:55:56,875:INFO:Calculating mean and std
2023-06-17 12:55:56,875:INFO:Creating metrics dataframe
2023-06-17 12:55:57,027:INFO:Uploading results into container
2023-06-17 12:55:57,028:INFO:Uploading model into container now
2023-06-17 12:55:57,028:INFO:_master_model_container: 7
2023-06-17 12:55:57,028:INFO:_display_container: 2
2023-06-17 12:55:57,029:INFO:RandomForestClassifier(bootstrap=True, ccp_alpha=0.0, class_weight=None,
                       criterion='gini', max_depth=None, max_features='sqrt',
                       max_leaf_nodes=None, max_samples=None,
                       min_impurity_decrease=0.0, min_samples_leaf=1,
                       min_samples_split=2, min_weight_fraction_leaf=0.0,
                       n_estimators=100, n_jobs=-1, oob_score=False,
                       random_state=7833, verbose=0, warm_start=False)
2023-06-17 12:55:57,029:INFO:create_model() successfully completed......................................
2023-06-17 12:55:57,152:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:57,152:INFO:Creating metrics dataframe
2023-06-17 12:55:57,155:INFO:Initializing Quadratic Discriminant Analysis
2023-06-17 12:55:57,155:INFO:Total runtime is 0.5779687444368997 minutes
2023-06-17 12:55:57,156:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:57,156:INFO:Initializing create_model()
2023-06-17 12:55:57,156:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=qda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:57,156:INFO:Checking exceptions
2023-06-17 12:55:57,156:INFO:Importing libraries
2023-06-17 12:55:57,156:INFO:Copying training dataset
2023-06-17 12:55:57,169:INFO:Defining folds
2023-06-17 12:55:57,169:INFO:Declaring metric variables
2023-06-17 12:55:57,169:INFO:Importing untrained model
2023-06-17 12:55:57,169:INFO:Quadratic Discriminant Analysis Imported successfully
2023-06-17 12:55:57,170:INFO:Starting cross validation
2023-06-17 12:55:57,170:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:55:57,405:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,407:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,431:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,436:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,467:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,479:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,495:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,503:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,539:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:57,553:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\discriminant_analysis.py:926: UserWarning: Variables are collinear
  warnings.warn("Variables are collinear")

2023-06-17 12:55:58,384:INFO:Calculating mean and std
2023-06-17 12:55:58,385:INFO:Creating metrics dataframe
2023-06-17 12:55:58,537:INFO:Uploading results into container
2023-06-17 12:55:58,538:INFO:Uploading model into container now
2023-06-17 12:55:58,538:INFO:_master_model_container: 8
2023-06-17 12:55:58,538:INFO:_display_container: 2
2023-06-17 12:55:58,539:INFO:QuadraticDiscriminantAnalysis(priors=None, reg_param=0.0,
                              store_covariance=False, tol=0.0001)
2023-06-17 12:55:58,539:INFO:create_model() successfully completed......................................
2023-06-17 12:55:58,658:INFO:SubProcess create_model() end ==================================
2023-06-17 12:55:58,658:INFO:Creating metrics dataframe
2023-06-17 12:55:58,661:INFO:Initializing Ada Boost Classifier
2023-06-17 12:55:58,661:INFO:Total runtime is 0.6030687729517618 minutes
2023-06-17 12:55:58,661:INFO:SubProcess create_model() called ==================================
2023-06-17 12:55:58,661:INFO:Initializing create_model()
2023-06-17 12:55:58,662:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=ada, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:55:58,662:INFO:Checking exceptions
2023-06-17 12:55:58,662:INFO:Importing libraries
2023-06-17 12:55:58,662:INFO:Copying training dataset
2023-06-17 12:55:58,676:INFO:Defining folds
2023-06-17 12:55:58,676:INFO:Declaring metric variables
2023-06-17 12:55:58,677:INFO:Importing untrained model
2023-06-17 12:55:58,677:INFO:Ada Boost Classifier Imported successfully
2023-06-17 12:55:58,677:INFO:Starting cross validation
2023-06-17 12:55:58,678:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:02,234:INFO:Calculating mean and std
2023-06-17 12:56:02,234:INFO:Creating metrics dataframe
2023-06-17 12:56:02,398:INFO:Uploading results into container
2023-06-17 12:56:02,399:INFO:Uploading model into container now
2023-06-17 12:56:02,400:INFO:_master_model_container: 9
2023-06-17 12:56:02,400:INFO:_display_container: 2
2023-06-17 12:56:02,400:INFO:AdaBoostClassifier(algorithm='SAMME.R', base_estimator='deprecated',
                   estimator=None, learning_rate=1.0, n_estimators=50,
                   random_state=7833)
2023-06-17 12:56:02,400:INFO:create_model() successfully completed......................................
2023-06-17 12:56:02,518:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:02,518:INFO:Creating metrics dataframe
2023-06-17 12:56:02,521:INFO:Initializing Gradient Boosting Classifier
2023-06-17 12:56:02,521:INFO:Total runtime is 0.6674020806948343 minutes
2023-06-17 12:56:02,521:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:02,522:INFO:Initializing create_model()
2023-06-17 12:56:02,522:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=gbc, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:02,522:INFO:Checking exceptions
2023-06-17 12:56:02,522:INFO:Importing libraries
2023-06-17 12:56:02,522:INFO:Copying training dataset
2023-06-17 12:56:02,534:INFO:Defining folds
2023-06-17 12:56:02,535:INFO:Declaring metric variables
2023-06-17 12:56:02,535:INFO:Importing untrained model
2023-06-17 12:56:02,535:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:56:02,535:INFO:Starting cross validation
2023-06-17 12:56:02,536:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:09,334:INFO:Calculating mean and std
2023-06-17 12:56:09,334:INFO:Creating metrics dataframe
2023-06-17 12:56:09,496:INFO:Uploading results into container
2023-06-17 12:56:09,497:INFO:Uploading model into container now
2023-06-17 12:56:09,497:INFO:_master_model_container: 10
2023-06-17 12:56:09,497:INFO:_display_container: 2
2023-06-17 12:56:09,497:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:56:09,497:INFO:create_model() successfully completed......................................
2023-06-17 12:56:09,616:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:09,616:INFO:Creating metrics dataframe
2023-06-17 12:56:09,619:INFO:Initializing Linear Discriminant Analysis
2023-06-17 12:56:09,619:INFO:Total runtime is 0.785702085494995 minutes
2023-06-17 12:56:09,619:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:09,619:INFO:Initializing create_model()
2023-06-17 12:56:09,619:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=lda, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:09,619:INFO:Checking exceptions
2023-06-17 12:56:09,619:INFO:Importing libraries
2023-06-17 12:56:09,619:INFO:Copying training dataset
2023-06-17 12:56:09,632:INFO:Defining folds
2023-06-17 12:56:09,632:INFO:Declaring metric variables
2023-06-17 12:56:09,632:INFO:Importing untrained model
2023-06-17 12:56:09,632:INFO:Linear Discriminant Analysis Imported successfully
2023-06-17 12:56:09,632:INFO:Starting cross validation
2023-06-17 12:56:09,633:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:11,018:INFO:Calculating mean and std
2023-06-17 12:56:11,019:INFO:Creating metrics dataframe
2023-06-17 12:56:11,183:INFO:Uploading results into container
2023-06-17 12:56:11,184:INFO:Uploading model into container now
2023-06-17 12:56:11,184:INFO:_master_model_container: 11
2023-06-17 12:56:11,184:INFO:_display_container: 2
2023-06-17 12:56:11,185:INFO:LinearDiscriminantAnalysis(covariance_estimator=None, n_components=None,
                           priors=None, shrinkage=None, solver='svd',
                           store_covariance=False, tol=0.0001)
2023-06-17 12:56:11,185:INFO:create_model() successfully completed......................................
2023-06-17 12:56:11,302:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:11,302:INFO:Creating metrics dataframe
2023-06-17 12:56:11,305:INFO:Initializing Extra Trees Classifier
2023-06-17 12:56:11,305:INFO:Total runtime is 0.8138020753860472 minutes
2023-06-17 12:56:11,306:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:11,306:INFO:Initializing create_model()
2023-06-17 12:56:11,306:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=et, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:11,306:INFO:Checking exceptions
2023-06-17 12:56:11,306:INFO:Importing libraries
2023-06-17 12:56:11,306:INFO:Copying training dataset
2023-06-17 12:56:11,319:INFO:Defining folds
2023-06-17 12:56:11,319:INFO:Declaring metric variables
2023-06-17 12:56:11,319:INFO:Importing untrained model
2023-06-17 12:56:11,319:INFO:Extra Trees Classifier Imported successfully
2023-06-17 12:56:11,320:INFO:Starting cross validation
2023-06-17 12:56:11,320:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:14,214:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.81s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:56:14,325:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\pycaret\internal\pipeline.py:260: UserWarning: Persisting input arguments took 0.79s to run.
If this happens often in your code, it can cause performance problems 
(results will be correct in all cases). 
The reason for this is probably some large input arguments for a wrapped
 function (e.g. large strings).
THIS IS A JOBLIB ISSUE. If you can, kindly provide the joblib's team with an
 example so that they can fix the problem.
  fitted_estimator = self._memory_fit(

2023-06-17 12:56:15,771:INFO:Calculating mean and std
2023-06-17 12:56:15,771:INFO:Creating metrics dataframe
2023-06-17 12:56:15,941:INFO:Uploading results into container
2023-06-17 12:56:15,942:INFO:Uploading model into container now
2023-06-17 12:56:15,942:INFO:_master_model_container: 12
2023-06-17 12:56:15,942:INFO:_display_container: 2
2023-06-17 12:56:15,942:INFO:ExtraTreesClassifier(bootstrap=False, ccp_alpha=0.0, class_weight=None,
                     criterion='gini', max_depth=None, max_features='sqrt',
                     max_leaf_nodes=None, max_samples=None,
                     min_impurity_decrease=0.0, min_samples_leaf=1,
                     min_samples_split=2, min_weight_fraction_leaf=0.0,
                     n_estimators=100, n_jobs=-1, oob_score=False,
                     random_state=7833, verbose=0, warm_start=False)
2023-06-17 12:56:15,942:INFO:create_model() successfully completed......................................
2023-06-17 12:56:16,060:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:16,061:INFO:Creating metrics dataframe
2023-06-17 12:56:16,064:INFO:Initializing Extreme Gradient Boosting
2023-06-17 12:56:16,064:INFO:Total runtime is 0.8931187470753986 minutes
2023-06-17 12:56:16,064:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:16,064:INFO:Initializing create_model()
2023-06-17 12:56:16,064:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=xgboost, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:16,064:INFO:Checking exceptions
2023-06-17 12:56:16,064:INFO:Importing libraries
2023-06-17 12:56:16,064:INFO:Copying training dataset
2023-06-17 12:56:16,077:INFO:Defining folds
2023-06-17 12:56:16,077:INFO:Declaring metric variables
2023-06-17 12:56:16,077:INFO:Importing untrained model
2023-06-17 12:56:16,078:INFO:Extreme Gradient Boosting Imported successfully
2023-06-17 12:56:16,078:INFO:Starting cross validation
2023-06-17 12:56:16,079:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:22,361:INFO:Calculating mean and std
2023-06-17 12:56:22,362:INFO:Creating metrics dataframe
2023-06-17 12:56:22,535:INFO:Uploading results into container
2023-06-17 12:56:22,535:INFO:Uploading model into container now
2023-06-17 12:56:22,536:INFO:_master_model_container: 13
2023-06-17 12:56:22,536:INFO:_display_container: 2
2023-06-17 12:56:22,536:INFO:XGBClassifier(base_score=None, booster='gbtree', callbacks=None,
              colsample_bylevel=None, colsample_bynode=None,
              colsample_bytree=None, early_stopping_rounds=None,
              enable_categorical=False, eval_metric=None, feature_types=None,
              gamma=None, gpu_id=None, grow_policy=None, importance_type=None,
              interaction_constraints=None, learning_rate=None, max_bin=None,
              max_cat_threshold=None, max_cat_to_onehot=None,
              max_delta_step=None, max_depth=None, max_leaves=None,
              min_child_weight=None, missing=nan, monotone_constraints=None,
              n_estimators=100, n_jobs=-1, num_parallel_tree=None,
              objective='binary:logistic', predictor=None, ...)
2023-06-17 12:56:22,536:INFO:create_model() successfully completed......................................
2023-06-17 12:56:22,655:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:22,656:INFO:Creating metrics dataframe
2023-06-17 12:56:22,659:INFO:Initializing Light Gradient Boosting Machine
2023-06-17 12:56:22,659:INFO:Total runtime is 1.0030354261398313 minutes
2023-06-17 12:56:22,659:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:22,659:INFO:Initializing create_model()
2023-06-17 12:56:22,659:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=lightgbm, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:22,659:INFO:Checking exceptions
2023-06-17 12:56:22,659:INFO:Importing libraries
2023-06-17 12:56:22,659:INFO:Copying training dataset
2023-06-17 12:56:22,674:INFO:Defining folds
2023-06-17 12:56:22,674:INFO:Declaring metric variables
2023-06-17 12:56:22,674:INFO:Importing untrained model
2023-06-17 12:56:22,675:INFO:Light Gradient Boosting Machine Imported successfully
2023-06-17 12:56:22,675:INFO:Starting cross validation
2023-06-17 12:56:22,675:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:24,570:INFO:Calculating mean and std
2023-06-17 12:56:24,571:INFO:Creating metrics dataframe
2023-06-17 12:56:24,751:INFO:Uploading results into container
2023-06-17 12:56:24,751:INFO:Uploading model into container now
2023-06-17 12:56:24,752:INFO:_master_model_container: 14
2023-06-17 12:56:24,752:INFO:_display_container: 2
2023-06-17 12:56:24,752:INFO:LGBMClassifier(boosting_type='gbdt', class_weight=None, colsample_bytree=1.0,
               importance_type='split', learning_rate=0.1, max_depth=-1,
               min_child_samples=20, min_child_weight=0.001, min_split_gain=0.0,
               n_estimators=100, n_jobs=-1, num_leaves=31, objective=None,
               random_state=7833, reg_alpha=0.0, reg_lambda=0.0, silent='warn',
               subsample=1.0, subsample_for_bin=200000, subsample_freq=0)
2023-06-17 12:56:24,752:INFO:create_model() successfully completed......................................
2023-06-17 12:56:24,871:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:24,871:INFO:Creating metrics dataframe
2023-06-17 12:56:24,874:INFO:Initializing Dummy Classifier
2023-06-17 12:56:24,874:INFO:Total runtime is 1.0399518966674803 minutes
2023-06-17 12:56:24,874:INFO:SubProcess create_model() called ==================================
2023-06-17 12:56:24,874:INFO:Initializing create_model()
2023-06-17 12:56:24,874:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=dummy, fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=True, predict=True, fit_kwargs={}, groups=None, refit=False, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=<pycaret.internal.display.display.CommonDisplay object at 0x00000214D0D42B20>, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:24,874:INFO:Checking exceptions
2023-06-17 12:56:24,874:INFO:Importing libraries
2023-06-17 12:56:24,874:INFO:Copying training dataset
2023-06-17 12:56:24,887:INFO:Defining folds
2023-06-17 12:56:24,887:INFO:Declaring metric variables
2023-06-17 12:56:24,887:INFO:Importing untrained model
2023-06-17 12:56:24,887:INFO:Dummy Classifier Imported successfully
2023-06-17 12:56:24,887:INFO:Starting cross validation
2023-06-17 12:56:24,888:INFO:Cross validating with StratifiedKFold(n_splits=10, random_state=None, shuffle=False), n_jobs=-1
2023-06-17 12:56:25,165:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,167:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,206:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,211:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,217:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,226:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,245:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,254:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,262:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:25,275:WARNING:c:\users\brand\appdata\local\programs\python\python39\lib\site-packages\sklearn\metrics\_classification.py:1344: UndefinedMetricWarning: Precision is ill-defined and being set to 0.0 due to no predicted samples. Use `zero_division` parameter to control this behavior.
  _warn_prf(average, modifier, msg_start, len(result))

2023-06-17 12:56:26,133:INFO:Calculating mean and std
2023-06-17 12:56:26,134:INFO:Creating metrics dataframe
2023-06-17 12:56:26,319:INFO:Uploading results into container
2023-06-17 12:56:26,320:INFO:Uploading model into container now
2023-06-17 12:56:26,320:INFO:_master_model_container: 15
2023-06-17 12:56:26,320:INFO:_display_container: 2
2023-06-17 12:56:26,321:INFO:DummyClassifier(constant=None, random_state=7833, strategy='prior')
2023-06-17 12:56:26,321:INFO:create_model() successfully completed......................................
2023-06-17 12:56:26,439:INFO:SubProcess create_model() end ==================================
2023-06-17 12:56:26,439:INFO:Creating metrics dataframe
2023-06-17 12:56:26,444:INFO:Initializing create_model()
2023-06-17 12:56:26,444:INFO:create_model(self=<pycaret.classification.oop.ClassificationExperiment object at 0x00000214C65E6D60>, estimator=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), fold=StratifiedKFold(n_splits=10, random_state=None, shuffle=False), round=4, cross_validation=False, predict=False, fit_kwargs={}, groups=None, refit=True, probability_threshold=None, experiment_custom_tags=None, verbose=False, system=False, add_to_model_list=True, metrics=None, display=None, model_only=True, return_train_score=False, kwargs={})
2023-06-17 12:56:26,444:INFO:Checking exceptions
2023-06-17 12:56:26,445:INFO:Importing libraries
2023-06-17 12:56:26,445:INFO:Copying training dataset
2023-06-17 12:56:26,460:INFO:Defining folds
2023-06-17 12:56:26,460:INFO:Declaring metric variables
2023-06-17 12:56:26,460:INFO:Importing untrained model
2023-06-17 12:56:26,460:INFO:Declaring custom model
2023-06-17 12:56:26,460:INFO:Gradient Boosting Classifier Imported successfully
2023-06-17 12:56:26,461:INFO:Cross validation set to False
2023-06-17 12:56:26,461:INFO:Fitting Model
2023-06-17 12:56:31,066:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:56:31,066:INFO:create_model() successfully completed......................................
2023-06-17 12:56:31,197:INFO:_master_model_container: 15
2023-06-17 12:56:31,197:INFO:_display_container: 2
2023-06-17 12:56:31,198:INFO:GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False)
2023-06-17 12:56:31,198:INFO:compare_models() successfully completed......................................
2023-06-17 12:56:31,203:INFO:Initializing save_model()
2023-06-17 12:56:31,203:INFO:save_model(model=GradientBoostingClassifier(ccp_alpha=0.0, criterion='friedman_mse', init=None,
                           learning_rate=0.1, loss='log_loss', max_depth=3,
                           max_features=None, max_leaf_nodes=None,
                           min_impurity_decrease=0.0, min_samples_leaf=1,
                           min_samples_split=2, min_weight_fraction_leaf=0.0,
                           n_estimators=100, n_iter_no_change=None,
                           random_state=7833, subsample=1.0, tol=0.0001,
                           validation_fraction=0.1, verbose=0,
                           warm_start=False), model_name=best_model, prep_pipe_=Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                                              missing_values=nan,
                                                              strategy='most_frequent',
                                                              verbose='deprecated'))),
                ('onehot_encoding',
                 TransformerWrapper(exclude=None,
                                    include=['gender', 'smoking_history'],
                                    transformer=OneHotEncoder(cols=['gender',
                                                                    'smoking_history'],
                                                              drop_invariant=False,
                                                              handle_missing='return_nan',
                                                              handle_unknown='value',
                                                              return_df=True,
                                                              use_cat_names=True,
                                                              verbose=0)))],
         verbose=False), verbose=True, use_case=MLUsecase.CLASSIFICATION, kwargs={})
2023-06-17 12:56:31,203:INFO:Adding model into prep_pipe
2023-06-17 12:56:31,212:INFO:best_model.pkl saved in current working directory
2023-06-17 12:56:31,217:INFO:Pipeline(memory=FastMemory(location=C:\Users\brand\AppData\Local\Temp\joblib),
         steps=[('numerical_imputer',
                 TransformerWrapper(exclude=None,
                                    include=['age', 'hypertension',
                                             'heart_disease', 'bmi',
                                             'HbA1c_level',
                                             'blood_glucose_level'],
                                    transformer=SimpleImputer(add_indicator=False,
                                                              copy=True,
                                                              fill_value=None,
                                                              keep_empty_features=False,
                                                              missing_values=nan,
                                                              strate...
                                            criterion='friedman_mse', init=None,
                                            learning_rate=0.1, loss='log_loss',
                                            max_depth=3, max_features=None,
                                            max_leaf_nodes=None,
                                            min_impurity_decrease=0.0,
                                            min_samples_leaf=1,
                                            min_samples_split=2,
                                            min_weight_fraction_leaf=0.0,
                                            n_estimators=100,
                                            n_iter_no_change=None,
                                            random_state=7833, subsample=1.0,
                                            tol=0.0001, validation_fraction=0.1,
                                            verbose=0, warm_start=False))],
         verbose=False)
2023-06-17 12:56:31,217:INFO:save_model() successfully completed......................................
